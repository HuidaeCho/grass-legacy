$Id: SUBMITTING,v 1.5 2000-11-19 12:24:16 markus Exp $

Dear (new) GRASS Developer,

When submitting to GRASS CVS repositiory, please take
care of following rules:

- For programming style, please see below.

- Get the latest GRASS 5 Programmer's Manual here:
  http://www.geog.uni-hannover.de/grass/grassdevel.html#prog

  or (better) grab it from GRASS CVS server (Latex):
    cvs -z3 co progmangrass50

- Add a header section to each file you submit and make sure you include
  the copyright:
  Example:

/*
* <Id flag - see STYLE_PROGRAMMING for proper syntax>
*
****************************************************************************
* 	               -- GRASS Development Team --
*
* MODULE: 	GRASS gis library
* FILENAME:	env.c
* AUTHOR(S):	Original author unknown - probably CERL
*  	    	Justin Hickey - Bangkok Thailand - jhickey@hpcc.nectec.or.th
*   	    	Roger Bivand - rsb@reclus.nhh.no
* PURPOSE: 	To provide functionality for GRASS programs to set and get
*  	    	environment variables. The set environment functions can set
*  	    	variables for the duration of the program, or variables can be
*  	    	set permanently by adding them to the GISRC file. The get
*  	    	environment functions simply get the given variable from the
*  	    	environment regardless of whether it is permanent or not. 
*  	    	Functions are also provided to read and write the GISRC file.
*  	    	This file has been rewritten by Justin Hickey.
* DATE CREATED: Jul 14 2000
* COPYRIGHT:  	(C) 2000 by the GRASS Development Team
*
*   	    	This program is free software under the GPL (>=v2)
*   	    	Read the file COPYING that comes with GRASS for details.
*
*****************************************************************************/

  The copyright protects your rights according to GNU GPL (www.gnu.org).

- Place your module into the appropriate directory:
  - libes go into src/libes/
  - raster goes into src/raster/
  - vector goes into src/mapdev/
  - sites goes into src/sites
  - ...

- Add the module's directory name (pointing to the local Gmakefile)
  to the compile list at src/CMD/lists/GRASS

- Place the documentation in HTML format into html/html/ and
  add it to the module's list in html/
  Easiest way is to modify an existing HTML page for your purposes
  (to get the page style). There is a local README telling more details.
  The online WWW man pages will be updated over-night by CVS.

- Tell the other developers about it:
   grass5@geog.uni-hannover.de
 
  To subscribe to this list, see
  http://www.geog.uni-hannover.de/grass/grassdevel.html

- In case of question feel free to contact the developers at above
  mailing list.

That's it. We are glad to receive your contributions!


-----------------------------------------------------------------------
GRASS GIS programming style standards

$Id: SUBMITTING,v 1.5 2000-11-19 12:24:16 markus Exp $

Please improve this list!
 
 Get the latest GRASS 5 Programmer's Manual here:
   http://www.geog.uni-hannover.de/grass/grassdevel.html

 or (better) grab it from CVS server (Latex):
   cvs -z3 co progmangrass50

-----------------------------------------------------------
GRASS GIS programming style standards

1. Use the directory structure to place your module

2. documents go to
    ./html and
    ./man
   See local examples about documentation style. To convert
   to MAN format, the g.html2man can be used.

3. When writing Gmakefiles, use the current standard
   [insert module example here]

   Take care of this:

   Couple notes for your Gmakefiles: 
     - do not add libraries on a link line after the $(XDRLIB) $(MATHLIB)
     - please add them before these
     - The XDRLIB and MATHLIB may not go into the $(LIBES) line, but only
       into the $(CC) line.

4. Platform dependent code:
   Do not remove #ifdef __CYGWIN__ and/or #ifndef __CYGWIN__ lines and 
   their encapsulated lines from source code (one example was that someone
   removed drand48 definition.)

5. Insert return statements for functions

6. Use fprintf instead of printf

7. Put a new line at end-of-file

8. Don't use C++ comment style! This confuses several compilers.
   Use instead:
       /* C-comments */

9. If you add the CVS Id flag (<$>Id<$>) (without angle brackets)

    to a file for CVS-versioning, note that this is not allowed in the
    *first* line of a comment. Some compilers will get confused. Note do
    NOT include the angle brackets <>

    Forbidden:

    /* <$>Id<$> */
 
    Allowed:
    /*
     * <$>Id<$>
     */

10. For consistency, use README rather than README.txt.

11. Add your copyright notice (see template above)

...
[add further hints]
