$Id: TODO,v 1.25 2000-10-13 17:13:21 markus Exp $

TODO for GRASS GIS:

See ONGOING for ONGOING GRASS projects.

---------------------------------------------------------------------
Wishlist for GRASS 5
---------------------------------------------------------------------

- Fix the bugs described in BUGS

Configure:
- update missing features in "configure" (see src/CMD/head/head.in)
     - search for PQLIB, PQINCPATH: PostgreSQL stuff
     - search for PNGINC, PNGLIB: PNG graphics library
     - search for TIFFINCPATH, TIFFLIBPATH
     - search for JPEGINCPATH, JPEGLIBPATH
     - search for MESA (usr/include or usr/include/GL ?)
     - libg2c is required to make r.fill.dir, but configure doesn't check 
       for it's availability
     - search for "yacc" and "(f)lex"
     - search, if odbc driver lib is present (src/libes/dbms/drivers/odbc/)
  (Being worked on by )


--------------------------------------------------------------------
Removal of absolute path codings:
 - etc/monitorcap:
   Here the paths should be replaced by $GISBASE environment

--------------------------------------------------------------------
Regression test suite:
 There are already some testing programs in the source code (e. g.               
 src/libes/gis/TESTS, src/libes/datetime/tests). Not a real regression           
 testing suite, but may be good as a starting point.   
 A testgrass.sh is stored in this directory. Please add further test
 routines.
 (Being worked on by )

--------------------------------------------------------------------
Font selection:
- add truetype support (replace old font system). This is urgently required
  for internationalization. Suggestion: Use "FreeType"
  http://freetype.sourceforge.net
  (Being worked on by )

---------------------------------------------------------------------
Multiple languages support:

- depends on truetype support
- learn from KDE/GNOME etc.

---------------------------------------------------------------------

Libraries:
- src/libes/gis/readsites.c: Required is a new function which allows
  to read an attribute/dimension selectable by user. Useful 
  in order to select which attribute to be converted 
  (assuming multi-attribute sites lists).
  (Being worked on by Markus, assistance wanted)

- new 3D vector format: evetually http://gts.sourceforge.net/ ??
  (Being worked on by )

- TIN support: Probably use this library:
    http://www.cs.cmu.edu/~quake/triangle.html
  (Being worked on by )

- Metadata: improved support, probably write a GRASS daemon serving
  the metadata for external applications like "R" statistics interface

- Parallel CPU support

---------------------------------------------------------------------
CELL driver
- update to 24bit
  (Being worked on by )                  

---------------------------------------------------------------------
Package:
- split into packages: GRASS-CORE, GRASS-Raster, ...
  (Being worked on by )

- reorganize directory structure

---------------------------------------------------------------------
Lock system:

Comment:
Some lockfiles have to be global, just think of the number of
graphic display pipes used or physical inputs devices.
So two ways from there to improve the situation:
 
      Make the locking executables setgid or setuid.
      (and have just one executable doing the locking.)
      And/or use the /tmp directory.
 
      Localise all global lockable resources.
      (Unlikely to work.)
 Bernhard

- this might be related to a daemnon serving a session key (see there).

---------------------------------------------------------------------
Modules:

-IMPORT/EXPORT modules:
  They should read/write from current directory instead of subdirectory
  in mapset.
  v.in.shape/v.out.shape and m.in.e00 already meet this convention.

- d.legend:
  * there is no facility to place the legend     
    exactly on the screen and also control the size of the text and boxes           
    d.frames is not adequate..finer control is needed
  * For categorical maps with more than 10 classes, where user                   
    discrimination among colors becomes difficult, there should be a flash 
    utility. Based on d.legend ... we should be able to click on any legend 
    box and have the corresponding class flash on the map (on-off sequence
    with user defined color).

- g.list, g.remove should accept wildcards (*, ?)
  for convenience

- g.manual: change list of manual pages in g.manual
  organized according to objects (vector files, raster files, ...)
  not to "status" of module (which is even confused at time)
  (Being worked on by )

- ps.map:
  set CC option "-fwritable-strings" on Linux or, better, update ps.map!
  (Being worked on by )

- r.buffer: should save info about used buffers into map history
  (Being worked on by )

- r.info 
   should also report statistics (min, max, mean, stddev, 1st            
   quartile, median, 3rd quartile and sum)
   (merge function of r.univar into r.info)

- etc/monitorcap: use relative paths based on $GISBASE
  (Being worked on by Justin)

- fix s.to.rast and s.to.vect to accept site lists created
  by r.to.sites
  (Being worked on by Eric Mitchell?)

- v.buffer: write it
  (Being worked on by)

- v.digit:
   Label: M- multiple un-label: it would be a good idea to first select
          all lines/areas, then confirmation *once* only

- NVIZ:
    - Z axis scalable when displaying 3D sites
      (Being worked on by )

    - eventually color problem in lat/long locations
      (Being worked on by )

    - high resolution output (definable extent like CELL driver)
      (Being worked on by 
       probably Bob Covill <bcovill@tekmap.ns.ca>)

    - fix legend, scale and box drawings


- tcltkgrass:
  Change the tcltkgrass code so that lists of choices appear as
  a list instead of needing to use a push button to create the
  list. For example when using d.rast we must click a "Raster"
  button to get a list of raster files instead of having the
  raster files appear automatically when we call the d.rast
  module from the menu (edit gui.tcl)
  (Being worked on by )

---------------------------------------------------------------------
From ddgray@armadce.demon.co.uk Tue Sep 26 22:31:31 2000

The following references to Numerical Recipes was found.

Shortlist.

*r.proj
*r.surf.fractal
*r.surf.gauss
*r.surf.random
*i.cca
*i.pca
*i.zc
*i.fft
i.shape
*r.param.scale
*d.param.scale

* currently in `main' !!


Details.

r.proj:  Makes reference to algorithm in cmd/bilinear.c, I will have to
check that it is not the same code. I think the author just used the
maths from the book.

r.surf.fractal: Uses NR algorithm for fft in fft.c.  As above.

r.surf.gauss: Uses NR algorithm for Gaussian random generator. As above

r.surf.random: As for r.surf.gauss but uses linear random generator.

i.cca :  *PROBLEM*. Although `based on' Numerical Recipes routines, the
authors considered it covered by NR's copyright. See comments in
i.cca/cmd/jacobi.c. This is an eigenvector routine so can be replaced.

Similar considerations apply to i.pca, i.zc, i.fft and i.shape (in
src.contrib/CERL). These use either eigsrt (a simple routine for sorting
eigensystems), or fourn (for fast fourier transforms). These are easy to
replace.

r.param.scale, d.param.scale: These contain considerable tracts of NR
stuff, including the NR data types. They will require more work to
replace. 

It's difficult to know how much more NR stuff there is around, as the
last two in particular don't acknowledge the NR dependency.


Can I suggest moving the last two at least to src.nonGPL, so that we can
retain a working copy of the functions till the offending routines can
be replaced, as they would be in the slot held by the existing modules.
The other routines require only minor modifications, so we can patch
them all sometime during the freeze.

Regards

David

