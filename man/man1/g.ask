.TH g.ask
.SH NAME
\fIg.ask\fR  \- Prompts the user for the names of GRASS data base files.
.br
\fI(GRASS File Management Program)\fR
.SH SYNOPSIS
\fBg.ask help\fR
.br
\fBg.ask type\*=\fIname\fR [\fBprompt\*=\fI"string"\fR] \fBelement\*=\fIname\fR [\fBdesc\*=\fI"string"\fR] \fBunixfile\*=\fIname\fR
.SH DESCRIPTION
\fIg.ask\fR is designed for shell scripts that need to prompt the user for the name of
a data base file in the user's current GRASS location.
After \fIg.ask\fR is invoked with needed parameters,
it will query the user for a file name of the specified
\fItype\fR and \fIelement\fR.
After the user responds to this query, the program will write four lines
to the UNIX output file specified by \fIunixfile\fR.
.LP
\fBParameters:\fR
.IP \fBtype\*=\fIname\fR 18
The type of query.  Options for \fIname\fR are \fIold\fR, \fInew\fR,
\fIany\fR, and \fImapset\fR;  their functions are given below.
"New", "any", and "mapset" only look in the user's current mapset.
.RS
.IP \fBold\fR 8
For existing data files anywhere in the user's mapset search path.
.IP \fBnew\fR 
Used to create a new file in the current mapset, which must not
already exist there (if a file with this name exists there,
it will not be overwritten).
.IP \fBany\fR 
Creates a file in the current mapset, which may or may not
already exist there.  If a file with this name exists in the
current mapset, it will be overwritten;
if not, a new file with this name will be created.
.IP \fBmapset\fR 
For files that must exist in the current mapset
The shell write wants the name of a file which exists
in the user's current mapset.  This type would
used instead of "old" if the file is to be modified.
.RE
.IP \fBprompt\*="\fIstring\fR" 18
The prompt to be displayed to the user.  If more than one word, the prompt
should be enclosed within double quotes ("").
.IP \fBelement\*=\fIname\fR
The name of the GRASS data base element (i.e., directory under a GRASS mapset)
whose files are to be queried.
.IP \fBdesc\*="\fIstring\fR"
A short description of the data base element which is meaningful to the user.
If description contains more than one word, it should be enclosed within
double quotes ("").
.IP \fBunixfile\*=\fIname\fR
The name of a UNIX file to store the user's response.  See next section
for what is written to this file and how it can be used by shell scripts.
.SH OUTPUT
Upon receiving the user's response to its request for a file name,
\fIg.ask\fR writes four lines to the specified \fIunixfile\fR;
this output file is placed in the user's current working directory,
unless otherwise specified, and contains the following lines:
.LP
.nf
.RS
name\*='\fIsome_name\fR'
mapset\*='\fIsome_mapset\fR'
fullname\*='\fIsome_fullname\fR'
file\*='\fIsome_fullpath\fR'
.RE
.fi

The output is /bin/sh commands to set the variable
.I name
to the file name specified by the user
(of the \fIelement\fR and \fItype\fR requested by \fIg.ask\fR),
.I mapset
to the GRASS mapset in which this file resides (or will be created),
.I fullname
is the name with the mapset embedded in it,
and 
.I file
to the full UNIX path name identifying this file.
These variables may be set in the /bin/sh as follows:
.RS
\fI\&. unixfile\fR
.RE

The . is a shell command which means read the
.I unixfile
and execute the commands found there.  It is NOT part of the 
.I unixfile
name and MUST be followed by a space.
.SH NOTES
The user may choose to simply hit the return key and not enter a file name.
If this happens the variables will be set as follows:

.nf
.RS
name\*=
mapset\*=
fullname\*=
file\*=
.RE
.fi

The following is a way to test for this case:
.nf
.RS
if [ ! \*(lq$file\*(rq ]
then
.RS
exit
.RE
fi
.RE
.SH SEE ALSO
.I d.ask,
.I g.filename,
.I g.findfile,
.I g.gisenv
.SH AUTHOR
Michael Shapiro, U.S. Army Construction Engineering Research Laboratory
