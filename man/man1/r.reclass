.TH r.reclass
.SH NAME
\fIr.reclass\fR \- Creates a new map layer whose category values
are based upon the user's reclassification of categories in an
existing raster map layer.
.br
.I (GRASS Raster Program)
.SH SYNOPSIS
\fBr.reclass\fR
.br
\fBr.reclass help\fR
.br
\fBr.reclass input\*=\fIname \fBoutput\*=\fIname \fR[\fBtitle\*=\fIname\fR]
.SH DESCRIPTION
\fIr.reclass\fR creates an \fIoutput\fR map layer
based on an \fIinput\fR raster map layer.
The output map layer will be a reclassification of the input map layer
based on reclass rules input to \fIr.reclass\fR, and can be
treated in much the same way that raster files are treated.
A \fItitle\fR for the output map layer may be (optionally)
specified by the user.

The reclass rules are read from standard input (i.e., from the keyboard,
redirected from a file, or piped through another program).

The program will be run non-interactively if the user specifies
the \fIname\fR of the raster map layer to be reclassified,
the \fIname\fR of an output layer to hold reclass rules,
and (optionally) the \fIname\fR of a title for the output map:
.LP
.RS
\fBr.reclass input\*=\fIname \fBoutput\*=\fIname \fR[\fBtitle\*=\fIname\fR]
.RE
.LP
After the user types in the above information on the command line,
the program will (silently) prompt the user for reclass rules to
be applied to the input map layer categories.
The form of these rules is described in further detail in the sections
on non-interactive program use reclass rules and examples, below.

Alternately, the user can simply type \fBr.reclass\fR on the command line,
without program arguments.  In this case, the user will be prompted for
all needed inputs.

Before using \fIr.reclass\fR one must know the following:
.IP 1 5
The new categories desired;  and, which old categories fit into 
which new categories.
.IP 2 5
The names of the new categories.
.SH INTERACTIVE PROGRAM USE:  EXAMPLE
Suppose we want to reclassify the raster map layer \fIroads\fR,
consisting of five categories, into the three new categories:
paved roads, unpaved roads, and railroad tracks.
The user is asked whether the reclass table is to be established
with each category value initially set to 0, or with each category
value initially set to its own value.
A screen like that shown below then appears, listing the categories
of the \fIroads\fR raster map layer to be reclassified and prompting
the user for the new category values to be assigned them.

.if t \fB
.ne 15
.TS
center;
c s s s
c s s s
l l l l.
ENTER NEW CATEGORY NUMBERS FOR THESE CATEGORIES

OLD CATEGORY NAME	OLD	NEW	 
	NUM	NUM
no data	0	0__
Hard Surface, 2 lanes	1	0__
Loose Surface, 1 lane	2	0__
Improved Dirt	3	0__
Unimproved Dirt Trail	4	0__
Railroad, single track	5	0__

.T&
c s s s.
AFTER COMPLETING ALL ANSWERS, HIT <ESC> TO CONTINUE
(OR <Ctrl-C> TO CANCEL)
.TE
\fR

.LP
In the following screen the new category values have been entered
beside the appropriate old category names.  
Cells assigned category values 2, 3, and 4 in the old raster
map layer are now assigned the new category value 2 in the reclassed map;
cell data formerly assigned to category value 5 in the old raster map
map are now assigned the new category value 3 in the reclassed map.

.if t \fB
.ne 15
.TS
center;
c s s s
c s s s
l l l l.
ENTER NEW CATEGORY NUMBERS FOR THESE CATEGORIES

OLD CATEGORY NAME	OLD	NEW	 
	NUM	NUM
no data	0	0__
Hard Surface, 2 lanes	1	1__
Loose Surface, 1 lane	2	2__
Improved Dirt	3	2__
Unimproved Dirt Trail	4	2__
Railroad, single track	5	3__

.T&
c s s s.
AFTER COMPLETING ALL ANSWERS, HIT <ESC> TO CONTINUE
(OR <Ctrl-C> TO CANCEL)
.TE
\fR

.LP
Hitting the escape key <ESC> will bring up the following screen, which
prompts the user to enter a new title and category label for the newly
.B reclassed
categories.

.if t \fB
.ne 15
.TS
center;
c s s
l s s
l s s
c l l.
ENTER NEW CATEGORY NAMES FOR THESE CATEGORIES

TITLE:  Roads Reclassified
CAT	NEW CATEGORY NAME	 
NUM
0	no data
1	Paved Roads
2	Unpaved Roads
3	Railroad, single track

.T&
c s.
AFTER COMPLETING ALL ANSWERS, HIT <ESC> TO CONTINUE
(OR <Ctrl-C> TO CANCEL)
.TE
\fR

Based upon the information supplied by the user in the above sample screens,
the new output map, supporting category, color, history, and header files
are created.
.SH NON-INTERACTIVE PROGRAM USE:  RECLASS RULES
In non-interactive program use, the names of an input map, output map,
and output map title are given on the command line.
However, the reclass rules are still read from standard input
(i.e., from the keyboard,
redirected from a file, or piped through another program).

Once the user has specified an input raster map layer,
output map layer name, and (optionally) output map layer title by typing

.RS
\fBr.reclass input\*=\fIname \fBoutput\*=\fIname \fR[\fBtitle\*=\fIname\fR]
.RE

Each line of input must have the following format:

.RS
\fBinput_categories\*=\fIoutput_category  \fR[\fIlabel\fR]
.RE

where the input lines specify the category values
in the input raster map layer to be reclassified to the
new \fIoutput_category\fR category value.
Specification of a \fIlabel\fR to be associated with
the new output map layer category is optional.  If specified, it is
recorded as the category label for the new category value.
The equal sign = is required.  The \fIinput_category(ies)\fR may consist
of single category values or a range of such values
in the format "\fIlow\fR thru \fIhigh\fR."
The word "thru" must be present.

A line containing only the word 
.B end
terminates the input.
.SH NON-INTERACTIVE PROGRAM USE:  EXAMPLES
The following examples may help clarify the reclass rules.

.IP 1 3
This example reclassifies categories 1, 3 and 5 in the input raster map layer
to category 1 with category label "poor quality" in the output map layer,
and reclassifies input raster map layer categories 2, 4, and 6
to category 2 with the label "good quality" in the output map layer.

.RS
.RS
.TS
l l l l.
1 3 5	\&\*=	1	poor quality
2 4 6	\&\*=	2	good quality
.TE
.RE
.RE

.IP 2
This example reclassifies input raster map layer categories 1 thru 10 to output 
map layer category 1, input map layer categories 11 thru 20 to output map layer
category 2, and input map layer categories 21 thru 30 to output map layer
category 3, all without labels.

.RS
.RS
.TS
l l l.
 1 thru 10	\&\*=	1
11 thru 20	\&\*=	2
21 thru 30	\&\*=	3
.TE
.RE
.RE

.IP 3
Subsequent rules override previous rules.  Therefore, the below example
reclassifies input raster map layer categories 1 thru 19 and 51 thru 100
to category 1 in the output map layer,
input raster map layer categories 20 thru 24 and 26 thru 50 to
the output map layer category 2, and input raster map layer category 25
to the output category 3.

.RS
.RS
.TS
c l l l.
1 thru 100	\&\*=	1	poor quality
20 thru 50	\&\*=	2	medium quality
25	\&\*=	3	good quality
.TE
.RE
.RE

.IP 4
The previous example could also have been entered as:

.ne 6
.RS
.RS
.TS
c l l l.
 1 thru 19  51 thru 100	\&\*=	1	poor quality
20 thru 24  26 thru 50	\&\*=	2	medium quality
25	\&\*=	3	good quality
.TE
.RE

or as:

.ne 6
.RS
.TS
c l l l.
 1 thru 19	\&\*=	1	poor quality
51 thru 100	\&\*=	1
20 thru 24	\&\*=	2
26 thru 50	\&\*=	2	medium quality
25	\&\*=	3	good quality
.TE
.RE
.RE

.LP
The final example was given to show how the labels are handled.  If a new
category value appears in more than one rule (as is the case with new 
category values 1 and 2),
the last label which was specified becomes the label for that category.
In this case the labels are assigned exactly as in the two previous examples.
.SH NOTES
In fact, the \fIr.reclass\fR program does \fInot\fR generate any new raster
map layers (in the interests of disk space conservation).  Instead, a
\fBreclass table\fR is stored which will be used to reclassify the
original raster map layer each time the new (reclassed) map name
is requested.  As far as the user (and programmer) is concerned, that
raster map has been created.
Also note that although the user can generate a \fIr.reclass\fR map
which is based on another \fIr.reclass\fR map,
the new \fIr.reclass\fR map map will be stored in GRASS as a reclass
of the \fIoriginal\fR raster map on which the first reclassed map was
based.  Therefore, while GRASS allows the user to provide \fIr.reclass\fR 
map layer information which is based on an already reclassified map
(for the user's convenience), no \fIr.reclass\fR map layer
(i.e., \fIreclass table\fR) will ever be \fIstored\fR
as a \fIr.reclass\fR of a \fIr.reclass\fR.

To convert a reclass map to a regular raster map layer, set your
geographic region settings to match the settings in the header for the
reclass map (an ASCII file found under the \fIcellhd\fR directory, or
viewable by running \fIr.support\fR) and then run \fIr.resample\fR.

\fIr.mapcalc\fR can also be used to convert a reclass map to a regular
raster map layer:
.LP
.RS
\fBr.mapcalc raster_map\*=reclass_map\fR
.RE
.LP
where \fIraster_map\fR is the name to be given to the new raster map,
and \fIreclass_map\fR is an existing reclass map.
.SH BEWARE
Because \fIr.reclass\fR generates a table referencing some original
raster map layer rather than creating a reclassed raster map layer,
a \fIr.reclass\fR map layer will no longer be accessible if
the original raster map layer upon which it was based is later removed.

A \fIr.reclass\fR map is not a true raster map layer.
Rather, it is a table of reclassification values which reference the
input raster map layer.  Therefore, users who wish to retain reclassified
map layers must also save the original input raster map layers
from which they were generated.

Category values which are not explicitly reclassified to a new value
by the user will be reclassified to 0.
.SH "SEE ALSO"
.I r.resample,
.I r.rescale
.SH AUTHORS
James Westervelt, U.S. Army Construction Engineering Research Laboratory
.br
Michael Shapiro, U.S. Army Construction Engineering Research Laboratory
