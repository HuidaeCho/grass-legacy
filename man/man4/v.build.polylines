.TH v.build.polylines 
.SH NAME
\fIv.build.polylines\fR \- Build polylines from lines.  
.br
.I (GRASS Vector Program)
.SH SYNOPSIS
\fBv.build.polylines\fR
.br
\fBv.build.polylines help\fR
.br
\fBv.build.polylines \fR[\fB-acoq\fR] \fBinput\*=\fIname\fR \fBoutput\*=\fIname\fR \fItype=name\fR 
.SH DESCRIPTION
\fIv.build.polylines\fR builds polylines from the lines in a binary vector
file.  It outputs the polylines in either binary or ASCII vector format, and
if requested, copies the attribute and category files from the original file.

A line is a single straight line segment defined by one start node,
one end node and no other nodes.  A polyline is also defined by one
start node, one end node and no other nodes, but is made of two or
more consecutive straight line segments.  The connections between the
constituent line segments of a polyline do not appear as nodes in the
vector map.

Polylines provide the most appropriate representation of curved lines
when it is important that nodes serve to define topology rather than
geometry.  Curved lines are usually digitized as polylines, but these are
sometimes broken into their constituent straight line segments during 
conversion from one data format to another.  \fIv.build.polylines\fR can 
be used to rebuild such broken polylines.

.SH OPTIONS
The program can be run either non-interactively or interactively.
To run \fIv.build.polylines\fR non-interactively, the user must specify
\fIinput\fR and \fIoutput\fR file names on the command line.  The line 
\fItype\fR and flags are optional.   

To run  \fIv.build.polylines\fR interactively the user should simply type
\fBv.build.polylines\fR on the command line, in which case the program will
prompt for parameter values using the standard GRASS interface
described in the manual entry for \fIparser\fR.

.LP
\fBFlags:\fR
.IP \fB-a\fR 18
Make the \fIoutput\fR file an ASCII vector map instead of a binary vector map.
.IP \fB-c\fR 18
Copy the attribute (`dig_att') and category (`dig_cats') files associated with
the \fIinput\fR file to new files with the \fIoutput\fR file name.  You should
set this flag if you wish to retain category information in the new
binary file.
.IP \fB-o\fR 18
Silently overwrite the \fIoutput\fR file if it exists in the current mapset.
When this flag is not set \fIv.build.polylines\fR will refuse to create the 
\fIoutput\fR file if a file of the same name exists in either the `dig' or
the `dig_ascii' mapset elements.
.IP \fB-q\fR 18
Run (relatively) quietly.  Specifically, do not provide information 
(including warnings) about each polyline.  
.LP
\fBParameters:\fR
.IP \fBinput\*=\fIname\fR 18
The name of a binary vector map layer containing lines (and possibly some
polylines).
.IP \fBoutput\*=\fIname\fR 18
The name of the ASCII vector map to be created in the dig_ascii mapset 
element.  
.IP \fBtype\*=\fIname\fR 18
The type of each new polyline can be set from the \fIinput\fR map, or 
alternatively all new polylines can be bulk labeled as either lines,
area edges, or points.
.br
Options: source, line, area, point.
.SH NOTES 
For full functionality \fIv.build.polylines\fR requires \fIv.support\fR and
\fIv.in.ascii\fR.

If the lines that make up a polyline are of different types, then
\fIv.build.polylines\fR will set the type from the first constituent line. 
\fIv.build.polylines\fR will issue a warning unless the flag \fI-q\fR has 
been set.  It is possible to keep a list of all such warnings by redirecting 
standard output to a file.

If the lines that make up a polyline have different
attribute values then \fIv.build.polylines\fR will set the attribute value of
the polyline to that of the last line (this is the behaviour of 
\fIv.support\fR, which is used to assign the attribute values).  Any warnings
issued by \fIv.support\fR will be visible unless the flag \fI-q\fR has been
set.

\fIv.build.polylines\fR correctly handles \fIinput\fR maps containing lines,
area edges and points.  Lines and area edges will be converted to polylines 
of the desired type.  Areas are only guaranteed to be preserved if the 
constituent lines of the polylines that define them are all area edges in 
the input map. Points will remain points provided that \fItype\fR has been set
to `source'.  It is possible to convert lines and area edges to points or
vice versa, but this is rarely useful.  

Use \fIv.import\fR to convert an ASCII \fIoutput\fR map to a binary vector map.

.SH SEE ALSO
\fIv.import\fR, \fIv.support\fR, \fIv.in.ascii\fR, \fIparser\fR

.SH ACKNOWLEDGEMENTS
This program was written during the author's tenure of a Leverhulme Special 
Research Fellowship at University College London.

.SH AUTHOR
Mark Lake, Institute of Archaeology, University College London.

.SH BUGS
Please email mark.lake@ucl.ac.uk if you find any bugs.