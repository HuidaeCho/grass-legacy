


v.in.shape <alpha>    GRASS Reference Manual   <alpha> v.in.shape



NAME
     v.in.shape - Read an ArcView Shapefile

SYNOPSIS
     v.in.shape [ -l ]	[ -r ] in=name [mapset=name]
     [verbose=debug level] [logfile=name] [snapdist=snap distance]
     [sliver=min. angle] [scale=orig. scale] [attribute=attribute category]
     [label=category label]

     v.in.shape.pg [ -l ]  [ -r ]  [ -p ] in=name [mapset=name]
     [verbose=debug level] [logfile=name] [snapdist=snap distance]
     [sliver=min. angle] [scale=orig. scale] [attribute=attribute category]
     [label=category label]

DESCRIPTION
     The v.in.shape program is designed to import ArcView
     Shapefiles.

     v.in.shape will be run non-interactively if the user
     specifies program arguments on the command line, using the
     form:
     v.in.shape [ -l ]	[ -r ] in=name [mapset=name]
     [verbose=debug level] [logfile=name] [snapdist=snap distance]
     [sliver=min. angle] [scale=orig. scale] [attribute=attribute category]
     [label=category label]

     v.in.shape.pg [ -l ]  [ -r ]  [ -p ] in=name [mapset=name]
     [verbose=debug level] [logfile=name] [snapdist=snap distance]
     [sliver=min. angle] [scale=orig. scale] [attribute=attribute category]
     [label=category label]

     Alternately, the user can simply type:

	  v.in.shape  or  v.in.shape.pg

     on the command line without program arguments.  In this
     case, the user will be prompted for parameter values using
     the standard GRASS user interface described in the manual
     entry for parser.

FEATURES
     Grass files created have the name extracted from the
     basename of the shapefile.

     The import filter attempts to correct some common errors
     that are frequently met with in shapefiles.

FLAGS
     -l	  List the fields contained in the DBF file associated
	  with the input shapefile, then exit.

     -r	  Create a reject lines file. During import some lines



GRASS 5.0beta8	      GRASS Development Team			1






v.in.shape <alpha>    GRASS Reference Manual   <alpha> v.in.shape



	  are not imported for a variety of reasons. This option
	  creates a new Level 1 vector map (ie. without
	  topology), which can be used to display these lines.

     *NOTE*  The following option is only available in the
     version with postgres support (v.in.shape.pg)

     -p	  Dump the fields of the shapefile from DBF to a postgres
	  table.

OPTIONS
     in=name
	  Name of input shape file. Provide a full path name or
	  the name of a file in the current directory. Any of the
	  full pathname, basename, or prefix only will suffice.

     mapset=name
	  For creating a new mapset for the data imported.  This
	  may be useful, since we cannot create a projection info
	  file and a default window in an existing mapset.  When
	  a file is imported in the current mapset, you should
	  take care that they are in the same projection.
	  Unfortunately, you may run in trouble after that when
	  using g.region (Cf BUGS).

     verbose=debug level
	  Number between 0 (no trace of what's happening) and 9
	  (very verbose log).

     logfile=name
	  Name of file where log info will be written. By default
	  log info are directed to stderr.

     snapdist=snap distance
	  A grid resolution can be defined within which adjacent
	  vertices will snap.
	  Note:The vertices do not snap to the grid. All the
	  vertices inside a grid cell snap to one of their number
	  (usually the first).
	  This value defaults to 0.001 ground units. In fact, it
	  will never allow a value that is less.

     sliver=minimum angle
	  A minimum angle can be defined for one link to subtend
	  others at a given node.  If the angle between two lines
	  is less than this, they will be treated as colinear.
	  This can be useful as the module now has features which
	  attempt to correct some common topological errors that
	  occur in the immediate vicinity of nodes. If you can be
	  confident that true angles between adjacent arcs
	  radiating from the same node cannot be less than a
	  certain value, you can specify that value here, and



2		      GRASS Development Team	   GRASS 5.0beta8






v.in.shape <alpha>    GRASS Reference Manual   <alpha> v.in.shape



	  some errors may be automatically corrected.  This
	  defaults to .01 degrees (specified in radians). In fact
	  it will never allow a value that is less

     scale=original scale
	  This sets an original scale that will be specified in
	  the header of the vector map file produced. It can be
	  edited later with v.digit.
	  The value defaults to 1:2400

     attribute=a_name
	  Name of the attribute to use as the category number in
	  dig_att. Defaults to using the record ID number as a
	  category value if no value is assigned or a non-integer
	  field is given.

     label=a_label
	  Name of the attribute to use as the category label in
	  dig_cats. Only writes out results if a meaningful
	  category field is given, otherwise no action is taken.

BUGS AND CAVEAT
     There is no support for projection.

     Multipatch data is not yet supported. Point data (sites)
     also is not handled by this module. New module s.in.shape
     imports site data.

     Resource hog. The filtration process uses a lot of memory in
     large files.  The size of files that can be imported
     sfficiently depends on the resources of the local system,
     but performance degrades rapidly when you go into swap.  On
     a system with 128MB physical RAM, files of up to 4000
     polygons are typically imported easily.

     Area and perimeter fields in input data may no longer be
     quite correct if the lines have been adjusted to correct
     topology problems.

SEE ALSO
     m.in.e00, g.mapset, g.region, g.proj, s.in.shape, v.support,
     v.to.rast.

AUTHORS
     Frank Warmerdam (warmerda@home.com)
     Based on Shapelib
     (http://gdal.velocet.ca/projects/shapelib/).

     Markus Neteler
     added category support





GRASS 5.0beta8	      GRASS Development Team			3






v.in.shape <alpha>    GRASS Reference Manual   <alpha> v.in.shape



     David Gray
     preprocessing to provide correct handling of polygon edges,
     labels and correction of some topological errors. Also some
     new options q.v.

NOTICE
     This program is part of the alpha section of the GRASS
     distribution.  Unlike the code in the main section of GRASS,
     the alpha code has not yet been fully tested for one release
     cycle.













































4		      GRASS Development Team	   GRASS 5.0beta8



