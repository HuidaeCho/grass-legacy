


r.proj <main>	      GRASS Reference Manual	    <main> r.proj



NAME
     r.proj (GRASS Raster Program)

GRASS VERSION
     5.x

SYNOPSIS
     r.proj

     r.proj help

     r.proj input=name]

DESCRIPTION
     r.proj projects a raster map in a specified  mapset of a
     specified location from the projection of the input location
     to a raster map in the  current  location.	 The projection
     information is taken from the momentary PROJ_INFO files.

OPTIONS
Parameters:
     Input raster map from source location.  Source location of
     input map.	 Output raster map for current location.
     Default: Same name as input map Mapset of input map.
     Default: Same name as current mapset Database of input map.
     Default: Current database Interpolation method to use.
     Options: nearest, bilinear, cubic Default: nearest
     Resolution of output map.	Default: Calculated from the
     number of cols in input map

NOTES
     If output is not specified it is set to be the same as input
     map name.

     If dbase is not specified it is assumed to be the current
     database.

     If mapset is not specified, its name is assumed to be the
     same as the current mapset's name.

     r.proj uses three alternative resampling algorithms: nearest
     -	nearest neighbor bilinear  -  bilinear interpolation
     cubic  -  cubic convolution

DESCRIPTION
     Introduction

     Map projections

     Map projections are a method of representing information
     from a curved surface (usually a spheroid) in two
     dimensions, typically to allow indexing through Cartesian



GRASS 5.0beta6	      GRASS Development Team			1






r.proj <main>	      GRASS Reference Manual	    <main> r.proj



     coordinates.  There are a wide variety of projections, with
     common ones divided into a number of classes, including
     cylindrical and pseudo-cylindrical, conic and pseudo-conic,
     and azimuthal methods, each of which may be conformal,
     equal-area, or neither.

     The particular projection chosen depends on the purpose of
     the project, and the size, shape and location of the area of
     interest.	For example, normal cylindrical projections are
     good for maps that are of greater extent east-west than
     north-south and in equatorial regions, while conic
     projections are better in mid-latitudes; transverse
     cylindrical projections are used for maps that are of
     greater extent north-south than east-west; azimuthal
     projections are used for polar regions.  Oblique versions of
     any of these may also be used.  Conformal projections
     preserve angular relationships, and better preserve arc-
     length, while equal-area projections are more appropriate
     for statistical studies and work in which the amount of
     material is important.

     Projections are defined by precise mathematical relations,
     so the method of projecting coordinates from a geographic
     reference frame (latitude-longitude) into a projected
     Cartesian reference frame (e.g. meters) is governed by these
     equations. Inverse projections can also be achieved. The
     public domain Unix software package proj [1] has been
     designed to perform these transformations, and the user's
     manual contains a detailed description of over 100 useful
     projections. This also includes a programmer's library of
     the projection methods to support other software
     development.

     Thus, converting a "vector" map - in which objects are
     located with arbitrary spatial precision - from one
     projection into another is usually accomplished by a simple
     two-step process: first the location of all the points in
     the map are converted from the source through an inverse
     projection into latitude-longitude, and then through a
     forward projection into the target. (Of course the procedure
     will be one-step if either the source or target is in
     geographic coordinates.)

     Converting a "raster" map, or image, between different
     projections, however, involves additional considerations. A
     raster may be considered to represent a sampling of a
     process at a regular, ordered set of locations. The set of
     locations that lie at the intersections of a Cartesian grid
     in one projection will not, in general, coincide with the
     sample points in another projection. Thus, the conversion of
     raster maps involves an interpolation step in which the
     values of points at intermediate locations relative to the



2		      GRASS Development Team	   GRASS 5.0beta6






r.proj <main>	      GRASS Reference Manual	    <main> r.proj



     source grid are estimated.

     Projecting maps within the GRASS GIS

     GIS data capture, import and transfer often requires a
     projection step, since the source or client will frequently
     be in a different projection to the working projection.

     In some cases it is convenient to do the conversion outside
     the package, prior to import or after export, using software
     such as proj [1]. This is certainly the easiest method for
     site-lists, since there is no topology to be preserved, and
     proj can be used to process simple lists with a one-line
     command.

     The format of files describing maps containing lines and
     arcs is generally more complex, as even in ASCII parts of
     the files will describe topology, and not just locations. In
     the GRASS GIS package a program v.proj is provided to
     convert "vector" maps, transferring topology and attributes
     as well as node locations. This program uses the projection
     definition and parameters, which are stored in the PROJ_INFO
     and PROJ_UNITS files in the PERMANENT mapset directory for
     every GRASS location.

     However, although it is oriented mainly towards operations
     on raster maps, the standard GRASS distribution includes
     this r.proj module to convert raster maps. That is the
     purpose of the program described here.

     Design of r.proj

     As discussed briefly above, the fundamental step in re-
     projecting a raster is resampling the source grid at
     locations corresponding to the intersections of a grid in
     the target projection. The basic procedure for accomplishing
     this, therefore, is as follows: 1.	 r.proj converts a map to
     a new geographic projection.

     2.	 It reads a map from a different location, projects it,
     and writes it out to the current location.

     3.	 The projected data is resampled with one of three
     different methods: nearest neighbors, bilinear, or cubic
     convolution.

     Note that, following normal GRASS conventions, the coverage
     and resolution of the resulting grid is set by the current
     region settings, which may be adjusted using g.region. The
     target raster will be relatively unbiased for all cases if
     its grid has a similar resolution to the source, so that the
     resampling/interpolation step is only a local operation. If



GRASS 5.0beta6	      GRASS Development Team			3






r.proj <main>	      GRASS Reference Manual	    <main> r.proj



     the resolution is changed significantly, then the behavior
     of the generalization or refinement will depend on the model
     of the process being represented. This will be very
     different for categorical versus numerical data. Note that
     three methods for the local interpolation step are provided.

     The nearest option, which performs a nearest neighbor
     assignment is the fastest of the three resampling methods.
     It is primarily used for categorical data such as a land use
     classification, since it will not change the values of the
     data cells. The bilinear option determines the new value of
     the cell based on a weighted distance average of the 4
     surrounding cells in the input map. The cubic option
     determines the new value of the cell based on a weighted
     distance average of the 16 surrounding cells in the input
     map.

     The bilinear and cubic interpolation methods are most
     appropriate for continuous data and cause some smoothing.
     Both options shouldn't be used with categorical data, since
     the cell values will be altered.

     If nearest neighbor assignment is used, the output map has
     the same raster format as the input map. If any of the both
     interpolations is used, the outputmap is written as floating
     point.

BUGS
     The entire input map is read into memory.	This requires a
     large amount of memory if large raster layers where
     projected.

REFERENCES
     [1]Evenden, G.I. (1990) Cartographic projection procedures
     for the UNIX environment - a user's manual. USGS Open-File
     Report 90-284 (Also see Interim Report and 2nd Interim
     Report on Release 4, Evenden 1994).

     Press, W.H. et al.	 (1992), Numerical Recipes in C,
     Cambridge University Press, Cambridge, 2nd edition.

     Richards, John A. (1993), Remote Sensing Digital Image
     Analysis, Springer-Verlag, Berlin, 2nd edition.

SEE ALSO
     r.resample

AUTHOR
     Martin Schroeder, University of Heidelberg, Dept. of
     Geography,
      emes@geo0.geog.uni-heidelberg.de




4		      GRASS Development Team	   GRASS 5.0beta6






r.proj <main>	      GRASS Reference Manual	    <main> r.proj



     Some man page text from S.J.D. Cox, AGCRC, CSIRO Exploration
     & Mining, Nedlands, WA





















































GRASS 5.0beta6	      GRASS Development Team			5



