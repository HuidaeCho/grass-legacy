Known bugs in GRASS 5
$Id: BUGS,v 1.31 2000-10-17 08:38:47 markus Exp $

Maintained by
   Markus Neteler
   neteler@geog.uni-hannover.de
Please send a note if detecting an unknown bug.
Bugfixes are very welcome!

Bugfix formula:
http://www.geog.uni-hannover.de/grass/bugtracking/bugreport.html

----------------------------------------------------------------
[In sync with GRASS 5 beta 9/CVS]
History at end of file.

----------- drivers ---------------------------------------------
CELL-Driver: colors are not correct
 Comment from Carl Anderson <candrsn@mindspring.com>
  Tracking of the "bug" will have to start in
  src/display/d.rast/cmd/display.c
  Since GRASS4 did the colors right, using both GRASS4 and GRASS5
  drivers, I suspect one of the Libraries and not the XDRIVER.
  look at D_set_colors ().

----------- libraries ---------------------------------------------
G3D libraries bug:
 Markus Neteler wrote:
 > Sidenote: If I have more than around 60.000 cubes (tiles)
 > (when setting high resolution in WIND3) I regularly get this
 > error message:
 > r3.out.v5d map=3dvol out=3d.v5d
 >   FATAL ERROR: G3d_getDoubleRegion: error in G3d_getTilePtr
 >
 > r3.out.ascii map=3dvol > 3d.asc
 >   FATAL ERROR: G3d_getDoubleRegion: error in G3d_getTilePtr

Markus,
briefly, the problem might be in cache modes. The functions G3d_getValue () should be 
used in a cache mode, however, we open maps using non-cache mode:
 map = G3d_openCellOld(input, G_find_grid3(input, ""), G3D_DEFAULT_WINDOW,
   G3D_TILE_SAME_AS_FILE,
   G3D_NO_CACHE);

Please try to change G3D_NO_CACHE parameter to G3D_USE_CACHE_DEFAULT, and 
re-compile main.c for r3.out.ascii with G3d_getWindow() and G3d_getValue() 
commands or previous version of r3.out.v5d. Currently I have not enough 
time to try it.
 Jaro
-> needs to be fixed

----------- modules ---------------------------------------------
d.his: 
 - color wrong if input value=0
 - added NULL randomly when using "out" for saving

d.mon: hangs with "-L" option
   (would be nice to fix to improve "d.monsize" script
  Andreas Lange wrote:
  The d.mon -L bug only occurs on Linux, on IRIX
  everything is ok. I read the code and experimented with it, but i
  couldn't find the problem. This is something for the signal
  specialists/system programmers from BSD and SYSV.

d.param.scale
 - lower axis description not readable
 - sometimes "floating point exeption", especially in par=geary

d.profile: the min/max printed at profile are wrong
           sometimes the entire profile wrong
           obviously problem with fp/int maps
      * displays the correct location and elevation with the "where        
  am I" selection, but generates a flat line profile for any transect             
  across my raster elevation maps. The flat line has a consistent value on        
  the y axes of 17519 and /3963632 at the origin. I recall this module            
  worked ok for me in early 5b releases, but has failed in this manner in         
  both 5b7 and 5b8. 
   (Tom Strang  tstrang@trytel.com)


d.rast.num: some numbers are displayed in wrong (unreadable) color

d.rgb: Is there a difference between d.rgb and i.composite?

d.siter: try to make it indpendent from wish8.x version (like tcltkgrass)
 but error occurs now.

d.sites.qual: not all the sites are used/displayed
  d.sites.qual doesn't work properly: not all the sites 
  are used/displayed if the number of fields of the input site file is 
  not constant. Compare with d.sites.

d.what.rast 
 displays its output twice to the tcltkgrass screen and           
 prints it twice to file when in single selection mode. In command line          
 mode d.what.rast works fine. I program in c and tcl, so I looked around         
 a bit at the sources - but don't have the familiarity with the code base        
 to find an obvious solution.
 (Tom Strang  tstrang@trytel.com)

i.ortho.photo
 - if second control point is set by mouse, it is not indicated
   immediately in orange color (right window)
 - GIS WARNING: Can't write embedded null values for map open for random
   access: i.ortho.photo/photo.rectify/write.c needs to be updated.

i.tape.tm.fast: (Todd Shoemaker, jtshoe@datasync.com)
- Attempting to change the default Title causes a segfault.

g3.region:
 - after defining the 3D-region with g3.createwind (which runs o.k.),
   the g3.region does not display the vertical resolution (top-bottom)
   correctly. -> rounding error?
  -> r3.info is affected as well

p.map.new:
 - p.map.new now works but only with the grass4.2 raster files
   With the GRASS5.0 floating point raster files it gives the following
   error.
   WARNING: [desi] in mapset [PERMANENT] - format field in header file
   invalid
   WARNING: unable to open raster map [desi] in mapset [PERMANENT]
   desi in PERMANENT : can't open raster file
   I think it is to do with the new format of GRASS5.0 raster files.
 -> 5/2000: still a problem??

ps.map: -fwritable-strings is required on Linux
   some variable implementation needs to be improved.

r3.in.v5d/r3.out.v5d:
 src.contrib/GMSL/g3d/src3d/raster/r3.in.v5d/binio.c
 src.contrib/GMSL/g3d/src3d/raster/r3.out.v5d/binio.c
 -> does not yet contain little/big endian sensivity (currently set only by
   compiler flag)
  solution:  code could be taken from src/libes/ogsf/gsd_img_ppm.c


r3.showdspf.openGL:  (src.contrib/GMSL/g3d/src3d/raster/r3.showdspf.openGL)
 - the dependency to OpenGL and Mesa should be checked automatically
   and maybe the sgi-widget should be compiled in statically.
   it will not work with standard Mesa RPMS, because the sgi-widgets
   are missing. Generally you need to have the Mesa source and compile 
   the libGLw yourself (which is described in the README.mesa31 in the
   source for grass.) [Bernhard]
   -> partly done by global configure

r.binfer
 - bug in table.c causing segfault
 - probability "1" not accepted

r.contour: (reported by D D Gray <ddgray@armadce.demon.co.uk>)
 Though it is not a stability problem, I've found that if this module is
 run on an elev raster with an active old-style mask, i.e applied with
 r.mask, the contour lines which terminate on the mask boundary (but only
 these) are duplicated, as if reflected off the mask boundary. The
 resulting line is then closed giving a closed loop that is folded in on
 itself with a node at one end or in the middle of the line, and no node
 at the other. This is most clearly seen when viewed with v.digit. I have
 not seen a prior report of this problem though I have looked. My
 apologies if this has already been documented. Though I can't look into
 this myself at the moment, I have prepared a quick fix in the form of an
 awk post-processor which ´cleans' this problem, splitting the loop and
 removing the duplicate segment (it also removes ´degenerate' lines ie.  
 lines of one point which r.contour creates occasionally.) I have added  
 this as an extension, though I stress it is just a temporary fix.
 (script: v.asc.degen)

r.flow
 bugreport: Issuing the command (-M switch is the problem):
 r.flow -M elevin=fill aspin=dir flout=flowout_M dsout=density_M
 [...] Writing density file...ERROR: r.flow: cannot write segment file for
       density_M
 r.flow seems to work OK with no switch and with the -m switch.
 (david_finlayson@yahoo.com)
 -> floating point exception fix already done, -M to be tested


r.in.hdf/r.out.hdf (src.garden/grass.hdf)
 - needs updating to HDF4.x lib (already there)

r.in.png:
  seg. faults on Pentium CPU (compare r.binfer)

r.in.ppm
  seg. fault on Pentium CPU (compare r.binfer)
  Memory bug fixed by Alex Shevlakov

r.in.tiff/r.out.tiff
 - segm. fault (same thing with r.binfer)

r.mapcalc
 - Values -129 in GRASS raster files are treated as Null
   (already fixed for FreeBSD/Linux. Check for other platforms, 
   futher corrections go here:
   src/libes/gis/null_val.c)
 -  r.mapcalc does not like it if the cellvalues are very high for eg.,            
    initially I put the col=fips which ranges from 1001 to 55141 - it 
    core dumped ... I guess the limit in r.mapcalc is 32xxx which 
    is a "huge" limitation
    (Anantha Prasad  aprasad@fs.fed.us)
 - r.mapcalc/polish: (when compiling)
  make[2]: Entering directory
  /home/neteler/src5/grass5.0beta/src/raster/r.mapcalc/polish'
  rm -f lex.yy.c y.tab.c
  rm -f OBJ.i586-linux-elf/main.o
  gcc -g -O2   -I/home/neteler/src5/grass5.0beta/src/include  -c main.c
  mv main.o OBJ.i586-linux-elf/main.o
  flex pol.l
  yacc pol.y
  yacc: 14 shift/reduce conflicts, 17 reduce/reduce conflicts.

r.neighbors 
 seems doesn't work with a float number                   
 when use median method. It fails in -0.001 value with 3x3 window. 
 (report: Bruno Crippa <bruno@ipmtf4.topo.polimi.it>)

r.null:
 does not work with reclassified maps

r.patch:
 sometimes does not transfer colors properly when merging CELL maps.

r.random
 needs to be updated to GRASS 5

r.reclass
 - segm. fault on Pentium CPU (same problem as r.binfer,...)
 - does not accept "*" to reclass NULL values

r.resamp.rst:
 When processing quite a big DEM file with r.resamp.rst I got the  
 following message for output file:                                                                                                               
     WARNING: quantization file [z_50] in mapset [erdep] empty.                                                                             
  Does anybody knows what is going on? I tried to run r.support but no
  success. Iseems that r.resamp.rst finished its correctly.
  (Reported by Rado Bonk <rado@cosmos.dsc.unomaha.edu>)

r.rescale:
  r.rescale input=asp1 from=0,180 output=test_north to=1,1                      
  r.rescale does not set cells outside the "from" range to 0 (described in the    
  help), but to null
  (reported by timcera@earthlink.net)

r.surf.contour
  (supports currently CELL type only)

r.stats: some inconsistent results comparing to r.average
 *First, I compute the per-class averages:
     r.average base=medv cover=test out=borra.me
 *Second, I check the result for, i.e., class 23:
     d.what.rast map=medv,borra.me
     2676500(E) 4409500(N)
           medv in user1  (23)S_SUPRAMEDITERRANEAN_ZONE
           borra.me in user1, quant   (111)
           borra.me in user1, actual  (110.794075)
 *Third, I compute the statistics for each class, but the results are not
  the same as given by d.what.rast. For example, for class 23:
     r.stats -c in=medv,borra.me
     r.stats:  100%
       ...
       23 110.299171-110.744906 6082
       ...
 *While d.what.rast was giving 110.794075. Is this a bug?
     Dr. Agustin Lobo, alobo@ija.csic.es

s.in.ascii: 
     - errors with more than 2 dimensions (some numbers are read as
            attribute)
       -> fixed?

s.rand
 should write #cats rather than %cats (site numbering)

v.cutter: (report from Stefan.Neumann@agrar.uni-giessen.de)
 For reducing the volume a rather large vectormap (16.000 polygons) I wrote a    
 grass5-script which                                                            
  1. automatically generates a rectangle around the current region (works at
    least with tmerc,lat/long,lambert-projection)                                        
  2. cuts the original map with v.cutter                                          
  3. runs v.spag -i and v.support                                                 
 This works fine, but only sometimes. I cut country outlines, DEM-contours       
 (created with r.contour) and a map with soil properties and I noticed that
 the size of the region seems to influence v.cutter. If, for example, i cut
 parts of the coastline of norway, v.cutter works for a region with a maximum width
 of 6 geographic degrees, a wider region produces an empty vector file. The          
 DEM-contour-map, which seems to contain much more data, can be cut using a     
 region of any size.                                                            
 Thus it appears that certain combinations of datafile and cutterfile cause      
 v.cutter to generate no vectors at all. I don't see any rule as to when it     
 works an when it doesn't so I think that this might be some bug in
 v.cutter.  

v.out.shape:
 segmentation fault on Pentium II CPUs /Linux
 (reported by Stephan.Holl@stud.uni-hannover.de)

v.reclass:
The problem with v.reclass seems to stem from an input field for old=new        
reclass rule that cannot be more than 7 characters long (i.e. 11250=16 is       
eight characters long and will cause v.reclass to return an error). Someone     
needs to look at correcting this perhaps.

v.to.rast:
 Working with a vector file and a region of(11242 rows*13301 cols) the
 module is 'killed' at step 13/22.                                              
 Module works well with the same data and a smaller region.                      
 My pc conf:pentium3 600 & 128 RAM       
 marco  <scurra@infinito.it>

--------------------------------------------------

Platform specific stuff:

src/raster/r.combine:
make[2]: Entering directory /data3/grass5/src5/src/raster/r.combine/cmd'
rm -f gis_lxcl.c gis_pars.c gis_pars.h gis_pars.out
yacc -v -d gis_pars.y
1 rules never reduced
conflicts: 1 reduce/reduce
rm -f gis_pars.c gis_pars.h gis_pars.out


Further discussion:
-----------------------------------------------------------------------

 - Comments on updating 4.x vector modules to 5.x vector:
   There is a slightly modified category support:

  Comment on vector cats from Bill Hughes:
  The Categories structure was changed between 4.x and 5.0beta.
  The change seems to have moved the *labels element out of the list
  structure and replace list.num with the index to **labels.  The fix
  is to change the SCS/* code to use 'cats->labels[i]' instead of
  'cats->list[i].labels'  There will be breakage around 'list[i].num'
  as well, and probably these can be deleted, or use 'cats->num' instead.
  The cats.count is cats.ncats now (see src/include/gis.h).

  Already sucessfully updated: v.random,v.extract,v.merge,v.autocorr
  updated src.contrib tree as well (10/99, Bill H.)


--------------------------------------------------------------------
Libraries:

src/libes/geom: optri  -> used by s.geom, v.geom
 I [Bill Hughes] have been working through some errors in 
src/libes/geom/optri and I have a tarball of the directory attached below.  
This is not done yet, but it needs some expertise from somebody who 
understands it.  Two references to grAllocate() have only 3 parameters.  
I don't understand what it does, so I can't really guess at what
should be passed as the final parameter.  I have put in 0 for the
moment to get the compile to work.

src/libes/geom/:
[from Brook] The powerof2 warnings are the result of an unfortunate 
collision of names (with different semantics) between NetBSD headers 
and Grass.  As long as the Grass headers are always included _after_ the 
system headers it is ok; it would be safer to rename it to something 
else within Grass, though.
 -> same warning on Linux/Intel

---------------------------------------------------------------------

 $Id: BUGS,v 1.31 2000-10-17 08:38:47 markus Exp $
