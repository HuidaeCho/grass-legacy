# Makefile.in
# $Id$

SHELL=			/bin/sh

PREFIX=			@prefix@

BINDIR=			@BINDIR@

SRCDIR=			`pwd`
SERVERNAME=		`uname -n`

INSTALL=		@INSTALL@
INSTALL_DATA=		@INSTALL_DATA@ -m 644
INSTALL_PROGRAM=	@INSTALL_PROGRAM@
INSTALL_SCRIPT=		@INSTALL@ -m 755
####INSTALL_DATA_DIR=	install -d -m 755
INSTALL_DATA_DIR=	mkdir -p -m 755

ENV=			@ENV@

MAKE_ENV=		GRASSSRC=${SRCDIR}/src GMAKE=${SRCDIR}/src/CMD/gmake5.0

IS64BIT=		${SRCDIR}/src/CMD/generic/is64bit.sh

MAKE_GMAKE_ENV=		UNIX_BIN=${BINDIR} SRC=${SRCDIR}

MAKE_POST_ENV=		GISBASE=${PREFIX} MACHINENAME=${SERVERNAME}

all: pre-install

install: pre-install do-install

pre-install:
	if [ ! -d ${PREFIX} ]; then mkdir -p ${PREFIX} ; fi
	if [ ! -d src/CMD/next_step ]; then mkdir -p src/CMD/next_step ; fi
	${MAKE_GMAKE_ENV} ${MAKE_POST_ENV} ${SHELL} src/CMD/generic/CREATE_GMAKE.sh
	${INSTALL_DATA_DIR} ${PREFIX}
	${SHELL} ${IS64BIT}
	echo "Now proceed with make install"


do-install:
	${MAKE_ENV} ${SHELL} src/CMD/generic/GISGEN.sh
	${MAKE_ENV} ${SHELL} src/CMD/generic/MAKELINKS.sh
	${MAKE_POST_ENV} ${SHELL} src/CMD/generic/POST_INSTALL.sh

# GRASS source code cleaning options:
#
# There are three options for cleaning the GRASS source code. Each option
# performs the following operations:
#
# make clean     - delete all object files and the next step file, keep the
#                  compiled GRASS libraries - good for saving disk space
# make distclean - delete object files, next step file, libraries, and
# 		   generated directories like etc/ and dev/ - good for
#                  recompiling on the same system (keep configure files)
# make veryclean - delete object files, next step file, libraries, generated
#                  directories, head file, configure files, and Makefile - good
#                  for starting the whole installation from scratch
#
# Note that some files may not be deleted due to difficulties in specifying
# them in this Makefile. These files include the C files generated by lex and
# yacc, and any other file that is not listed in the options above.
clean:
	echo "Performing simple clean..."
	find . -name 'OBJ*' -exec rm -rf {} \; 2>/dev/null ; true
	rm -f src/CMD/next_step/*              2>/dev/null ; true
	# Simple clean finished

distclean: clean
	echo "Performing compilation clean..."
	find . -name 'LIB*' -exec rm -rf {} \; 2>/dev/null ; true
	rm -f src.garden/grass.hdf/HDF4.1r3/hdf/src/libdf.a 2>/dev/null ; true
	rm -rf ${BINDIR}/* 2>/dev/null ; true
	rm -rf bwidget/    2>/dev/null ; true
	rm -rf dev/        2>/dev/null ; true
	rm -rf driver/     2>/dev/null ; true
	rm -rf etc/        2>/dev/null ; true
	rm -rf fonts/      2>/dev/null ; true
	rm -rf man/help/   2>/dev/null ; true
	rm -rf man/1/      2>/dev/null ; true
	rm -rf man/2/      2>/dev/null ; true
	rm -rf man/3/      2>/dev/null ; true
	rm -rf man/4/      2>/dev/null ; true
	rm -rf man/5/      2>/dev/null ; true
	rm -rf locks/      2>/dev/null ; true
	rm -rf scripts/    2>/dev/null ; true
	rm -rf tcltkgrass/ 2>/dev/null ; true
	rm -rf txt/        2>/dev/null ; true
	rm -f error.log    2>/dev/null ; true
	# Compilation clean finished

veryclean: distclean
	echo "Performing complete installation clean..."
	rm -f src/CMD/head/head                     2>/dev/null ; true
	rm -f config.cache config.log config.status 2>/dev/null ; true
	rm -f src/scripts/shells/create_fifos.sh    2>/dev/null ; true
	rm -f src/include/config.h                  2>/dev/null ; true
	rm -f Makefile                              2>/dev/null ; true
	# Complete installation clean finished
