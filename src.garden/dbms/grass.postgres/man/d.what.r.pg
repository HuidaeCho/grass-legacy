.TH d.what.r.pg
.SH NAME
\fId.what.r.pg\fR \- Report database attributes associated with a raster
category value at a specified location.
.br
.I "(GRASS-RDBMS Attribute Interface Program)"
.SH SYNOPSIS
\fBd.what.r.pg\fR
.br
\fBd.what.r.pg help\fR
.br
\fBd.what.r.pg\fR \fBmap=\fIname\fR \fBtab=\fIname\fR \fBcol=\fIname\fR \fB[join=\fItab,tabkey,pkey]\fR
.br
.SH ALTERNATE
\fBd.what.r.pg -s help\fR
.br
\fBd.what.r.pg\fR \fB-s\fR \fBpql=\fIfilename\fR \fBmap=\fIname\fR
.SH DESCRIPTION
d.what.r.pg reports database attributes from the currently selected
database associated with a raster category at a 
specific location on a raster map. The currently selected database
is identified by the GRASS environment variable $PG_DBASE which is set
using the g.select.pg GRASS-RDBMS interface tool. If this environment 
variable is not set the program terminates with a message to the user.
The current raster location is selected by the user with
the mouse. If no join parameters are provided by the user on the command line
the attributes in the table directly linked to the GRASS raster structure via
the category value are returned. However, if a join is specified then
attributes from a related table are displayed. If the alternate form of
this command is selected with the -s flag the user has greater control
over the number of relational joins and the manner in which the
attribute information is displayed. Using the -s option the 
attributes from more than one table can be returned and displayed. 
.SH "COMMAND LINE OPTIONS"
.LP
Parameters:
.IP \fImap=map\fR
Name of an existing raster map with category values linked to the currently selected database.
.IP \fItab=database_table_name\fR
Table in the currently selected database containing a column associated with raster category values.
.IP \fIcol=database_column_name\fR
Column associated with raster category values.
.IP \fIjoin=tab,tabkey,pkey\fR
Tab is the table used to develop the current postQUEL query. Tabkey is the database column used to relate information in this table with data in the table linked to the GRASS category file. Pkey is the associated column in the table linked to the GRASS category file which is related to tabkey in the current table.

For instance, assume that seco_soil_cats is a table containing column values associated with category values 
in a the GRASS raster file soils (cropname). In addition, assume that compyld is a table containing 
attribute data on the crop production capacity in the same area. In this example seco_soil_cats is the table 
associated with the GRASS raster map and grass_cats is the column linking seco_soil_cats to the GRASS category 
file, the table compyld contains the attribute information to base the query/reclass on and it is linked to 
seco_soil_cats via the common column muid. To specify a query based on attribute values in the table compyld: 

        d.rast.pg key=grass_cat tab=seco_soil_cats 
        col=cropname input=soils
        join=compyld,compyld.muid,seco_soil_cats.muid

Specifying these conditions would insure that all rows from table compyld which satisfy the query criteria would be matched with the corresponding rows in table seco_soil_cats, which are then related to the spatial features in the GRASS data layer via the GRASS category values.

This syntax is adequate to accomplish 2 table joins. However, if the query demands joins between more than 2 tables it is advisable to use the -s option [see Alternate Command Line Usage] to read a user prepared query, complete with join requirements, from a file.

.SH "ALTERNATE COMMAND LINE USAGE"
The alternate command line usage is provided to simplify the process of retrieving information from more than one table in the query criteria. The alternate command line structure is selected using the the [-s] flag on the command line. When using this flag the user must include the name of a text file on the command line as well. This file must include a complete, well formed postQUEL SELECT statement specifying the query criteria and all relevant JOINS needed to retrieve values which correspond to category values in a GRASS data layer. 

The user must also specify the name of the GRASS data layer containing these category values on the command line. The following example illustrates the syntax which must be used in constructing a SELECT statement for use with the -s flag.

.SH "EXAMPLE (single table)"

.br
d.what.r.pg  -s pql=statsgo.pql map=seco_soils


.br
statsgo.pql:
.br
	retrieve unique (seco_soil_cats.all)
.br
	where seco_soil_cats.tlid=?
.br

Results: Reports all attributes from the table seco_soil_cats associated with the
raster category value at the current mouse location the raster map seco_soils.


.SH "EXAMPLE (two table join )"
.br

d.what.r.pg  -s sql=statsgo.sql map=seco_soils
.br


statsgo.sql:
.br
	retrieve unique (seco_soil_cats.all, mapunit.all, compyld.all)
.br
	where seco_soil_cats.grass_cat=? and
.br
		seco_soil_cats.muid=mapunit.muid and
.br
		mapunit.muid=compyld.muid
.br


Results: Reports all attributes from the table seco_soil_cats, mapunit and compyld associated with 
the raster category value at the current mouse location in the raster map seco_soils.


.LP
Flags:
.IP \fI-s\fR
postQUEL select statements are input from a prepared file.
.LP
Parameters:
.IP \fIsql=filename\fR
postQUEL statements specifying well formed selection criteria.
.IP \fImap=map\fR
Name of an existing raster map with category values linked to a database.

.SH BUGS
None known.

.SH "NOTE"
This program requires the Postgres database software.

.SH "SEE ALSO"
g.column.pg, g.select.pg, g.stats.pg, g.table.pg, d.rast.pg, d.site.pg, d.vect.pg, d.what.s.pg, d.what.v.pg, r.reclass.pg, r.rescale.pg, v.reclass.pg
.SH AUTHOR
Original Informix SQL-tools: James A. Farley, Wang Song and W. Fredrick Limp
University of Arkansas, CAST

Postgres modifications: Janne Soimasuo, Faculty of Forestry, University of Joensuu, Finland.


