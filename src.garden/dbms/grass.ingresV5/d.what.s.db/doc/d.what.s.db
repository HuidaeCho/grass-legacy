


d.what.s.db          GRASS Reference Manual           d.what.s.db



NAME
     d.what.s.db -  Report database attributes associated with a
     specific point location.
     (GRASS-RDBMS Attribute Interface Program)

SYNOPSIS
     d.what.s.db
     d.what.s.db help
     d.what.s.db tab=name xcol=name ycol=name distance=value
     [join=tab,tabkey,pkey]

ALTERNATE
     d.what.s.db help -s
     d.what.s.db -s sql=filename distance=search radius

DESCRIPTION
     d.what.s.db reports database attributes in the currently
     selected database which are associated with a specific point
     location. The current database is identified by the GRASS
     environment variable $DATABASE which is set using the
     g.select.db GRASS-RDBMS interface tool. The location to
     query is selected by the user with the mouse. The radius
     around this point to search is specified by the distance
     argument. Sites are selected by comparing the values in the
     database columns containing X and Y coordinate data against
     the coordinate data at the current mouse location. If no
     join arguments are supplied by the user the columns in the
     table containing the coordinate values are returned in the
     report. By specifying a join criteria attribute information
     from a related table can be returned in the report. If
     information from more than one table is required use the -s
     flag and the alternate command line format (see below).

COMMAND LINE OPTIONS
     Parameters:

     tab=database_table_name
          Table containing X, Y coordinate values.

     xcol=database_column_name
          Column containing the X coordinate (E/W) value.

     ycol=database_column_name
          Column containing the Y coordinate (N/S) value.

     distance=value
          Radius distance from the current mouse location to
          conduct database search.

     join=tab,tabkey,pkey
          Optionally, a series of join parameters can be supplied
          to retrieve information from related database tables.



GRASS                    U.S. Army CERL                         1






d.what.s.db          GRASS Reference Manual           d.what.s.db



          The format for these parameters is reviewed in the
          following discussion.  Tab is the table used to develop
          the current SQL query. Tabkey is the database column
          used to relate information in this table with data in
          the table linked to the GRASS category file. Pkey is
          the associated column in the table linked to the GRASS
          category file which is related to tabkey in the current
          table.

          d.what.s.db  tab=well xcol=utm_east ycol=utm_north
          distance=500

          For instance, assume that well is a table containing
          X,Y coordinate values and that well_owners is a table
          containing ownership information associated with well
          logs. To base a query on site location which would
          return attribute data on ownership and locational
          information in the table well the following join would
          be needed on the command line:.

               tab = well
               join=well_owners,well_owners.well_id,well.well_id

          The column well_id is common to both the well and the
          well_owners table. Because of this attribute data from
          both tables will be returned if the coordinates
          registered by the mouse return a record from the table
          well within a radius specified by the distance
          parameter on the command line.  Specifying these
          conditions would insure that all rows from table roads
          which satisfy the query criteria would be matched with
          the corresponding rows in table main, which are then
          related to the spatial features in the GRASS data layer
          via the GRASS category values.

          This syntax is adequate to accomplish 2 table joins.
          However, if the query demands joins between more than 2
          tables it is advisable to use the -s option [see
          Alternate Command Line Usage] to read a user prepared
          query, complete with join requirements, from a file.

ALTERNATE COMMAND LINE USAGE
     The alternate command line usage is provided to simplify the
     process of retrieving information from more than one table
     in the query criteria. The alternate command line structure
     is selected using the the [-s] flag on the command line.
     When using this flag the user must include the name of a
     text file on the command line as well. This file must
     include a complete, well formed SQL SELECT statement
     specifying the query criteria and all relevant JOINS needed
     to retrieve values which correspond to category values in a
     GRASS data layer.



GRASS                    U.S. Army CERL                         2






d.what.s.db          GRASS Reference Manual           d.what.s.db



     The user must also specify the name of the GRASS data layer
     containing these category values on the command line. The
     following example illustrates the syntax which must be used
     in constructing a SELECT statement for use with the -s flag.


EXAMPLE (single table)
     d.what.s.db  -s sql=well.sql map=seco_soils

     well.sql:
          SELECT * FROM well
          WHERE
          (  ( ( utm_east-?) * (utm_east-?)  +
               ( utm_north-?) * (utm_north-?) ) < ? )
                 AND utm_east > 0 AND utm_north >0




EXAMPLE (two table join )
     d.what.r.db  -s sql=nri.sql map=mlra

     well.sql:
          SELECT * FROM well,well_owners
          WHERE      (  ( ( utm_east-?) * (utm_east-?)  +
               ( utm_north-?) * (utm_north-?) ) < ? )
                 AND utm_east > 0 AND utm_north >0
                 AND well_owners.lastname matches "SM*"
                 AND well_owners.well_id=well.well_id


NOTE:
     The symbol ? in these examples is a meta character used to
     evaluate coordinate locations returned by the GRASS pointer
     against records in the database. The ? symbols must be
     included in the sql file.



     Flags:

     -s   SQL select statements are input from a prepared file.

     Parameters:

     sql=filename
          SQL statements specifying well formed selection
          criteria. These criteria must include the database
          table name, the Xcol and Ycol names as well as the
          search distance and any "JOINS" needed to retrieve the
          coordinate values. Additional criteria may be placed in
          the "WHERE" clause to further subset information



GRASS                    U.S. Army CERL                         3






d.what.s.db          GRASS Reference Manual           d.what.s.db



          returned from the database.

     input=map
          Name of an existing raster map.

BUGS
     None known.


SEE ALSO
     g.column.db, g.select.db, g.stats.db, g.table.db, d.rast.db,
     d.site.db, d.vect.db, d.what.r.db, d.what.v.db,
     r.reclass.db, r.rescale.db, v.reclass.db

AUTHOR
     James A. Farley, Wang Song and W. Fredrick Limp University
     of Arkansas, CAST






































GRASS                    U.S. Army CERL                         4



