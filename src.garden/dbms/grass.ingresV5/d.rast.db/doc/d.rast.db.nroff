.TH d.rast.db
.SH NAME
\fId.rast.db\fR \- Generate and display a reclass map based on the unique values in a database column.  
.br
.I "(GRRASS-RDBMS Interface Display Program)"
.SH SYNOPSIS
\fBd.rast.db\fR
.br
\fBd.rast.db help\fR
.br
\fBd.rast.db\fR \fBkey=\fIname\fR \fBtab=\fIname\fR \fBcol=\fIname\fR \fBinput=\fIname\fR \fB[output=\fIname]\fR \fB[join=\fItab,tabkey,pkey]\fR
.SH ALTERNATE
\fBd.rast.db -s help\fR
.br
\fBd.rast.db\fR \fB-s\fR \fBsql=\fIfilename\fR \fBinput=\fIname\fR \fB[output=\fIname]\fR 
.SH DESCRIPTION
d.rast.db displays a raster image in which each category represents a uniques value in a database column. 
Values are retrieved from the current database based on a user defined SQL select statement. The current
database is identified by the GRASS environment variable $DATABASE which is set using the g.select.db
GRASS-RDBMS interface tool. If no join parameters are specified by the user a column in the database
table directly linked to the GRASS raster structure via the category value must be used. The output from
this program is a set of GRASS reclass rules which are used to create and display a reclassed raster
surface based on the attributes returned from the database and the raster data layer specified as the
input map.
.SH "COMMAND LINE OPTIONS"
.LP
Parameters
.IP \fIkey=database_column_name\fR
Column corresponding to category values in raster map [input]
.IP \fItab=database_table_name\fR
Table containing [col].
.IP \fIcol=database_column_name\fR
Column to base reclass on.
.IP \fIinput=map\fR
Name of existing raster file.
.IP \fIoutput=map\fR
Name of new reclass map.
.IP \fIjoin=tab,tabkey,pkey\fR
Tab is the table used to develop the current SQL query. Tabkey is the database column used to relate information in this table with data in the table linked to the GRASS category file. Pkey is the associated column in the table linked to the GRASS category file which is related to tabkey in the current table.

For instance, assume that seco_soil_cats is a table containing column values associated with category values 
in a the GRASS raster file soils. In addition, assume that compyld is a table containing 
attribute data on the crop production capacity in the same area (cropname). In this example seco_soil_cats is the table 
associated with the GRASS raster map and grass_cats is the column linking seco_soil_cats to the GRASS category 
file, the table compyld contains the attribute information to base the query/reclass on and it is linked to 
seco_soil_cats via the common column muid. To specify a query based on attribute values in the table compyld: 

	d.rast.db key=grass_cat tab=seco_soil_cats 
	col=cropname input=soils
	join=compyld,compyld.muid,seco_soil_cats.muid

Specifying these conditions would insure that all rows from table compyld which satisfy the query criteria would be matched with the corresponding rows in table seco_soil_cats, which are then related to the spatial features in the GRASS data layer via the GRASS category values.

This syntax is adequate to accomplish 2 table joins. However, if the query demands joins between more than 2 tables it is advisable to use the -s option [see Alternate Command Line Usage] to read a user prepared query, complete with join requirements, from a file.
.LP
.SH "ALTERNATE COMMAND LINE USAGE"
The alternate command line usage is provided to simplify the process of retrieving information from more than one table in the query criteria. The alternate command line structure is selected using the the [-s] flag on the command line. When using this flag the user must include the name of a text file on the command line as well. This file must include a complete, well formed SQL SELECT statement specifying the query criteria and all relevant JOINS needed to retrieve values which correspond to category values in a GRASS data layer. 

The user must also specify the name of the GRASS data layer containing these category values on the command line. The following example illustrates the syntax which must be used in constructing a SELECT statement for use with the -s flag.

.br
	SELECT UNIQUE tlid FROM cfcc_atts, cfcc 
.br
	WHERE cfcc.majfea="roads" 
.br
	      AND cfcc.minfea="county roads"
.br
	      AND cfcc.cfcode=main.cfcode 
.br
	      AND main.cfcode IS NOT NULL
.br
	ORDER BY main.cfcode



.LP
Flags
.IP \fI-s\fR
SQL select statements are input from a prepared file.
.LP
Parameters
.IP \fIsql=filename\fR
SQL statements specifying well formed selection criteria.
.IP \fIinput=map\fR
Name of an existing raster map.
.IP \fIoutput=map\fR
Name of a new reclass file.

.SH "EXAMPLE (two table join )"
.br
d.what.r.db  -s sql=statsgo.sql map=seco_soils
.br
statsgo.sql:
.br
	SELECT UNIQUE grass_cat,cropname 
.br
		FROM seco_soil_cats,compyld
.br
		WHERE compyld.muid = seco_soil_cats.muid
.br
		AND cropname IS NOT NULL
.br
	ORDER BY cropname

.br

.SH "RESULT:"
.br
This example will display a raster surface with a category for each unique value of the column "cropname" from the table compyld. The raster surface will be a reclassed data layer based on the input raster map seco_soils.
.SH BUGS
None known.

.SH "SEE ALSO"
g.column.db, g.select.db, g.stats.db, g.table.db, d.site.db, d.vect.db, d.what.r.db, d.what.s.db, d.what.v.db, r.reclass.db, r.rescale.db, v.reclass.db

.SH AUTHOR
James A. Farley, Wang Song and W. Fredrick Limp
University of Arkansas, CAST

