





























































Printed 10/3/90                                                 1






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



NAME
     Gdbvect - RIM data base management/query interface for GRASS
     vector maps

SYNOPSIS
     Gdbvect data_base

DESCRIPTION
     Gdbvect allows you to create, manage and query information
     about labeled lines and areas from a number of different
     vector maps in a batch mode or interactively, with input in
     a command line style.  Operations are done on a data base
     through a command language defined below.  This program,
     like Gdbsites and dbsites, is actually a marriage of the
     GRASS environment and the programmer's interface library of
     the relational data base management program RIM distributed
     publically by the University of Washington Academic
     Computing Services.

     The vector data bases are stored in a subdirectory named
     'rim/vect' in the user's current mapset.  Data bases in
     other mapsets, selectable through the GRASS mapsets command,
     can be accessed for 'read-only' retrieval of records.  Each
     mapset may have many data bases.  Each data base within a
     mapset must have a different name; user supplied names are
     limited to seven (7) characters in order to maintain
     compatibility with the standard version of RIM.  As with
     other GRASS commands, mapsets are searched in the mapset
     SEARCH_PATH order when a data base needs to be opened.

     Each vector data base is composed of multi-field records
     (rows or tuples, in DBMS jargon).  Each field and its
     position in the record form is defined via input to the
     .make command when a data base is originally defined.  It is
     possible to add new fields or change the length of existing
     fields after data has been loaded, however this is not
     straightforward; deleting of fields is also possible, but
     requires even more experience and knowledge.  The user needs
     to carefully design the data base fields and form and check
     the operation with a few pieces of test data before loading
     a large number of records.

     One significant difference between Gdbvect and Gdbsites is
     that Gdbvect needs access to the original vector maps that
     data were imported from to successfully complete some
     commands.  To keep track of which records were imported from
     which vector maps a new "table" has been added that keeps
     information about the reference vector maps.  This table is
     called "Referencemaps" in the RIM data base.  The Gdbvect
     commands .read_vect, .map and .maps allow the user to view
     and update this table.  The .vector_map command, which
     creates a new GRASS binary vector file, requires that the



GRASS 3.2                U.S. Army CERL                         1






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



     reference vector maps for the database still be accessible.
     If a reference map is not accessible, any vectors
     represented by the base records that were generated from
     that vector map will not be transferred to a new vector map.
     Reference vector maps may be in any mapset in the current
     SEARCH_PATH.

COMMANDS
     The commands are given alphabetically here for easy
     reference. The .make command is required to create a data
     base.  Abbreviations down to the string shown in ( ) are
     accepted; this is primarily for those using Gdbvect from a
     terminal, but abbreviations may also be used in batch files.

     Each command is introduced with an input record (line) which
     starts with a period and is followed by one of the words
     shown below; for some commands the command line also
     contains one or more required or optional parameters.
     Additional or optional input instructions/data for a command
     is supplied on successive lines; a .end line is needed by
     some commands to signify the end of these lines.

                  Alphabetical Command Summary


     !command
          This is the only Gdbvect command not starting with a
          period.  "command" is a single shell command line (no
          more than 80 characters) which is executed by a
          "G_system()" call (see GRASS gis library).  Many UNIX
          utilities (e.g., vi, ls, print, etc.) and most GRASS
          commands (e.g., Dcell, Dpoints, list, window, mask,
          etc.) may be executed within a single run of Gdbvect.
          (It is permitted to change "window" and "MASK" within
          Gdbvect. ) Multiple commands may be separated by ";" in
          the standard UNIX way.  Note that a "!cd directory; ls"
          will change to the specified directory and list files,
          but the effective working directory for Gdbvect will
          not be changed when the command terminates.

     .add (.a)
          Add a new vector record (row) to the open data base.
          Each line following contains a field name followed by
          spaces and/or tabs then the value or character string
          to store for that field.  Field information lines end
          with .end.  Some fields may be absent and fields may
          appear in any order.  The input of data is checked for
          one required field (sequence number), for field length
          for text type fields, and for duplicate sequence
          numbers.  If split text fields are used in the data
          base layout (see .make), text data for each split field
          must be added as a separate line.  If there are any



GRASS 3.2                U.S. Army CERL                         2






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          problems, the record will not be stored and a message
          will be output.  This format makes it relatively easy
          to import data from most other DBMS.  The ".print -a"
          command, see below, outputs data in this list format.

               Example:
                .add
                seq_num   204
                north     4690673.30
                east      601410.00
                map_num   1
                vect_type L
                reference Jones (1987)
                .end

     .backup (.b) file_name
          The .backup command is used to dump the entire data
          base from the RIM binary files to a text file format
          (see UNLOAD in the RIM User's Manual).  The file_name
          can be a relative path name or full path name.  The
          file will contain the data base definition, screen
          layout information, and tabular data.  This text file
          is transportable to RIM or Gdbvect running on any other
          computer; it may also be reloaded to recreate the
          Gdbvect data base.  A message will be output if there
          is any problem writing the .backup file.  Backup can
          only be done on data bases in the user's current
          mapset.

          To reload your data base from the backup file (normally
          not necessary):

               GRASS> cd $LOCATION/rim/vect     #right directory
               GRASS> rm db_name.rimdb*         #remove data base
               GRASS> rim                       #run RIM manually
               RIM> input "path/file"           #RIM rebuilds data base
               RIM> exit

     .change (.c)
          Each line following .change is in the same format as
          for the .add command.  The sequence number field is
          required and the sequence number must match an existing
          record in the data base.  Only those fields for which
          input lines are provided are changed in the record.
          After the .end the changed record is stored, if all is
          ok, otherwise an error message is output.

     .delete (.d)
          This command is used to delete data records.  Each line
          following the command should contain only a sequence
          number that you want to delete, with a .end line being
          last.  Deletion of records is permanent.  A backup of



GRASS 3.2                U.S. Army CERL                         3






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          the data base is the way to protect your valuable data.
          The following command sequence will delete all the
          records currently on Gdbvect's query list (the result
          of the last .query or .find command) after asking for
          approval.

                .delete
                .end

     .end (.e)
          Ends multi-line input for several other commands.

     .exit (.ex)
          Use .exit to end operation of Gdbvect cleanly.  In
          general, do not use CTRL-C to exit unless absolutely
          necessary.  When .exit is encountered in a batch file,
          input will revert back to the previous file, or the
          terminal, if any, which called the batch file.

     .find (.f) [mask | window]
          The .find command is used to find the record(s) whose
          location (label point) is closest to a given point (the
          target).  The target can be defined in one of several
          ways. The found records are stored on an internal query
          list for output by other commands; however, see note 2,
          below.  Records are sorted stored on the query list in
          order of proximity to the target location.  The
          optional .find command line parameter specifies the
          current MASK, if any, or the current window, as a
          filter on the retrieved sites; see notes 3 and 4,
          beolow.

          The single required line following the .find line gives
          the program the necessary target information.  The
          following examples show the possibilities.

               find> 602793.90 4379010.00

          will find the one record nearest these coordinates and
          store it on the internal query list.

               find> 619840 4599000 10

          will find the 10 records (or fewer, if there are not
          that many) closest to the given location.

               find> record 132 10

          will find the 10 records closest to the location (label
          point) for record 132 in the data base (including
          record 132).  If record 132 does not exist, no action
          is taken.



GRASS 3.2                U.S. Army CERL                         4






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



               find> distance from 472910.06 5732001.0 5000

          will find all records within 5000 (meters in UTM
          coordinates) of the target location.

               find> distance from record 16 -2500

          will find all records greater than 2500 (meters) from
          the location of record 16.

          Notes for .find:

          1.  All records found are stored on the query list in
          order of proximity to the target location (sorted by
          distance from target).

          2.  The number of records found is automatically
          printed to the active output device/file.

          3.  If mask is specified, the effective window is
          automatically set to the current window (because the
          GRASS mask is only defined for the current window).

          4.  Window and mask filtering uses the current
          resolution for the window to test if a point falls
          within a cell.

          5.  In the last two examples the string "distance from"
          must be exactly matched.  Also, the word "record" must
          be exactly matched.

          6.  If the "distance from" radius is given as a
          negative value, points outside the target circle are
          selected; whereas, if a positive value is given, points
          inside the circle are selected.

          7.  The current window may be changed with !Gwindow...
          or !window or !d.window prior to doing a .find, and the
          mask may be set or removed with a variety of GRASS
          commands.

          8.  The "find>" prompt is given only when input is from
          a terminal.

          9.  The "distance" between the target location and a
          record for a line or an area is actually the distance
          between the target location and the representative
          point that is stored in the data base.  This can lead
          to unexpected results when the representative point for
          a line or area is not near the "center" of the feature.

     .help (.h)



GRASS 3.2                U.S. Army CERL                         5






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          Prints a help screen to the output device or file.
          Useful to have when using Gdbvect from a terminal, or
          when writing a script file of commands.

     .input (.i) [file]
          The lines in the given file are read and processed as
          commands or data until an end of file is reached or
          until a .exit command is found.  Input files may call
          other input files, by using this command, to a nesting
          depth of eight.  Without a file name stdin is used as
          the nested input file.

     .list (.l)
          Lists the available data bases in the current mapset
          search path.

     .make
          Using the .make command you create a new data base in
          the current mapset by specifying the following items
          which define the screen (page) layout for displaying
          and printing the records, as well as the information
          fields:

               1)  The fixed text part of the screen layout.
               2)  The positions, types, and lengths of data
               fields.


          Five fields must always exist in a data base; each of
          these field types may only occur once in a data base
          layout:

               1) Type 's'  Sequence number field (a unique
               integer for each record).
               2) Type 'x'  Easting coordinate of the
               representative point (a double float).
               3) Type 'y'  Northing coordinate of the
               representative point (a double float).
               4) Type 'v'  Vector type field (a text field).
               5) Type 'm'  Reference Map field (an integer).

          The other field types, which may occur in any
          combination and order, are:

               6) type 'i'  An integer field.

               7) type 'f'  A double precision float field.
                            (always 2 decimal places used for output)

               8) type 't'  A text field.

          Each of the fields can be positioned anywhere within



GRASS 3.2                U.S. Army CERL                         6






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          the screen layout, which has a limit of 19 lines by 80
          columns.  A maximum of 70 fields may be defined within
          this space.  A field is specified in the screen layout
          by a tilde (~), a field type character, a field name
          and enough trailing tildes to fill out the desired
          field length.

          Each line following the .make command is taken to
          define a line of the screen layout until a .end is
          reached.  If a mistake is made on any of the input
          lines, the .make will fail.  The .make information may
          be prepared in advance as a text file (this facilitates
          fixing mistakes) and the .input command can be used to
          read in this file.  An example text file for a data
          base screen layout follows, with some explanatory notes
          and restrictions.

           .make
                        Hydrology Vector Database
                        =========================

           Record #: ~sSeqnum~  Feature Name: ~tName~~~~~~~~~~~~
           Vector type: ~vVtype         Reference Map: ~mRefMap~
           North: ~yNorth~~~~~    East: ~xEast~~~~~~

           Updated:  ~tUpdate_Date~~~~~~~

           Comments:
               ~tComments.1~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               ~tComments.2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               ~tComments.3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           .end

          Notes:

          1)  Any text not preceded by a tilde (~) character is
          taken to be part of the constant or fixed text portion
          of the form.

          2)  A field definition begins with a tilde (~)
          character immediately followed by a single character
          which indicates the data type of the field
          (s,x,y,v,m,i,f or t).  Immediately following the data
          type character is the field name of 1 to 16 characters.
          Field names can be composed of any characters from the
          following set: [A-Z,a-z,_,0-9]; the RIM program and
          library do not distinguish upper and lower case in
          field names, so you should avoid making names which
          differ only in case.  Field names may not begin with a
          numeral [0-9].  The rest of the field length is padded
          with tilde (~) characters to the length desired.




GRASS 3.2                U.S. Army CERL                         7






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          3)  The minimum field width is three characters; e.g.,
          "~tA".  Be sure field widths for all fields are wide
          enough for the values and strings you expect to store
          there; e.g., UTM northings require at least 11 spaces.

          4)  For text fields it is possible to continue a field
          across more than one line.  This is done by appending a
          .1 to the field name forming first portion of this
          "split field", a .2 for the second portion, etc.  This
          text field splitting affects how information is
          organized for input and output; the composite text
          string is concatenated (unused portions of fields are
          retained as spaces) and treated as a unit for storage
          and queries to the data base.

     .map (.m) [ map_id  map_name | -d map_id ]
          Without arguments this command causes Gdbvect to output
          a list of all the reference vector maps that are stored
          in the reference maps table.  If a map number (map_id)
          and a vector map name (map_name) are given the vector
          map is found and added to the reference maps table in
          the data base.  If the map number (id_num) is already
          in that table an error is issued and no action is
          taken.

          Finally, to delete a map from the reference maps table,
          use the '-d' option followed by the map number
          (map_id).  The map information for the given map number
          will be displayed and the user will be asked to confirm
          the deletion with a 'y'.  Enter a 'n' (for no) if you
          do not want to delete that reference map.

          Remember, that if you delete a reference map for which
          there are still records in the data base, you cannot
          make a new vector map (using the .vector_map command)
          that includes those records.

     .output (.o) [file or | process]
          Causes all output (except some error messages) from
          Gdbvect, including that from the .print command, to go
          to the named path/file (may be a full or relative path
          name), or to be used as standard input by the process
          (a pipe).  If no parameter is given, output returns to
          stdout, usually the user's terminal.  An example of the
          pipe usage would be
                .output | grep "easting" | wc -l > /tmp/my_count
          A pipe is closed whenever the .output command is given
          again, or on a .exit command.

     .pack (.pa)
          This should be used when numerous data records have
          been deleted or changed to recover disk space in the



GRASS 3.2                U.S. Army CERL                         8






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          RIM binary data base files.  It works by doing a
          .backup to a temporary file; moving the data base files
          to new names (*.bakdb*); running RIM to rebuild the
          data base; and, if the rebuilt data base can be opened
          and read, the temporary files are deleted.  The user is
          informed if this process fails.  Packing can only be
          done on an open data base located in the user's current
          mapset.

     .print (.p) [-a | -l]
          This command outputs the full record for the records
          currently stored on the internal query list (result of
          last .query or .find).  Without the flag, the screen
          layout format is used.  With the -l flag, for list
          format, the field name followed by the contents are
          output one field per line.  The -a flag also outputs in
          the list format but with a .add line and a .end line
          surrounding each record printed; data files in this
          form can be read with .input, thus they form one kind
          of backup mechanism and can be used to transfer data
          (not the data base layout) from one GRASS system to
          another.  The destination for the output is set by a
          previous .output command (default is stdout).

     .query (.q) [mask | window]
          The .query command is used to retrieve records via an
          SQL-like request to RIM, including a user specified
          "where clause." All fields for each record meeting the
          selection criteria are retrieved.

          The optional .query command line parameters cause
          records whose representative points are not in the
          window and/or mask to be rejected, so these conditions
          need not be tested in the "where clause."

          After the query command line, any number of lines (each
          no more than 80 characters) may be entered to define
          the SQL "where" clause.  A .end line is required to
          finish the request and begin data retrieval.  See
          examples below.

          The "distance from" clause may also be used as an
          additional selection criteria exactly as described in
          the examples and notes for .find.  It must be entered
          as a separate line to the query prompt.

          The retrieved records may be printed at time of
          retrieval, rather than after the completion of the
          query command by including a .print (.p) line with the
          same options for print format as in the .print command
          (see above); e.g. .p -a to output in the "list add"
          format.  The .print clause must be entered as a



GRASS 3.2                U.S. Army CERL                         9






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          separate line to the query prompt.  This feature is
          most useful when working with very large data bases
          where retreval time is significant.  See example 2
          below.

          Example 1

               query> where density < 20 and (date = "10/14/89"
               query> or county eq "San Marcos")
               query> .end

          Example 2

               query> where east <600000 and name like "*Jones*"
               query> distance from record 12 3000
               query> .print -a
               query> .end

          Example 3

               query>.end

          The where and distance from clauses are each optional.
          If both are omitted, only the mask and window on the
          .query command line restrict the search; if mask and
          window are also omitted, all records will be retrieved
          (Example 3).  When querying for records the where
          clause is processed first, the current window and mask
          tested (if requested), then the distance from clause is
          applied; a record must pass all tests to be put on the
          internal query list for output by other commands.

          Notes:  (Also see Notes for .find)

          1.  The retrieved records are stored on the internal
          query list in the order returned from the data base by
          RIM, not necessarily in sequence number order or the
          order the data was loaded.  A "distance from" clause
          results in a final sorting by proximity to target.

          2.  See the RIM User's Manual and the dbsites manual
          page for additional information on the "where" clause
          in the "select" command, especially the quotes required
          for matching character string (text) fields, and the
          allowed comparison operators.

          3.  In the example where clauses above, "density",
          "date", "county", east", and "name" are field names
          (column names in RIM) defined when the user initially
          makes the data base.

          4.  Each .query or .find resets the internal query



GRASS 3.2                U.S. Army CERL                        10






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          list.

     .read_vect (.re) vector_map_name [attribute_field [text_field]]
          This command will read an existing GRASS vector map and
          create a data base record for each labelled area, line,
          and point.  The sequence number field will
          automatically be generated starting from one greater
          than the highest current number in the database.  If
          the optional attribute_field is provided it must be an
          integer field and it will be filled with the area,
          line, or point attribute label.  If the optional
          text_field is provided and a category description file
          (a dig_cats file) exists for the vector map, the
          category descriptions will be copied into the given
          text field.

          Once the records have been loaded by .read_vect, use
          .change to add data to other fields for those records.

          Note:  Only labeled areas, lines and points are
          imported from the vector map.

     .remove
          This command, which requires a "y" as confirmation on
          the next line, entirely removes the three binary files
          which constitute your RIM data base.  Use with care.
          Backup files must be removed individually by the user,
          if desired.

     .show (.sh)
          This command is used to output the screen or page
          layout as defined for the current data base.  It serves
          as documentation of the data base definition and as a
          reminder for field names, types and lengths.  By using
          an editor to surround the output of .show with .make
          and .end lines, it can be used to reload the data base
          definition with .input.

     .site_list (.si) file_name [field_name]
          This command writes the site locations and the record
          numbers to the specified file in the site_list
          directory in the current mapset.  If the file exists,
          the sites are appended to the current list, otherwise,
          a new site list file is created.  A "field name" may be
          optionally specified; if so, the contents of that field
          (retrieved from the appropriate site record) are
          inserted as the comment (following a '#') in the site
          list.  The record number is used if no field name is
          supplied.  Such site lists may be used as input to
          Gdbsites or dbsites.

          A comment line is inserted in the site_list file with



GRASS 3.2                U.S. Army CERL                        11






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



          the current date and time and the name of the data base
          producing the site locations.  The format used for each
          site is:

               easting|northing|#number or comment


     .tables (.t)
          Prints the table structure of the currently opened RIM
          data base.  This is the same output generated by a
          "list *" command when running RIM manually.  The
          information for the table named "data" is useful for
          review of the user's field definitions, and the table
          named "Referencemaps" contains the reference map
          information.  The information in the two other tables
          is for internal use by Gdbvect.

     .vector_map (.v) file_name [attribute_field [text_field]]
          This command creates a new binary vector map by copying
          the vectors associated with each record on the query
          list from the reference vector maps into the new vector
          map.  If the optional attribute_field parameter is
          provided, the areas and lines in the new vector map
          will be labeled from the given integer field.  If the
          optional text_field is provided, it will be used to
          build a category description file (dig_cats file) for
          the vector map.

          The header of the new binary vector file will contain
          information about the current date and indicate that
          Gdbvect was used to create the vector map.

          The topology information (the dig_plus file) is not
          automatically built for the new vector map and the user
          must run support.vect to do so before digit can be used
          to edit the vector map.  The vector map can immediately
          be display, from within Gdbvect by issuing the
          following command (assuming you have a graphics monitor
          selected):
               !Dvect file_name

NOTES
     1.  A "date" type field should be added to future versions.
     This version only allows storing of dates as strings (unless
     the user codes them to integers), and thus only string type
     searches can be made for dates.

SEE ALSO
     Gdbsites[2] dbsites[1]
     RIM User's Manual by Jim Fox, Academic Computing Services,
     Univ. of Washington.  See especially Appendix B on
     redistribution of RIM.



GRASS 3.2                U.S. Army CERL                        12






Gdbvect(2G)          GRASS Reference Manual           Gdbvect(2G)



AUTHORS
     David Satnik and James Hinthorne, GIS Laboratory, Central
     Washington University.




















































GRASS 3.2                U.S. Army CERL                        13



