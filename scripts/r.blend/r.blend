#!/bin/sh

############################################################################
#
# MODULE:	r.blend for GRASS 5.7; based on blend.sh for GRASS 5
# AUTHOR(S):	CERL?; updated to GRASS 5.7 by Michael Barton
# PURPOSE:	To redraw current displayed maps to 24 bit PNG output
# COPYRIGHT:	(C) 2004 by the GRASS Development Team
#
#		This program is free software under the GNU General Public
#		License (>=v2). Read the file COPYING that comes with GRASS
#		for details.
#
#############################################################################

#%Module
#%  description: Blends color components of two raster maps by a given ratio.
#%  keywords: raster
#%End
#%option
#% key: first
#% type: string
#% gisprompt: old,cell,raster
#% description: Name of first raster map for blending
#% key_desc : name
#% required : yes
#%end
#%option
#% key: second
#% type: string
#% gisprompt: old,cell,raster
#% description: Name of second raster map for blending
#% key_desc : name
#% required : yes
#%end
#%option
#% key: output
#% type: string
#% description: Base name for red, green and blue output maps containing the blend
#% key_desc : name
#% required : yes
#%end
#%option
#% key: percent
#% type: double
#% answer: 50
#% options : 0-100
#% description: Percentage weight of first map for color blending
#% required : no
#%end
#% flag
#% key: c
#% description: Combine resulting R,G,B layers into single output map
#%end


if  [ -z "$GISBASE" ] ; then
   echo "You must be in GRASS GIS to run this program." 1>&2
   exit 1
fi   

# save command line
if [ "$1" != "@ARGS_PARSED@" ] ; then
    CMDLINE=`basename "$0"`
    for arg in "$@" ; do
        CMDLINE="$CMDLINE \"$arg\""
    done
    export CMDLINE
    exec g.parser "$0" "$@"
fi

FIRST="$GIS_OPT_FIRST"
SECOND="$GIS_OPT_SECOND"
OUTPUT="$GIS_OPT_OUTPUT"
PERCENT="$GIS_OPT_PERCENT"

if [ "$GRASS_OVERWRITE" != 1 ] ; then
   for MAP in r g b ; do
      g.findfile elem=cell file="$OUTPUT.$MAP" > /dev/null
      if [ $? -eq 0 ] ; then
         g.message -e "Raster map <$OUTPUT.$MAP> already exists."
         exit 1
      fi
   done
fi

PERC_INV=`echo "$PERCENT" | awk '{printf("%.6g", 100.0 - $1)}'`

g.message "Calculating the three component maps..."
r.mapcalc "$OUTPUT.r = r#$FIRST * $PERCENT/100.0 + (1.0 - $PERCENT/100.0) * r#$SECOND ; \
           $OUTPUT.g = g#$FIRST * $PERCENT/100.0 + (1.0 - $PERCENT/100.0) * g#$SECOND ; \
           $OUTPUT.b = b#$FIRST * $PERCENT/100.0 + (1.0 - $PERCENT/100.0) * b#$SECOND"

g.message "Setting color tables to grey..."
# this must be "0 black \n 255 white"
for MAP in r g b ; do
   r.colors map="$OUTPUT.$MAP" col=grey255
   r.support map="$OUTPUT.$MAP" title="Color blend of $FIRST and $SECOND" \
      history=""  description="generated by r.blend"
   r.support map="$OUTPUT.$MAP" history="r.blend \"$MAP\" channel."
   r.support map="$OUTPUT.$MAP" \
      history="  $PERCENT% of $FIRST, $PERC_INV% of $SECOND"
   r.support map="$OUTPUT.$MAP" history=""
    # write cmd history:
   r.support map="$OUTPUT.$MAP" history="${CMDLINE}"
done


if [ $GIS_FLAG_C -eq 1 ] ; then
    r.composite r="$OUTPUT.r" g="$OUTPUT.g" b="$OUTPUT.b" output="$OUTPUT"
    r.support map="$OUTPUT" title="Color blend of $FIRST and $SECOND" \
      history="" description="generated by r.blend"
    r.support map="$OUTPUT" \
        history="$PERCENT% of $FIRST, $PERC_INV% of $SECOND"
    r.support map="$OUTPUT" history=""
    r.support map="$OUTPUT" history="${CMDLINE}"
    
    g.remove --quiet rast="$OUTPUT.r,$OUTPUT.g,$OUTPUT.b"
else
    g.message "Done. Use the following command to visualize the result:"
    g.message message="d.rgb r=$OUTPUT.r g=$OUTPUT.g b=$OUTPUT.b"
fi


exit 0
