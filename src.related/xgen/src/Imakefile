#   Imakefile - Imakefile for xgen
#
################################################################################
# Xgen was developed by Kurt Buehler, while at the Center for Advanced Decision
# Support for Water and Environmental Systems (CADSWES), University of Colorado
# at Boulder and at the Indiana Water Resources Research Center (IWRRC),
# Purdue University for the U.S. Army Construction Engineering Research
# Laboratory in support of the Geographical Resources Analysis Support
# System (GRASS) software. The example scripts were developed by Ms. Christine
# Poulsen of USA-CERL, much thanks goes to her for her work.
# 
# Permission to use, copy, modify and distribute without charge this software,
# documentation, etc. is granted, provided that this comment is retained,
# and that the names of Kurt Buehler, Christine Poulsen, CADSWES, IWRRC,
# the University of Colorado at Boulder, Purdue University, or USA-CERL are not
# used in advertising or publicity pertaining to distribution of the software
# without specific, written prior permission.
# 
# The author disclaims all warranties with regard to this software, including
# all implied warranties of merchantability and fitness, in no event shall
# the author be liable for any special, indirect or consequential damages or
# any damages whatsoever resulting from loss of use, data or profits,
# whether in an action of contract, negligence or other tortious action,
# arising out of or in connection with the use or performance of this
# software.
################################################################################
# This is where you want xgen to live...
# BINDIR	= /usr/local/bin
#
# This is where you want xgen to live...
   MANDIR	= /usr/man/mann
#define ManSuffix n
#
#CDEBUGFLAGS	= -g
CDEBUGFLAGS	= -O
# If you have Motif 1.0 use this line
COMPATFLAGS	= -DXAW_BC -D_NO_PROTO -DPRE_MOTIF_1_1
# Else use this line
#COMPATFLAGS	= -DXAW_BC -D_NO_PROTO
# If you have a non traditional path to you includes edit this line
   STD_INCLUDES = -I/usr/include/Xm
# We have a special Xt lib called Xtm here at CERL
LOCAL_LIBRARIES	= -ll -lXm -lXtm -lX11
# yuo probably don't
#LOCAL_LIBRARIES	= -ll -lXm -lXt -lX11
  SYS_LIBRARIES = -lm
         YFLAGS = -d
           OBJS = addnode.o alloctypes.o button.o buttonname.o buttonpush.o \
                  check.o clear.o cmdboard.o command.o control.o \
                  createobj.o creatshell.o destshell.o docapture.o \
                  dodup.o doerror.o doexec.o dojobs.o doset.o error.o \
                  exit.o expand.o expandobj.o expandvar.o grammar.o \
                  help.o index.o initshell.o label.o lex.o list.o \
                  listchng.o listdata.o main.o menu.o message.o \
                  msgboard.o objectargs.o objectval.o parsecom.o popup.o \
                  procmess.o pulldown.o resource.o rindex.o sensitive.o \
                  separator.o signal.o slider.o strpart.o table.o \
                  textentry.o toggle.o togglechng.o toggledata.o \
                  unique.o Table.o
# NOTE: If you want to use Saber-C on the source, you must create grammar.c
#       and lex.c by hand.
#           yacc -d grammar.y; mv y.tab.c grammar.c
#           lex -t lex.l > lex.c
#
           SRCS = addnode.c alloctypes.c button.c buttonname.c buttonpush.c \ 
                  check.c clear.c cmdboard.c command.c control.c \
                  createobj.c creatshell.c destshell.c docapture.c \
                  dodup.c doerror.c doexec.c dojobs.c doset.c error.c \
                  exit.c expand.c expandobj.c expandvar.c grammar.c \
                  help.c index.c initshell.c label.c lex.c list.c \
                  listchng.c listdata.c main.c menu.c message.c \
                  msgboard.c objectargs.c objectval.c parsecom.c popup.c \
                  procmess.c pulldown.c resource.c rindex.c sensitive.c \
                  separator.c signal.c slider.c strpart.c table.c \
                  textentry.c toggle.c togglechng.c toggledata.c \
                  unique.c Table.c

ComplexProgramTarget(xgen)
