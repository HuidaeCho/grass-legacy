.de EX		\"Begin example
.ne 5
.if n .sp 1
.if t .sp .5
.nf
.in +.5i
..
.de EE
.fi
.in -.5i
.if n .sp 1
.if t .sp .5
..
.ta .3i .6i .9i 1.2i 1.5i 1.8i
.TH xgen 1.1 "Release 4" "X Version 11"
.SH NAME
xgen - A script like language for providing Motif interfaces to UNIX command line programs.
.SH SYNTAX
.PP
\fBxgen [\fP-v\fP][\fP-c\fP] [\fP-p\fP] [\fP-n\fP] [\fP-help\fP] [\fP-patch\fP] [\fP-version\fP] 
.PP
.B	[\fP-I\fIdir\fP] [\fP-D\fIname\fP] [\fP-D\fIname=def\fP] 
.PP
.B	[\fPsome X toolkit options\fP] \fIscriptfile\fP
.PP
.SH DESCRIPTION
.PP
\fIxgen\fP
is a program that was designed for the rapid generation of
graphical user interfaces to existing shell level programs
based on the X Window System and Motif. A simple, hierarchically-oriented 
language allows an interface designer
to define a graphical user interface that is used to collect information
from the user and execute shell level commands based on the information.
The \fIxgen\fP software takes as input an interface description, or script.
This script is interpreted, the interface is created, and then operated by \fIxgen\fP.

.SH OPTIONS
\fIxgen\fP accepts the following command line options:
.PP
.TP 8
.B \-v
This option specifies verbose mode.
.PP
.TP 8
.B \-c
This option turns on a debugging tool called a control box.
.PP
.TP 8
.B \-p
This option tells xgen to just parse the scriptfile and not run the interface.
.PP
.TP 8
.B \-n
This option will cause the scriptfile not to be passed through the C preprocessor.
.PP
.TP 8
.B \-help
This option prints out a help message. The help message is also printed out when an unrecognized option is given.
.PP
.TP 8
.B \-patch
This option causes xgen to print out the version (patchlevel) information.
.PP
.TP 8
.B \-version
Same as -patch.
.PP
.TP 8
.B \-I\fIdir\fP
This option will add the value of \fIdir\fP to the cpp(1) search list.
.PP
.TP 8
.B \-D\fIname\fP
This option will define \fIname\fP as 1 (true) to cpp(1).
.PP
.TP 8
.B \-D\fIname=def\fP
This option will define \fIname\fP as \fIdef\P to cpp(1).
.PP
.TP 8
.B \fscriptfile\fP
This is the name of the \fIxgen\fP script to be processed. If \fIscriptfile\fP is not given \fIxgen\fP takes standard input.
.PP
.SH SYNOPSIS
This man page is intended to be a quick reference ONLY. For complete information
on the use of xgen please read \fIThe xgen Application Generator Program (Version 1.1)\fP that accompanies xgen.

.SH REFERENCE

.IP "\fBScript Structure"
.PP
The script file contains one or many environment descriptions, an environment 
description contains shell description, a shell description contains 
object definitions. With syntax as follows: ( keywords are \fBbold\fP )
.EX 0
.I global section
.B environment \fIenvironment-name  
	(list of environment resources) 
.B {
.I 	shell \fIshell-name
		(list of shell resources)
.B 	(
.I		object \fIobject-name 
			(list object resources) 
.B		; 
		(more objects)
.B	)
	(more shell descriptions)
.B }
 (more environment descriptions)
.EE

.IP \fBENVIRONMENT
The keyword \fIenvironment\fP is used to define an environment. Every xgen program 
must have at lease one environment. The following resources can be used to 
modify the environment: x y dx dy initialshells interactive background foreground 
font override set inputfrom sensitive insensitive.

.IP \fBSHELLS
There are only two types of shells \fIcommandboard\fP and \fImenu\fP. The 
\fIcommandboard\fP shell is a generic shell, you can use any object within a 
\fIcommandboard\fP shell. The \fImenu\fP shell is a less generic shell, you 
can only use a few objects in a \fImenu\fP shell but it can be described 
dynamically using the \fIupdatefrom\fP resource. \fICommandshell\fP is modified by
the following resources: \fIpane x y dx dy width height background foreground
font titlestring override help set inputfrom sensitive insensitive 
commandshell\fP. \fIMenu\fP is modified by the following resources: \fIx y dx dy 
width height background foreground font titlestring override help 
set inputfrom sensitive insensitive commandshell updatefrom maxheight maxwidth 
visibleitems\fP.

.IP \fBOBJECTS
This is a list of objects what they do and what resources modify them.
.PP
.EX 0
\fBlabel\fP:   Used to label an area of a menu, can take no 
			action. 
		Type: text or bitmap filename
		Is modified by: x y dx dy labelpixmap
			alignment width background 
			foreground font

\fBseparator\fP: Used to visually divide up a menu, can take no
			action.
		Type: name (it's name has no value)
		Is modified by: x y dx dy width background 
			foreground orientation separatortype

\fBbutton\fP:  Used to to clear or set a value, popup(down)
			menus, run a command or change the 
			command processor, bring up a new 
			environment, store a string, or exit
			xgen.  getenv exit clear store
		Type: name
		Is modified by: x y dx dy labelpixmap 
			alignment width background foreground
			font titlestring set runforeground
			runbackground commandarg captureoutput
			inputfrom popup popdown 

\fBmessage\fP: Used to to display text
		Type: text
		Is modified by: x y dx dy labelpixmap 
			alignment width background foreground
			font columns

\fBtextentry\fP: Used to get a string from the user.
		Type: value
		Is modified by: x y dx dy width height
			background foreground font titlestring

\fBlist\fP:   	Used to get values from the user.
		Type: value
		Is modified by: x y dx dy width height 
		background foreground font titlestring 
		visibleitems clear listelement valuestring 
		listseparator updatefrom listtype

\fBtoggle\fP:  Used to get one or many values from the user
		Type: value
		Is modified by: x y dx dy width height 
			background foreground font 
			titlestring listelement valuestring
			listseparator toggletype

\fBslider\fP:  Used to get a number from the user
		Type: value
		Is modified by: x y dx dy width height 
			background foreground font
			titlestring minimum maximum
			startvalue decimalpoint orientation

\fBtable\fP:   Used to get an array of values from the user
		Type: value
		Is modified by: x y dx dy width height 
			background foreground font 
			titlestring rows rowsdisplayed
			columns columnsdisplayed columnwidth 
			separator columnheadings 
			rowheadings tablevalue rowheight 
			rowvalue newline entryfont

\fBpulldown\fP: Used to provide a pulldown menu system.
		Type: name
		Is modified by: it's syntax is that of a menu
			shell.

.IP \fBRESOURCES\fP
\fBupdatefrom\fP: The contents of the string will be used to
			generate a set of buttons for the 
			menu.
		Type: string, any string
		Modifies: menu list

\fBmaxheight\fP: Used to limit height.
		Type: int, positive integer
		Modifies: menu list

\fBmaxwidth\fP: Used to limit width.
		Type: int, positive integer
		Modifies: menu list

\fBvisibleitems\fP: Used to limit the number of items visible
			at a time.
		Type: int, positive integer
		Modifies: menu list

\fBx\fP:	Used to set the shell/object at the x 
			position in pixels on the screen. If
			negative the position is measured from
			the right.
		Type: int
		Modifies: menu commandboard all objects

\fBdx\fP:	Sets the shell at the x position in pixels on
			the screen. If negative the position
			is measured from the top.
		Type: int
		Modifies: menu commandboard all objects

\fBdy\fP:	Sets the shell at the y position in pixels on
			the screen. If negative the position 
			is measured from the bottom.
		Type: int
		Modifies: menu commandboard all objects

\fBy\fP:	Used to set the shell/object at the y 
			position in pixels on the screen. If
			negative the position is measured 
			from the bottom.
		Type: int
		Modifies: menu commandboard all objects

\fBwidth\fP:	Used to set the width in pixels.
		Type: int
		Modifies: menu commandboard label separator
			button textentry list slider pulldown

\fBheight\fP:	Used to set the height in pixels.
		Type: int
		Modifies: menu commandboard label separator
			button textentry list slider pulldown

\fBpane\fP:	Used to vertically pane all objects. The
			default is NOT to pane the objects.
		Type: boolean, [oO]n [tT]rue
		Modifies: commandboard

\fBforeground\fP: Used to set the foreground color to the that
			indicated in the string.
		Type: string
		Modifies: menu commandboard all objects

\fBbackground\fP: Used to set the background color to the that
			indicated in the string.
		Type: string
		Modifies: menu commandboard all objects

\fBtitlestring\fP: Used to set the title of the shell/object
			to the value of the string. The title
			is the name of the shell/object by
			default.
		Type: string
		Modifies: menu commandboard label button 
			textentry list toggle slider table
			pulldown

\fBoverride\fP:	Overrides the window managers tendency to 
			allow interactive placement.  This 
			resource is very sensitive to settings
			within the window manager
			configuration files.
		Type: boolean, [oO]n [tT]rue
		Modifies:menu commandboard

\fBhelp\fP:	Creates a menu bar across the top of the shell
			with a help button.  When the button 
			is pressed a help dialog pops up with
			the contents of the string displayed 
			in it. Useful when used with a
			commandboard that uses pulldown menus.
		Type: string
		Modifies: menu commandboard

\fBrunforeground\fP: Executes the command in string in the 
			foreground (\fIxgen\fP will wait until
			done). The keyword KillInterActive is
			used to stop execution of an
			interactive program. note1
		Type: string-filespec
		Modifies: button

\fBbackground\fP: Executes the command in string in the 
			background (\fIxgen\fP will not wait
			until done).The keyword
			\fBKillInterActive\fP is used to stop
			execution of an interactive program.
			note1
		Type: string-filespec
		Modifies: button

\fBcommandarg\fP: Appends these command line arguments onto 
			the next run command.
		Type: string
		Modifies: environment menu commandboard button

\fBset\fP\fIVAR\fP: Sets the variable VAR to the value of the
			string. The keyword buttonname is used
			to get the name of the button pressed
			in a commandboard or menu.
		Type: string
		Modifies: environment menu commandboard button

\fBinputfrom\fP: Uses the file name given as standard input 
			for the next run command. note1
		Type: string-filename
		Modifies: environment menu commandboard button

\fBcaptureoutput\fP: Uses the file name given as a file to put 
			the output of the next command into. 
			This resource can be set with either 
			of two special keywords: "editor" and 
			"append". If the string is "editor"
			the output of the next run command is put
			into it's own scrolling text window. If 
			the string is "append" the output 
			is appended to the end of a "global" 
			text window. note1
		Type: string-filename
		Modifies: button

\fBinsensitive\fP: Sets the specified objects and/or shells 
			insensitive. Object names can be 
			specified as \fIshell:object\fP.
		Type: string
		Modifies: environment menu commandboard button

\fBsensitive\fP: Sets the specified objects and/or shells 
			sensitive. Object names can be 
			specified as \fIshell:object\fP.
		Type: string
		Modifies: environment menu commandboard button

\fBcommandshell\fP: Will use the full path file name and 
			command-line arguments given as the
			command interpreter instead of
			/bin/sh -c. Specifying commandshell in
			the environment or menu or
			commandboard will not work at this
			time.
		Type: string-filespec
		Modifies: button (commandshell menu)

\fBinitialshells\fP: Specifies the shells that are popped up
			when the environment becomes active.
		Type: string
		Modifies: environment

\fBinteractive\fP: Specifies the complete pathname and 
			command-line arguments of a program 
			that normally runs with interactive
			input.
		Type: string-filespec
		Modifies: environment

\fBlabelpixmap\fP: Used to supply an image for a button
			instead of a string.
		Type: string-filename
		Modifies: button label message

\fBalignment\fP: Used to align text within objects. Default:
			center, Values: center,left,right.
		Type: string-toggle
		Modifies: button label message

\fBorientation\fP: Used to orient separators and sliders. 
			Default:horizontal, Values: 
			horizontal or vertical.
		Type: string-toggle
		Modifies: separator slider

\fBsepratortype\fP: Used to change the look of a separator. 
			Default:singleline Values:singleline
			doubleline singledashedline
			doubledashedline noline shadowetchedin
			shadowetchedout.
		Type: string-toggle
		Modifies: separator

\fBcolumns\fP:	Used to Used to limit the number of columns 
		displayed with a message or table.
		Type: integer
		Modifies: message table

\fBlistelement\fP: Used to provide an entry in a list or name
			a button in a toggle. It is proceeded 
			by valuestring to provide a value for
			the object.
		Type: string
		Modifies:toggle list

\fBvaluestring\fP: Used to provide default value for a 
			textentry or, with list or toggle, 
			used after listelement to set the 
			value of the name of the toggle or 
			list.
		Type: string
		Modifies: textentry list toggle

\fBclear\fP:	Used to clear a value - it will empty a 
			textentry.
		Type: string
		Modifies:textentry valuestring toggle list
			table slider

\fBlistseparator\fP: Used as a string to separate values in a
			selections. i.e a " -" to separate 
			command line options.
		Type: string
		Modifies:toggle list

\fBlisttype\fP:	Used to determine the list behavior. Default: 
			single, Values: single multiple
			extended browse.
		Type: string-toggle
		Modifies:list

\fBtoggletype\fP: Used to determine the toggle behavior 
			between N-of-many(default) and 
			One-of-many(radio).
		Type: string-toggle
		Modifies:toggle

\fBminimum\fP: 	Used to set the minimum value of a slider.
		Type: int
		Modifies:slider

\fBmaximum\fP: 	Used to set the maximum value of a slider.
		Type: int
		Modifies:slider

\fBstartvalue\fP: Used to set the starting(default) value of a
			slider.
		Type: int
		Modifies:slider

\fBdecimalpoint\fP: Used to set the number of decimal points
			(from the left) to shift the value of
			a slider. Default is zero.
		Type: int
		Modifies:slider

\fBrows\fP: 	Used to set the number rows in a table.
		Type: int
		Modifies:table

\fBcolumns\fP: 	Used to set the number columns in a table.
		Type: int
		Modifies:table

\fBcolumnsdisplayed\fP: Used to set the number columns 
			displayed in a table.
		Type: int
		Modifies:table

\fBrowsdisplayed\fP: Used to set the number rows displayed in
			a table.
		Type: int
		Modifies:table

\fBrowheight\fP: Used to set the height of rows in a table.
		Type: int
		Modifies:table

\fBcolumnwidth\fP: Used to set the width of columns in a table
		Type: int
		Modifies:table

\fBseparator\fP: When used inside a table definition the
			separator is a string that separates
			list elements in rowheadings, 
			columnheadings, rowvalue, tablevalue,
			and the value of the table.
		Type: string
		Modifies:table

\fBrowheadings\fP: Used to set the row heading in a table.
			Elements in the list are separated by
			the table separator string.
		Type: string-list
		Modifies:table

\fBcolumnheadings\fP: Used to set the column heading in a
			table. Elements in the list are 
			separated by the table separator
			string.
		Type: string-list
		Modifies:table

\fBrowvalue\fP: Used to set the value of every cell in a row 
			in a table. Elements in the list are
			separated by the table separator 
			string.
		Type: string-list
		Modifies:table

\fBtablevalue\fP: Used to set the value of every cell in a 
			table. Elements in the list are 
			separated by the table separator 
			string.
		Type: string-list
		Modifies:table

\fBnewline\fP:	Used to change the row(record) separator to a
			newline rather than a space. Default:
			none, Values: true.
		Type: boolean
		Modifies:table

.EE
note1: The affect of these resources is changed when you use the interactive resource.

.IP "\fBSyntax Notes\fP"
This is a small list of the gotchas and some motherly reminders when programming
with the \fIxgen\fP scripted language.
.PP
For the beginner: The first thing in a file should be an environment description. 
The first thing in an \fIenvironment\fP description should be \fIinitialshells\fP.
This will make sure your menus popup.
.PP
To use the value of a \fIslider\fP,\fIlist\fP,\fItoggle\fP or \fItable\fP enclose the name in
square brackets. i.e. runforeground:"/bin/ls \fB[\fPoptionstoggle\fB]\fP"
.PP
\fB$\fP doesn't get you anywhere with the name of a \fItoggle\fP, \fIlist\fP or \fItable\fP.
.PP
To get the value of a cell in a \fItable\fP enclose the sell address in parentheses
i.e. setFUBAR:"[table1\fB(\fP3,6\fB)\fP]" a single row would be 
setFUBAR:"[table1\fB(\fP3\fB)\fP]" and you can't get the value of a single column.
.PP
To use the value of a variable put a \fB$\fP sign in front of it.
i.e. runforeground:"/bin/ps -u \fB$\fPUSER" Remember that \fB$USER\fP could be the 
environment variable \fBUSER\fP or it could have been set with setUSER="joe".
.PP
The keyword \fIbuttonname\fP is set to the value of the \fIbutton\fP that was just 
pushed.
.PP
The keyword \fIKillInterActive\fP is used to stop execution of an \fIinteractive\fP program.
.PP
The keyword \fIdynamic\fP is used to describe the action buttons take in \fImenu\fP using
\fIupdatefrom\fP.
.PP
The keyword \fB"editor"\fP when used in a \fIcaptureoutput\fP will put the output of the next
command into it's own scrolling text window.
.PP
The keyword \fB"append"\fP when used with \fIcaptureoutput\fP will append the
output of the next command into a continuous scrolling text window. If a
continuous scrolling text window is not visible, one will be made visible.
.PP 
Please note that when you do a \fIcaptureoutput:"editor"\fP or a \fIcaptureoutput:"append"\fP
the text widget stays up until the user presses a button labeled \fI"Dismiss"\fP. Both
the continuous text widget and the single command output can be used at the same
time and you can cut and paste between them and other X applications like \fIxterm(1)\fP.
Also both of these windows are full motif text widgets; their content is fully
editable. And the user is provided a method of saving the content of the text
widget to a file.
.PP
Names of \fIenvironments\fP, \fImenus\fP, \fIcommandboards\fP, and all the objects do 
not have to be put in quotes unless they are more than one word long.
.PP
All resources are separated from their value by a colon and only a "\fB:\fP". 
Think of it as the "\fB:\fP" has replaced the "\fB=\fP".
.PP

The filename or complex string that is a resource's value must be quoted.
i.e. valuestring:"mx" is correct and valuestring:mx is not. This is also
true for \fIlistelement\fP.
.PP
The last resource in an object description must be followed by a "\fB;\fP". And
a "\fB;\fP" goes after the "\fB)\fP" for a \fIpulldown\fP.
.PP
Use \fIgetenv\fP and separate environments if you are trying to provide interfaces to
several interactive programs.
.PP
\fI"help"\fP goes in the \fIcommandboard\fP or menu definition BEFORE the "\fB(\fP".
.PP
\fIPopups\fP can only be used with a \fIcommandboard\fP, they will not stomp on the \fIhelp\fP
button but work with it. You can define a \fIhelp\fP button before the "\fB(\fP" in a
\fIpopup\fP but then the \fIpopup\fP WILL step on the \fIhelp\fP button.
.SH BUGS
.PP
Two values with the same name in the same program can cause a core dump.
.PP
Programs that require the user to type in their passwd, like ftp, don't work
very well with \fIinteractive\fP. \fIInteractive\fP could be made more robust.
.SH "SEE ALSO"
.PP
X(1),mwm(1)
.PP
.SH AUTHOR
Kurt A. Buehler,PO Box 9005, Champaign, IL 61826-9005, kurt@zorro.cecer.army.mil
.SH ADDITIONAL MODIFICATIONS
George Dolbier, Sequent Computer Systems, 15450 S.W. KOLL Parkway, Beaverton OR 97006-6063,georged@sequent.com or gdolbier@us.oracle.com
