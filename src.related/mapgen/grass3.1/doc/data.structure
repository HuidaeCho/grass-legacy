


                        DATABASE STRUCTURE



GRASS database structure GISDBASE/LOCATION/MAPSET

The database structure for GRASS makes use of the UNIX hierarchial directory structure. The top level directory is known as GISDBASE.
The next level of the database structrure is known as the LOCATION. The LOCATION is a UNIX subdirectory under the GISDBASE directory.
The third level in the database structure is the MAPSET. Each MAPSET for a given LOCATION is a UNIX subdirectory under that LOCATION name.
The user specifies the GISDBASE, LOCATION, and MAPSET when entering GRASS.

                        GISDBASE


        LOCATION.1      LOCATION.2      LOCATION.3      ...


             MAPSET.1    MAPSET.2   MAPSET.3    ...


GRASS MAPSET structure

MAPSETS contain UNIX files and subdirectories, known as elements.
The GRASS/MAPGEN interface, has associated with it, a structure which exists as
a subdirectory directory under the MAPSET name. The following diagram shows the relationship of the GRASS/MAPGEN data structure to the GRASS data structure.

                        MAPSET


   SEARCH_PATH WIND dig dig_cats dig_plus site_lists mapgen ...



MAPGEN DATABASE STRUCTURE

The database structure for MAPGEN also makes use of the UNIX hierarchial  directory structure. Under the mapgen subdirectory is a series of subdirectories.
The following diagram list shows these subdirectories.

                        mapgen


dig_geo         sites_geo       MAPNAME.1       MAPNAME.2       ...


dig_geo subdirectory

The dig_geo subdirectory is used to store the georefernced version of GRASS digit files. These files are necessary for the interface program make.line or
the MAPGEN programs lines. These files are created by running the interface program dig.to.geo.

sites_geo subdrectory

The sites_geo subdirectory is used to store the georefernced version of GRASS sites_lists  or the dig_att files. These files are necessary for the interface programs make.label and make.symbol or the MAPGEN programs lines or points. These files are created by running the interface programs sites.to.geo or att.to.geo.

MAPNAME database structure

Associated with each map that is created using the GRASS/MAPGEN interface is a database structure containing files and subdirectories. The following diagram shows this structure.

                        MAPNAME


MAP.DEF.par   MAP.DEF   ovm   labels   symbols   lines   fills   cat   legend   misc


MAP.DEF.par type file(s)

The MAP.DEF.par file is an ASCII file (editable) that is used as input to the MAPGEN program mapdef. This file sets the parameters for how the geographic map elements are placed on the plot. A version of this file is created by the make.mapdef (or make.usbase) program. There can be more than one MAP.DEF.par type file under different file names.
This would typically be done if more than one map is to be placed on one page.

MAP.DEF type file(s)

The MAP.DEF type file is the MAPGEN binary file that stores the information associted with the MAKE.DEF file. This file is created by the MAPGEN program mapdef. There will probably be one MAP.DEF type file for each MAKE.DEF type file.

ovm subdirectory

The ovm subdirectory is the directory where all the MAPGEN generated overlay files are stored.
These files are created by the interface programs make.line, make.label, make.symbol, make.text, make.box, make.leg, fill.dig, etc.; or by the MAPGEN programs lines, points, legend and grid.
The files in the ovm subdirectory are used by the plotting programs, interface programs show.sh and plot.sh or MAPGEN programs preview and plotter.

labels subdirectory

The labels subdirectory is created by the make.label command. There should be a file placed in the labels directory for each make.label command executed. This file can be edited and is used by the redo.label command.

symbols subdirectory

The symbols subdirectory is created by the make.symbol command. There should be a file placed in the symbols directory for each make.symbol command executed. This file can be edited and is used by the redo.symbol command.

lines subdirectory

The lines subdirectory is created by the make.line command. There should be  a file placed in the lines directory for each make.line command executed. This file can be edited and is used by the redo.line command.

fills subdirectory

The fills subdirectory is created by the fill.dig command. There should be a file placed in the fills directory each time the fill.dig command is executed. This file can be edited and is used by the redo.fill command.

cat subdirectory

The cat subdirectory is used to store the categories for each fill. There should be a file in the cat directory for each fill command in the fills directory. This file can be edited an is used by the redo.fill command.

misc subdirectory

The misc subdirectory is where the commands make.text, make.box, and neatline place files to redo each of these commands. The files in this directory can be edited and are used by redo.misc.




legend subdirectory

par     cmd     FILE1   FILE2 .....

FILE1 FILE2 are files that store the text for the legend entries FILE1, FILE2, etc.

par subdirectory

The par subdirectory is where the parameter files are kept to generate each legend block.
These files can be edited to make changes in the legend. See redo.leg.doc for details.

cmd subdirectory

The cmd subdirectory is where the commands are stored to remake each legend block. It should not be necessary to edit these files.










