CHECK	Dgfx.c	/^#define	CHECK(x) { if ((ega_outp + x) > ega_end) e/
D4014	D4014.c	/^D4014(va_alist) va_dcl {$/
DBL	Dc1077.c	/^# define DBL(n) ((n)>>4)&0xf, (n)&0xf$/
DGRASS	DGRASS.c	/^DGRASS(va_alist) va_dcl {$/
Dbumdev	Dbumdev.c	/^Dbumdev(cmd) {$/
Dc1077	Dc1077.c	/^Dc1077(va_alist) va_dcl {$/
Dc906	Dc906.c	/^Dc906(va_alist) va_dcl {$/
Dc970	Dc970.c	/^Dc970(va_alist) va_dcl {$/
Ddebug	Ddebug.c	/^Ddebug(va_alist) va_dcl {$/
Ddmp60	Ddmp60.c	/^Ddmp60(va_alist) va_dcl {$/
Dextdev	Dextdev.c	/^Dextdev(va_alist) va_dcl {$/
Dgerber	Dgerber.c	/^Dgerber(va_alist) va_dcl {$/
Dgfx	Dgfx.c	/^Dgfx(va_alist) va_dcl {$/
Dhp7475	Dhp7475.c	/^Dhp7475(va_alist) va_dcl {$/
Dhpgl	Dhpgl.c	/^Dhpgl(va_alist) va_dcl {$/
Dingena	Dingena.c	/^Dingena(va_alist) va_dcl {$/
Dkong	Dkong.c	/^Dkong(va_alist) va_dcl {$/
Dorchid	Dorchid.c	/^Dorchid(va_alist) va_dcl {$/
Dpstscr	Dpstscr.c	/^Dpstscr(va_alist) va_dcl {$/
Dranger	Dranger.c	/^Dranger(va_alist) va_dcl {$/
Dsunview	Dsunview.c	/^XYS *Dsunview(va_alist) va_dcl {$/
ESC	Dc1077.c	/^# define ESC(n)	8, n$/
Erase	Dsunview.c	/^static void Erase()$/
Graph_Close	Dsunview.c	/^static void Graph_Close()$/
Graph_Set	Dsunview.c	/^static void Graph_Set()$/
IN	calcomp.c	/^#define IN(x) if ((x = getchar()) == EOF) done(0)$/
Mcalcomp	calcomp.c	/^main(argc, argv) char **argv; {$/
Mextdebug	extdebug.c	/^main() {$/
Mplotter	plotter.c	/^main(argc, argv) int argc; char *argv[]; {$/
Msendwait	sendwait.c	/^main()$/
Msundump	sundump.c	/^main(argc, argv) char **argv; {$/
TO1000IN	Dgerber.c	/^# define TO1000IN(x) (long)((x)*1.9685039370078740/
bflsh	Dc970.c	/^bflsh() { \/* flush both buffers *\/$/
bflush	Dc1077.c	/^bflush() {$/
bomb	plotter.c	/^bomb(va_alist) va_dcl {$/
bputc	Dc1077.c	/^bputc(c) {$/
caseof	clip.c	/^# define caseof(x) case x & _LBMASK$/
cdraw	clip.c	/^cdraw(p, xp, yp, xb, yb) char *p; short *xp, *yp; /
char_out	Dgfx.c	/^#define	char_out(v)	{ *ega_outp++ = (v); }$/
check	Dc1077.c	/^# define check(n) ((n) > b_cnt / bflush(): 0)$/
chkenable	DGRASS.c	/^chkenable() {$/
clip	clip.c	/^clip(penup, x0, y0, x1, y1) long x0, y0, x1, y1; {/
closer	Dc1077.c	/^closer() {$/
clrega	Dgfx.c	/^#define	clrega(to, cnt) { \\$/
coutside	clip.c	/^coutside (x, y) long x, y; {$/
cvt	Dc1077.c	/^cvt ( z, s ) long z; char *s; {$/
cvtoxy	vtostr.c	/^cvtoxy(mode, plotin, xv, yv) int mode, (*plotin); /
dash	lines.c	/^dash(penup, x, y) long x, y; {$/
dda	Dgfx.c	/^dda(x, y, dx, dy) {$/
defclose	plotopen.c	/^defclose() {$/
defopen	plotopen.c	/^defopen(file) char *file; {$/
delink	setpen.c	/^delink() {$/
delpen	setpen.c	/^delpen() {$/
delta	Dc1077.c	/^delta(x, y) long x, y; {$/
done	calcomp.c	/^done(err) {$/
draw_line	Dsunview.c	/^draw_line(x1, y1, x2, y2, c)$/
ega_flush	Dgfx.c	/^ega_flush () {$/
ega_out	Dgfx.c	/^#define	ega_out(v,t)	{ *(t *) ega_outp = (t) (v); /
egavect	Dgfx.c	/^egavect(x1, y1, x2, y2) unsigned short x1, y1, x2,/
enable	D4014.c	/^enable() {$/
fillega	Dgfx.c	/^#define	fillega(data, to, inc, cnt) { \\$/
fline	lines.c	/^fline(penup, x, y) long x, y; {$/
flset	lines.c	/^flset(s) char *s; {$/
flsh_l	Dc970.c	/^flsh_l() {$/
flsh_s	Dc970.c	/^flsh_s() {$/
flushp	Dgerber.c	/^flushp() {$/
fontname	setfont.c	/^fontname(name) char *name; {$/
getcursor	Dgfx.c	/^getcursor(x, y) int *x, *y; {$/
gfx_ega_clear	Dgfx.c	/^gfx_ega_clear (color) int color; {$/
gfx_ega_init	Dgfx.c	/^gfx_ega_init (name) char *name; {$/
horzline	Dgfx.c	/^horzline(x1, x2, y) {$/
init_pens	setpen.c	/^init_pens() {$/
initincl	plotter.c	/^initincl(file) char *file; {$/
int_out	Dgfx.c	/^#define	int_out(v)	{ ega_out(v, unsigned short); }/
labs	pltparse.c	/^# define labs(x) ((x) < 0 / -(x) : (x))$/
linkxy	setpen.c	/^linkxy(s) char *s; {$/
longbyte	pltparse.c	/^longbyte(cmd, v) int cmd; long v; {$/
lrnd	lrnd.c	/^lrnd(x) double x; {$/
max_x_y	clip.c	/^max_x_y(xm, ym) long *xm, *ym; {$/
metacmd	plotter.c	/^metacmd() { \/* get next meta-graphic and interpret/
metain	plotter.c	/^metain() { \/* get next meta-graphic byte *\/$/
mkreset	Dc1077.c	/^mkreset() {$/
mstring	plotter.c	/^mstring() {$/
newpen	setpen.c	/^newpen(s) char *s; {$/
nextenv	plotter.c	/^nextenv(code) {$/
noarg	pltparse.c	/^noarg(cmd) int cmd; {$/
onintr	plotter.c	/^onintr() { \/* interrupt trap *\/$/
opener	Dc1077.c	/^opener() {$/
optout	urequest.c	/^optout(mode, arg) int mode; long arg; {$/
outside	clip.c	/^outside (x, y) long x, y; {$/
p2bclos	p2bopen.c	/^p2bclos(fi, fo) FILE *fi, *fo; {$/
p2bopen	p2bopen.c	/^p2bopen(argv, fi, fo) char *argv[]; FILE **fi, **f/
plotend	plotopen.c	/^plotend() {$/
plotin	plotopen.c	/^plotin(c) {$/
plotopen	plotopen.c	/^plotopen(argl) char *argl[]; {$/
plotopt	pxyxmit.c	/^plotopt(va_alist) va_dcl {$/
plotout	plotopen.c	/^plotout(c) int c; {$/
plotreq	plotreq.c	/^plotreq(arg) int arg; {$/
pltflush	plotopen.c	/^pltflush() {$/
pltparse	pltparse.c	/^pltparse() {$/
pmapin	plotter.c	/^pmapin(s) char *s; {$/
position	pltparse.c	/^position(cmd, x, y) int cmd; long x, y; {$/
post	post.c	/^post(str) char *str; {$/
putp	Dgerber.c	/^putp(str) char *str; {$/
pxyxmit	pxyxmit.c	/^pxyxmit(mode, x, y) int mode; long x, y; {$/
rinterp	pltparse.c	/^rinterp(xy0, xy1, t, tf) XY xy0, xy1; double t, tf/
set_bitmask	Dgfx.c	/^#define	set_bitmask(m) { CHECK (2); char_out (gfx_/
set_color	Dgfx.c	/^#define set_color(d) { CHECK (2); char_out (gfx_co/
set_colorenab	Dgfx.c	/^#define	set_colorenab(d) { CHECK (2); char_out (gf/
set_datarot	Dgfx.c	/^#define set_datarot(d) { CHECK (2); char_out (gfx_/
set_mapmask	Dgfx.c	/^#define set_mapmask(m) { CHECK (2); char_out (gfx_/
set_readmask	Dgfx.c	/^#define	set_readmask(d) { CHECK (2); char_out (gfx/
set_standardcolor	Dsunview.c	/^static void set_standardcolor(red,green,blue)$/
set_writemode	Dgfx.c	/^#define	set_writemode(d) { CHECK (2); char_out (gf/
set_xbyte0	Dgfx.c	/^#define	set_xbyte0(ram) { CHECK (3); char_out (gfx/
set_xbyte2	Dgfx.c	/^#define	set_xbyte2(color, ram) { \\$/
setarray	lines.c	/^setarray(mask, a, size) long mask; short a[]; int /
setchar	post.c	/^setchar(c, table, size, cos, sin, theta)$/
setdev	plotter.c	/^setdev(name) char *name; {$/
setdmask	lines.c	/^setdmask(v) long v; {$/
setdsize	lines.c	/^setdsize(v) long v; {$/
setfont	setfont.c	/^setfont(name) char *name; {$/
setpen	setpen.c	/^setpen(s) char *s; {$/
setstrsz	setsizes.c	/^setstrsz(cmd, v) int cmd; long v; {$/
setsymsz	setsizes.c	/^setsymsz(cmd, v) int cmd; long v; {$/
setvect	post.c	/^setvect(c) int c; { char *s;$/
slength	post.c	/^slength(s) char *s; {$/
solid	lines.c	/^solid(penup, x, y) int penup; long x, y; {$/
string	pltparse.c	/^string(cmd, s) int cmd; char *s; {$/
strtov	vtostr.c	/^strtov(n, plotin) int n, (*plotin)(); {$/
symbol	post.c	/^symbol() {$/
ufile	plotter.c	/^ufile() { return ( (!file_no && direct) / answr : /
urequest	urequest.c	/^urequest(v) long v; {$/
vertline	Dgfx.c	/^vertline(x, y1, y2) {$/
vindex	post.c	/^vindex(font, i) FONT *font; int i; {$/
vtostr	vtostr.c	/^vtostr(v, str) long v; char *str; {$/
windinit	clip.c	/^windinit(x, y) long x, y; {$/
window	clip.c	/^window(type, v) int type; long v; {$/
xyxmit	urequest.c	/^xyxmit(x, y) long x, y; {$/
