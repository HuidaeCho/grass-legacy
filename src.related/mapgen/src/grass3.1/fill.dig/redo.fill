#!/bin/sh
CHECK.MAP
if test $? = 1
        then
        exit
fi

for out in $*
do
echo $out
############## DO FILS ###############################
if test -f ovm/$out
	then
	rm ovm/$out
fi
. fills/$out
i=`wc -l < cat/$out`
j=1
if test "$catfile" != "" -a $i -ne 0
        then
        prev=""
	if test -f cat/tmp
		then
		rm cat/tmp
	fi
        while test $j -le $i
        do
        cat=`head -$j < cat/$out | tail -1`
        echo $cat
        if test "$cat" != "$prev"
                then
                egrep ":$cat:" $catfile | awk -F: '{print $1}' >> cat/tmp
                prev=$cat
        fi
        j=`expr $j + 1`
        done
else
        cp cat/$out cat/tmp
fi
i=`wc -l  < cat/tmp`
 
if test $i -gt 0
        then
	i="-S $i"
elif test $cattype = f
	then
	i=""
else
	echo ERROR no categories found for fill:
	rm cat/$out
	exit
fi
PARMS=`cat .PARMS`

############## DO PATTERNS ###############################
for j in $pat
do
echo Doing pattern $j
. $GRAPH/etc/pattern/$j
space=`echo $scale $space | awk '{tot=$1 * $2 / 100; print tot}'`
if test $proj = 1
        then
        cmd="fill_dig -sp $space -c $pen -a $angle -sc $scale $i $mapset $name < cat/tmp |\
        proj $PARMS +inv - "
elif test $proj = 4
        then
        cmd="fill_dig -sp $space -c $pen -a $angle -sc $scale $i $mapset $name < cat/tmp |\
        proj $PARMS +inv - "
fi
if test "$line" = "solid"
        then
        cmd="$cmd | lines -c \"-d 1,2 \" -m $map -o $out.tmp"
else
        cmd="$cmd | lines -c \"-d 1,2 -ls .2 -lm 0x6666 -ld \" -m $map -o $out.tmp"
fi
eval $cmd
cat $out.tmp >> ovm/$out
done
rm $out.tmp cat/tmp
sleep 2
tput clear
done
