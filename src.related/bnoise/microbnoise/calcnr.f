C$NOFLOATCALLS
      SUBROUTINE CALCNR(X,Y)                                            CALCNR 2
C                                                                       CALCNR 3
C *CALCNR CALCULATES THE LCDN VALUES FOR A GRID POINT X,Y.
C                                                                       CALCNR 5
C DATA USED%
C DISTANCE FROM NOISE SOURCE(METERS)
C DAY OR NIGHT FIRING 
C CHARGE SIZE 
C HEIGHT ABOVE OR BELOW GROUND
C ANGLE(IF IT IS A GUN) 
C INVERSION FACTORS% SURFACE;0-500 METERS,0-3000 METERS 
C NUMBER OF ROUNDS FIRED
C NUMBER OF DAYS DATA WAS COLLECTED 
  
  
  
      INTEGER DAY 
      COMMON/IO/KARD,KPRINT                                             CALCNR 6
C     BLOCK FACTI CONTAINS INVERSION FACTORS
      COMMON/FACTI/RINV1,RINV2,RINV3
      COMMON /SRCS/ NSRCS 
      COMMON/FT/GRDSZ,CNR,XLOC,YLOC,DAYNO,DARKNO                        CALCNR 9
      DIMENSION XLOC(2000),YLOC(2000),DARKNO(2000),DAYNO(2000)          CALCNR10
C     BLOCK GRID CONTAINS UNUSED VARIABLES(SEE ZNEF)
      COMMON/GRID/NRCNR,EAS,RCNR,DIST,SDBWH,              ANGCOS,ANGSIN 
C     BLOCK CONTR CONTAINS GUN TYPE TABLE, INFO FOR GUN CONTOURS
C     (IN INPUT) AND VALUE FOR THE LIMIT OF THE GUN TYPE TABLE. 
      COMMON/CONTR/IDGUN,CONTOR 
      DIMENSION IDGUN(50),CONTOR(50,15) 
      DIMENSION RCNR(10),DIST(10),SDBWH(2000),
     1ANGCOS(2000),ANGSIN(2000)                                         CALCNR13
C     ARRAY GUNT(IN COMMON BLOCK GUN) CONTAINS ID'S FOR 
C     WEAPONS ARRANGED BY SUBROUTINE FORMA. 
      INTEGER GUNT(2000)                                                CALCNR14
      COMMON /GUN/GUNT                                                  CALCNR15
      COMMON/METRIC/METERS,IMETER,IBOTH                                 CALCNR18
      LOGICAL METERS                                                    CALCNR19
      COMMON/CALC/DAYCNR,DRKCNR                                         CALCNR20
      LOGICAL DAYCNR,DRKCNR                                             CALCNR21
      COMMON/DEBUG/CHECK,REED,TABRD                                     CALCNR23
      COMMON/PARM/THRESH,PENITE,PPIP,IMP
      LOGICAL CHECK,REED,TABRD                                          CALCNR24
C     BLOCK TABL1 CONTAINS INFO FROM PROGRAM TABGEN 
      COMMON /TABL1/ DBV(301,9,2),PERV(301,4,2),ENV(1501)   , 
     1 CSCF(601) ,FON1(301,4,2),FON2(301,4,2),FTWO(151,2) 
C                                                                       CALCNR27
C FON1  FOR CASE ONE         DIST; F B N E; DAY  NIGHT
C FON2 THE IS FOR CASE TWO       DIST;  FBNE; DAT  NIGHT
C 
C 
C     X = X-AXIS VALUE IN TRUE DISTANCES
C     Y = Y-AXIS VALUE IN TRUE DISTANCES
      CNSDAY=      0.0                                                  CALCNR31
       CNSNI=0.0
C                                                                       CALCNR32
  
  
  
C     CALCULATE THE DB OF DIRECTION (NEW ANGLE) WITH RESPECT TO THE FIRICALCNR33
C     DIRECTION AND GRID-COORDINATE, THE TOTAL OVERPRESSURE DB FACTOR.  CALCNR34
C                                                                       CALCNR35
C CALCULATE DISTANCE AND ANGLE OF NOISE SOURCE
      DO 1 IS=1,NSRCS                                                   CALCNR36
C     CALCULATE X,Y DISTANCES 
      DX=X-XLOC(IS)                                                     CALCNR42
      DY=Y-YLOC(IS)                                                     CALCNR43
C     DISTANCE FORMULA
      A=DX*DX+DY*DY                                                     CALCNR44
      D=SQRT(A) 
  
C IF UNITS ARE IN FEET, CHANGE TO METERS
      IF(.NOT.METERS)D=D/3.28                                           CALCNR46
      IF(D.EQ.0..OR.ANGCOS(IS).EQ.999.0)GO TO 34                        CALCNR47
  
  
C     ANGLE PHI IS THE ANGLE OF DIRECTIVITY SOUGHT.  ANGLE ALPHA IS THE 
C     ANGLE FROM REFERENCE POINT TO X,Y COORDINATES.  ANGLE THETA IS THE
C     ANGLE FOR WHICH SINE AND COSINE CALCULATIONS HAVE ALREADY BEEN MADE.
C     THE FORMULAS USED IN CALCULATING ANGLE PHI WILL BE AS FOLLOWS%
C     SIN(PHI)=SIN(ALPHA-THETA) AND COS(PHI)=COS(ALPHA-THETA), WHICH BY 
C     TRIGNOMETRIC SUBSTITUTION YIELDS% 
C     SIN(PHI)=SIN(ALPHA)COS(THETA)-SIN(THETA)COS(ALPHA) AND
C     COS(PHI)=COS(ALPHA)COS(THETA)+SIN(ALPHA)SIN(THETA)
C     SIN(ALPHA)=DY/D AND COS(ALPHA)=DX/D;
C     SIN(THETA)=ANGSIN(IS) AND COS(THETA)=ANGCOS(IS) 
C     THEREFORE, THE FINAL FORMULAS WILL BE%
C     SIN(PHI)=(DY/D)*ANGCOS-(DX/D)*ANGSIN; 
C     COS(PHI)=(DX/D)*ANGCOS+(DY/D)*ANGSIN. 
  
      SINPHI=(DY/D)*ANGCOS(IS)-(DX/D)*ANGSIN(IS)
      COSPHI=(DX/D)*ANGCOS(IS)+(DY/D)*ANGSIN(IS)
  
C 
C     TO COMPUTE THE ANGLE PHI, WE WILL USE THE ARCTANGENT FUNCTION 
C     WITH DX(PHI)=COSPHI AND DY(PHI)=SINPHI. 
C     CALCULATE PHI IN DEGREES
      PHI=ATAN2(SINPHI,COSPHI)*180.0/3.1415926
  
  
C CALCULATION OF DIRECTIVITY CORRECTION DBDEG.
C     FIND GUN TYPE IN GUN TYPE TABLE FROM FORMA(LIMIT=50)
C     USE INDEX FROM IDGUN TO FIND ROW IN CONTOR
      IROW=GUNT(IS) 
  
C     FIND COLUMN IN CONTOR TO LOCATE CORRECTION FACTOR 
      ITEMP=((PHI-180)/30)-0.5
      IF(PHI.LE.0)I=(-ITEMP)-6
      IF(PHI.GT.0.)I=6-ITEMP
      IF(I.EQ.12)I=0
      ICOL=I+3
  
      DBDEG = CONTOR(IROW,ICOL) 
      GO TO 32
 34   DBDEG=0.0                                                         CALCNR66
  
C     COMBINE ANGLE CORR AND CHARGE CORR
 32   OVERPR=DBDEG+SDBWH(IS)                                            CALCNR67
  
  

C CALCULATE OVERPRESSURE DB FOR BASE,FOCUS,NEGATIVE GRADIENT CURVE. 
C                                                                       CALCNR68
C     CALCULATE OVERPRESSURE DB FOR BASE CURVE, FOCUS, AND NEGATIVE     CALCNR69
C     GRADIENT CURVE.                                                   CALCNR70
C                                                                       CALCNR71
C                                                                       CALCNR72
C     DISTANCE IS KEPT BETWEEN 100 AND 100000.
      IF (D.LT.100.) D=100. 
      IF(D.GT.100000.)D=100000.                                         CALCNR74
C     FORMULA TO CALCULATE POSITION IN TABGEN TABLE 
      LD=ALOG10( D )  *100.0  -199.0  + 0.5 
  
      DO 1 DAY= 1,2 
C     TEST IF YOU ARE TO DO JUST DAY OR JUST NIGHT
      CNT=0.0 
      IF (DAY.EQ.1.AND.DAYCNR)   CNT=DAYNO(IS)
      IF (DAY.EQ.2.AND.DRKCNR)  CNT  = DARKNO(IS) 
      IF (CNT.EQ. 0.0 ) GOTO 1
  
C CONVERT DB VALUES TO SOUND EXPOSURE 
      DO 3 M= 1,4 
C     LOOP THRU   F B N  EXNEG
C 
C     GET DB AND ADD IN CHARGE CORR AND ANGLE CORRECTION
      DMAX=DBV(LD, M*2-1 , DAY) + OVERPR
      DMEAN = DBV( LD , M*2 , DAY) + OVERPR 
      DMIN=  DBV( LD , M*2+1 , DAY) + OVERPR
  
  
C     ASSUME   CASE  0    NO ENERGY 
      EN=0. 
C     TEST FOR DIFFERENT CASES
C     TAKE DB VALUE FROM TABGEN AND ADD CORRECTION
C     FACTORS TO IT.
C   IF THRESHOLD .GE. DMAX, USE CASE 4
      IF (THRESH .GE. DMAX) GOTO 104
C   IF THRESHOLD .LT. DMIN, USE CASE 1
      IF ( THRESH .LT. DMIN) GOTO 101 
C   IF THRESHOLD .GT. DMEAN, USE CASE 3 
      IF (THRESH .GT. DMEAN) GOTO 103 
C   OTHERWISE USE CASE 2. 
  
C     CASE 2
C     ROUND THE SUBSCRIPTS WITH .5
      EN= ENV(IFIX(DMEAN*10.-248.5))-FON1(LD,M,DAY) * 
     1    FTWO(IFIX(1.5+ (THRESH-DMIN) *10.),1) 
      IF(CHECK) WRITE(KPRINT,900) LD,M,DAY,DMAX,DMEAN,DMIN,EN 
900   FORMAT(1h ,3I10,3F10.2,E20.12)
      GOTO 104
  
C     CASE 3
103   EN= FON2(LD,M,DAY) * FTWO( IFIX(1.5+ (DMAX-THRESH ) * 10.0) ,2) 
      IF(CHECK) WRITE(KPRINT,900) LD,M,DAY,DMAX,DMEAN,DMIN,EN 
      GOTO 104
  
C     CASE 1
101   EN = ENV( IFIX(DMEAN*10. -248.5)) 
      IF(CHECK) WRITE(KPRINT,900) LD,M,DAY,DMAX,DMEAN,DMIN,EN 
C     CASE 1 COMES HERE DIRECT.  EN=0.
C     USE IMPULSE CORRECTION FACTOR ONLY IF IMP WAS INPUT AS NONZERO ON 
C     THE "METERS" CARD.
104   IF(IMP.EQ.0) GOTO 120 
C     IMPULSE FACTOR CORRECTION -- PAUL SCHOMER  10 JAN 80
C     10**9.25 = 10**9 * 10**(1/4) = 10**9 * SQRT(SQRT(10)) = 1778279410
C     D1=10**9.25  (=1778279410)
C     D10=10**10.25  (=17782794100  BY SIMILAR DERIVATION)
      D1=1778279410. 
      D10=17782794100. 
C     IF(EN.LE.10**9.25) EN=EN AND GOTO 120 
      IF(EN.LE.D1) GOTO 120 
C     IF(EN.GE.10**10.25) EN=EN*10 AND GOTO 120 
      IF(EN.LT.D10) GOTO 110
      EN=EN*10
      GOTO 120

C     (10**9.25 .LT. EN .LT. 10**10.25)  IS TRUE AT THIS POINT
C     EN=EN * 10**(ALOG10(EN)-9.25)  BY THE FOLLOWING METHOD... 
C     10**(ALOG10(EN)-9.25) = (10**ALOG10(EN)) / (10**9.25) 
C                           = EN / 10**9.25 = EN / D1 
110   EN=EN*EN/D1 

120   IF (DAY.EQ.2) GOTO 105
C     ADD IN REPETION COUNT 
      CNSDAY= CNSDAY + PERV(LD,M,1) * EN *  CNT 
      GOTO 3
105   CNSNI  = CNSNI + PERV(LD,M,2) * EN * CNT * PPIP 

3     CONTINUE
1     CONTINUE
  
  
  
      TCNSDAY=0.0 
      TCNSNI=0.0
      IF (CHECK.AND. CNSDAY.GT. 0.0) TCNSDAY=10.0* ALOG10(CNSDAY) 
      IF (CHECK.AND.CNSNI.GT.0.0) TCNSNI= 10.0*ALOG10(CNSNI)
      IF (CHECK) WRITE(KPRINT,800) TCNSDAY,TCNSNI 
C "POWER OF DAY SUM" TCNSDAY, "POWER OF NIGHT SUM", "TCNSNI"
      IF (CNSDAY .EQ.0.0 .AND. CNSNI .EQ. 0.0) GOTO 20
C     CONVERT IT TO AN LDN
C     FINAL SOUND EXPOSURE CONVERTED BACK TO DECIBEL UNITS
      CNR=  10.0 *  ALOG10 (CNSDAY+ CNSNI) - 49.3651374 
      RETURN                                                            CALCN167
  
   20 CONTINUE                                                          CALCN168
      CNR=-99.                                                          CALCN169
C WARNING...FOR X=*_,Y=*_, BOTH DAY +NIGHT CUMULATIVE NOISE SUMS=0; NEF SET 
C TO -99.*
  
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C 6/20/88 write statement removed.  one test run on a large file
C with few weapons produced a tabular output file of 1.4 megs
C simply due to the numerous "warnings" from this statement.  in
C the grass.bnoise interface, these points set to -99 are turned
C to zero anyhow since they represent "no noise" = "no data".
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     WRITE(KPRINT,801)X,Y                                              CALCN170
      RETURN                                                            CALCN171
 800  FORMAT(10X,'POWER OF DAY SUM ',F6.2,' POWER OF NIGHT SUM ',F6.2)  CALCN175
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C 6/18/88 following format statement changed for use of UTM
C coordinates
C 801 FORMAT(//10X,'..... WARNING .....FOR X =',F7.2,', Y =',F7.2,      CALCN176
C    1', BOTH DAY + NIGHT CUMULATIVE NOISE SUMS = 0; NEF SET TO -99.')  CALCN177
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  801 FORMAT(//10X,'..... WARNING .....FOR X =',F9.1,', Y =',F9.1,      CALCN176
     1', BOTH DAY + NIGHT CUMULATIVE NOISE SUMS = 0; NEF SET TO -99.')  CALCN177
      END                                                               CALCN178
      FUNCTION CFOUR(WEIGHT)
C     FUNCTION TO SIMULATE THE  C-4 GRAPH USED IN COMPUTING 
C     THE WEIGHT/WEAPON CORRECTION FACTOR 
C     WE ASSUME THE WEIGHT IS BETWEEN 0 AND 1000 POUNDS 
  
  
C     IF LESS THAN 0 NO SOUND 
      CFOUR = 0.
  
      IF (WEIGHT.LE.0.) RETURN
      IF (WEIGHT.LT.40.) GO TO 1
      IF (WEIGHT.LT.80.) GO TO 2
      IF (WEIGHT.LT.160.) GO TO 3 
C     FOUR EQUATIONS ARE USED BECAUSE OF INCONSISTANCIES IN THE GRAPH 
  
      CFOUR=96.34+11.3*ALOG10(WEIGHT) 
      RETURN

3     CFOUR=104.73+7.5*ALOG10(WEIGHT) 
      RETURN

2     CFOUR=112.67+3.33*ALOG10(WEIGHT)
      RETURN

1     CFOUR=98.0+12.48*ALOG10(WEIGHT) 
      RETURN
      END 
