/* %W% %G% */
#include "gis.h"
#define MAIN
#include "config.h"

char *element = "paint/labels" ;

main(argc, argv)
	int argc ;
	char **argv ;
{
    int stat;
    int *screen_x, *screen_y, *button ;
    char name[30];
    char *mapset;
    char *tempfile;
    FILE *in, *out;

    G_gisinit ("PAINT-LABELS");

    if (argc == 2)
       {
       mapset = G_find_file ("paint/labels", argv[1], "") ;
       if (mapset == NULL)
          {
                printf("\n");
		sprintf(name,"Labels file [%s] not available", argv[1]);
		G_fatal_error(name) ;
          }
       }
    else
       {
       mapset = G_ask_any ("enter new or existing labels file", 
					   name, element, "labels", 0);
       if (mapset == NULL)
              exit(0);
       }

    G_clear_screen();
    printf ("PAINT LABELS\n");

    tempfile = G_tempfile();
    out = fopen (tempfile, "w");
    if (!out)
    {
	perror (tempfile);
	exit(0);
    }

    in = G_fopen_old (element, name, mapset);

    G_zero (&config, sizeof config);
    strcpy (config.ref,"center");
    strcpy (config.color,"black");
    strcpy (config.width,"1");
    strcpy (config.hcolor,"none");
    strcpy (config.hwidth,"0");
    strcpy (config.background,"white");
    strcpy (config.border,"black");
    strcpy (config.size,"500");
    strcpy (config.opaque,"yes");
    strcpy (config.font,"standard");
/*-->*/   
    config.count = 0;
    stat = 0;
    
    stat = display_all(in, out, name);
/*           stat = process_old (in, out, name);
	   stat = process_new (out, name); */

    fclose (out);
    if (in)
	fclose (in);
exit(0);
    if (stat && config.count)
    {
	int in, out;
	int n;
	char buf[1024];

	in = open (tempfile, 0);
	if (in < 0)
	{
	    perror (tempfile);
	    exit(1);
	}
	out = G_open_new (element, name);
	if (out < 0)
	{
	    perror (name);
	    exit(1);
	}

	while ((n = read (in, buf, sizeof buf)) > 0)
	    write (out, buf, n);

	close (in);
	close (out);
    }
    else if (stat)
	G_remove (element, name);
    unlink (tempfile);
}
