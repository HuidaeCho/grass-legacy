.TH r.concordance
.SH NAME
\fIr.concordance\fR \- Performs a concordance/discordance analysis on 
one or more raster layers, producing concordance/discordance maps
for one or more specified scenarios. 
.br
\fI(GRASS Raster Program)\fR
.SH SYNOPSIS
.B r.concordance
.br
\fBr.concordance <filename>\fR
.br
.in +3
.ti -3
\fBr.concordance\fP [\fB-vod\fP] \fBdefinition=\fIname
.in

.SH DESCRIPTION
.I r.concordance
runs a concordance or discordance analysis on the raster layers
specified in the definition files, applying optional reclass rules. A
set of variables (criteria) is defined on the basis of raster map
values. One or more "scenarios" are then defined as sets of weights,
one weight for each variable, expressing how and how much each
variable is relevant in that scenario. The analysis outputs a raster
map for each scenario, whose values express how much the input data
agree with the specified scenario. Optionally, a normalized sum of the
concordance values weighted by the proportion of area pertaining to
each one is output. This "overall score" is an overall index of
concordance with the scenario.  Similarly, a discordance analysis can
be run. The concordance/discordance computation is done according to
Voogd (1983). The computation is done in the following steps:

 1) compute the value of each variable, on the basis 
    of existing layers and instructions given 
    by the operator;
 2) scan the input layers to define the possible 
    configurations of variable values, and build a 
    temporary layer in which each category is the 
    ID number of the configuration found;
 3) run a concordance (discordance) analysis, computing 
    a normalized concordance value for each configuration 
    in each scenario;
 4) output a new layer for each scenario based on the 
    temporary layer built in step 2; in the new map,
    plane ID numbers are substituted by concordance 
    values for mapped attributes and that scenario,
    scaled to a user-specified maximum value.


.TE
.SH INTERACTIVE PROGRAM USE
The user can run the program interactively by simply typing
\fBr.concordance\fR without program arguments on the command line.
The program then prompts the user for parameter values.
You are requested to identify the analysis definition file. The
syntax for the definitions contained is outlined below.

.SH NON-INTERACTIVE PROGRAM USE
The user can run \fIr.concordance\fR specifying all parameter values on the
command line, using the form:
.LP
.RS
\fBr.concordance [-vod] definition=\fIname 
.in
.RE
.LP
\fBFlags:\fR
.IP \fB-v\fP
Run verbosely
.LP
\fBFlags:\fR
.IP \fB-o\fP
Print overall scores
.LP
\fBFlags:\fR
.IP \fB-d\fP
Run discordance analysis instead of concordance analysis
.LP
\fBParameters:\fR
.IP \fBdefinition=\fIname\fR 18
The name of an existing analysis definition file. The definition file 
specifies input layers, optional reclass rules, name and type of output
maps.\fR

.SH AN EXAMPLE DEFINITION FILE

An example file follows. No particular meaning should be given to the
analysis actually performed here; it is intended only as a self-explaining
example of a correct definition file, which can work directly with the
spearfish database provided with the GRASS distribution.

 # Comments are introduced by the pound sign, and
 #  extend to the end of the line as in sh.
 # 
 # The syntax is free-format, i.e. newlines are 
 # not counted and can be inserted anywhere.
 #
 # This example can be used with the spearfish 
 # database if a "disturbance" raster layer is 
 # provided (or another one like "landuse" is 
 # substituted). It calculates hypotetical
 # concordance maps for different uses of a 
 # park. The values do not have any relationship 
 # with the real meaning of the data used; they 
 # only serve as examples. 
 #
 # the [VARDEF <layer>] specifications set reclass
 # rules for for the specified layer, resulting 
 # in the definition of one or more criteria. When
 # a criterion is only partially specified, the value
 # given after the [FILL <n>] specification
 # is used to fill the holes.  
 # The part before the colon in each rule tells
 # which input layer values specify the criteria
 # values on the right. 


 [VARDEF vegcover] 
   1      : height = 1, poison = 1, corology = 5; 
   2 to 4 : height = 2, corology = 2, shadow = 1;  
   >4     : height = 3, shadow = 3, poison = 0; 
         
 # layer 'disturbance' is recoded into criterion
 # 'dist' with its own value 
 # This is done by means of the keyword VALUE in 
 #  place of a  rule like the above

 [VARDEF disturbance]
   VALUE: dist;

 [VARDEF slope]
   0-15:  slope=0;
   16-30: slope=1;
   31-45: slope=2;
   46-60: slope=3;
   >61:   slope=4;

 # three sample scenarios, defining the importance
 # of each criterion for three possible destinations
 # of a park
 # Scaling of weights can be arbitrary and does not
 # relate to the criteria values

 [SCENARIO]
   Children_park: height=3, poison=-5, corology=1, 
                  dist=-1, shadow=5, slope=-3;  
   Natural_park: height=6, poison=0,  corology=5,
                 dist=-10, shadow=2, slope=0;
   Cultural_park: height=1, poison=1,  corology=3,
                  dist=-2, shadow=3, slope=-1;

 # The [OUTPUT] section specifies the names of the 
 # desired output layers. The scenario given on the
 # left gives the layer specified on the right. 
 # If the name on the left does not match any defined
 # scenario, then it must specify a map layer
 # containing the values defined in the [INPUT] 
 # section (see there).

 [OUTPUT]
    Children_park: children.map; 
    Natural_park:  natural.map;
    Cultural_park: cultural.map;
 #  mixed_scene:   mixed.map;
  
 # The [INPUT] section defines an existing
 # map layer as a ``mixed'' scenario specification.
 # The section defines a mapping of map categories
 # to specified scenarios.  The analysis of 
 # mixed_scene will result in a concordance
 # layer using different scenarios in
 # different regions. 

 [INPUT]
    mixed_scene: Children_park = 1, Natural_park = 2;

 # values to be used when a specified criterion
 # cannot be computed 

 [FILL]
   slope: 0;
   poison: 0;

 # values in output layers will be scaled into
 # specified  number of categories (default 10)
 [SCALE 64]

 [EOF]

.SH REFERENCES

Voogd, H. (1983). Multicriteria Evaluation for Urban and Regional
Planning. Pion Limited, London.

.SH BUGS
Probably many. As yet, the section [FILL] does not work as described; 
the present format is [FILL <n>], specifying that ALL variables which
have missing values will get the <n> value. The "mixed map" feature 
is not implemented.

.SH SUPPORT
Very limited, if any. I don't have a regular job so I can only do minor
changes and bug corrections. Email me as villa@eagle.bio.unipr.it.

.SH "AUTHOR"
Ferdinando Villa, Institute of Ecology, University of Parma, Viale delle
Scienze, 43100 Parma, Italy

