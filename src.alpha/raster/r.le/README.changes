CHANGES NOW INCORPORATED IN VERSION 2.1 OF THE R.LE PROGRAMS SINCE 
VERSION 2.05 BETA:

1.  All command input is in lowercase now, instead of requiring upper
case for parameter choices.

2.  There is now no difference in the available choices for different
choices of sampling (i.e. sam=w,u,r,m).

3.  It is now possible to obtain multiple moving window measures from
one run of the moving window through the map.  

4.  Output maps when using the moving window are now simply named the same
as the measure chosen.  For example, when choosing sam=m and att=a4, the
moving window output map is named "a4"

5.  When sampling by region, with regions numbered 4-8, version 2.05 would
go through looking for regions 1-8.  Now it will correctly skip from region
to region based only on the region numbers that exist.  Sampling by region
is now much faster.

6.  Sampling is now for the whole map by default, so the sam parameter is
not needed in most cases.  The programs run by default in the foreground
unless the -b flag is specified.

4.  When sampling using units (sam=u) it is now possible to specify a 
flag (-u) that will save a new map containing the sampling unit boundaries
and the number for each unit.  Separate maps are saved for each scale.
These sampling unit maps can be turned to vector maps (r.poly) and overlain
on the map that is being sampled to illustrate where the sampling occurred.
These sampling unit maps can also be subsequently used when sam=r is specified,
as each sampling unit will be treated as a region.

5.  Extensive error traps and error messages have been added to the routines
that read user input, so that it is now difficult to enter the wrong 
answers without being told what to do to fix the problem.




CHANGES IN R.LE.DIST SINCE VERSION 2.05 BETA:

1.  Most significant is that the program now uses linked lists to keep
track of all patches and patch boundary pixels.  This means that the
program now can be used to analyze very large maps and maps with very
large patches.  I analyzed a 5000 X 5000 pixel map containing 180,000
patches without any memory problem, although this required 24 hrs on my
old Sparcstation 1.

2.  A flag is now available to make a new map containing the number for
each patch.  This number is the number that appears in the list of 
individual patch attributes you can obtain by specifying the "out="
parameter when sam=w,u,r.  If you understand the unix awk command, you
can awk the out= file to produce a reclass table that can be used to
reclass this patch number map, so it contains patch measures as 
attributes.  The value of doing this is not obvious, but there are some
very interesting things that one can do with such a map.  You'll have
to wait for the documentation for the full story.

3.  Patches are now traced by default to include within the patch all
pixels that are adjoining in any of the 8 neighbors.  Version 2.05 
excluded diagonal (bishop's pattern) pixels from a patch, so that these
pixels became new separate patches.  This 4 neighbor tracing can still
be obtained by specifying the -t flag.

4.  The tracing module now will handle islands no matter how deeply they
are nested within other patches or islands.  Version 2.05 only correctly
handled islands nested to 1 depth.

5.  When sampling using units (sam=u) it is now possible to specify a
flag (-u) that will save a new map containing the sampling unit boundaries
and the number for each unit.  Separate maps are saved for each scale.
These sampling unit maps can be turned to vector maps (r.poly) and overlain
on the map that is being sampled to illustrate where the sampling occurred.
These sampling unit maps can also be subsequently used when sam=r is specified,
as each sampling unit will be treated as a region.

6.  The tracing algorithm has been significantly shortened and made more
efficient.  The program runs about 25% faster as a result.




CHANGES IN R.LE.PATCH SINCE VERSION 2.05 BETA:

1.  Most significant is that the program now uses linked lists to keep
track of all patches and patch boundary pixels.  This means that the
program now can be used to analyze very large maps and maps with very
large patches.  I analyzed a 5000 X 5000 pixel map containing 180,000
patches without any memory problem, although this required 24 hrs on my
old Sparcstation 1.

2.  New measures have been added to calculate the total number of patches
(a7) and the core area of patches (co1 and co2).  Core area is the area
interior to a patch after specifying a certain width of edge to be taken
off all the way around a patch.  It is useful for studying the effects of
forest fragmentation.  There is also a flag (-c) that you can specify to
make a new map called "core" which contains the patches after their edge
area has been removed.  

3.  A flag is now available to make a new map containing the number for
each patch.  This number is the number that appears in the list of 
individual patch attributes you can obtain by specifying the "out="
parameter when sam=w,u,r.  If you understand the unix awk command, you
can awk the out= file to produce a reclass table that can be used to
reclass this patch number map, so it contains patch measures as 
attributes.  The value of doing this is not obvious, but there are some
very interesting things that one can do with such a map.  You'll have
to wait for the documentation for the full story.

4.  It is now possible to specify a flag (-p) to include the sampling
area boundary as patch perimeter.  This was previously the default.  Now
the default is to exclude the sampling area boundary as perimeter.

5.  Patches are now traced by default to include within the patch all
pixels that are adjoining in any of the 8 neighbors.  Version 2.05 
excluded diagonal (bishop's pattern) pixels from a patch, so that these
pixels became new separate patches.  This 4 neighbor tracing can still
be obtained by specifying the -t flag.

6.  The tracing module now will handle islands no matter how deeply they
are nested within other patches or islands.  Version 2.05 only correctly
handled islands nested to 1 depth.

7.  When sampling using units (sam=u) it is now possible to specify a
flag (-u) that will save a new map containing the sampling unit boundaries
and the number for each unit.  Separate maps are saved for each scale.
These sampling unit maps can be turned to vector maps (r.poly) and overlain
on the map that is being sampled to illustrate where the sampling occurred.
These sampling unit maps can also be subsequently used when sam=r is specified,
as each sampling unit will be treated as a region.

9.  Fractal dimensions are output as 0 unless there are at least 5 patches
to contribute to the calculation.  This minimum is now specified because
regression is used to calculate the fractal dimension, and it is unlikely
that a valid regression can be obtained with < 5 patches.

10.  The tracing algorithm has been significantly shortened and made more
efficient.  The program runs about 25% faster as a result.



CHANGES IN R.LE.PIXEL SINCE VERSION 2.05 BETA:

1.  The old r.le.tex program has been renamed r.le.pixel to reflect the
fact that it contains many measures that work on a pixel-by-pixel basis.

2.  A new measure has been added to allow calculation of the mean pixel
attribute, st. dev. of pixel attribute, minimum pixel attribute, and
maximum pixel attribute.

3.  A new measure has been added to allow calculation of the amount of edge
of a particular type (between two attributes specified by the user) and a new
flag is now available (-e) that allows the creation of a map showing those
actual edges.

4.  A new flag is available (-z) that enables calculation of standardized
scores (z-scores) for any raster map.

5.  The program can now be used to analyze raster maps with up to 800
categories as is.  The user can change the line #define  MAX   800 to some
larger number of categories and recompile the program if needed.  This will
require more memory however.



CHANGES IN R.LE.SETUP SINCE VERSION 2.05 BETA:

1.  The program correctly comes to a soft landing back at the GRASS prompt if
the user hits Cntl-C while the program is running.  Previously a core dump was
created.

2.  The program will correctly limit the placement of random nonoverlapping 
sampling units to only the area within the mask if r.mask has been used to
set a mask.

3.  The program no longer randomly starts the systematic contiguous and 
systematic non-continuous sampling units in a particular row and column.  Now
the user must specify the starting row and column, which allows more flexibility
in the placement of the set of samples.

4.  The program now allows the user to draw a sampling frame before setting up
sampling units or the moving window.  The sampling frame can be used to limit
the area within which sampling units or the moving window will be placed.

5.  Minor errors in the placement of sampling units and their display on the
screen have been fixed.  Sampling units are now drawn in their exact location
and displayed precisely on screen.

6.  Reported bugs involving strncat and longjmp have been fixed.

7.  The program now correctly reads user input when running under Solaris 2.x

8.  Sampling units are now displayed sequentially on screen as they are placed,
when using random nonoverlapping sampling.
 


KNOWN BUGS AND NEEDED CHANGES NOT FIXED IN VERSION 2.1, BUT PLANNED FOR A FUTURE
RELEASE:

1.  An option is needed to used circular sampling areas.

2.  Linked lists are needed for the richness arrays in r.le.pixel, so that the
user need not specify the MAX parameter in r.le.pixel.h

3.  The moving window setup should only specify the dimensions of the moving 
window.  The program should be able to use the setup file no matter how the
GRASS region is adjusted.

4.  The center of a patch in r.le.dist should be changed to be the center-of-
gravity (rather than the average row and column) and an option should be made
for relocating the center so that it is always inside the patch.

5.  A mysterious core dump occurs in very large maps on rare occasions after all
the calculations are complete and output files have been created, when using
r.le.patch.  It has only been possible to get this to happen with one particular
map.  The bug appears to be in the freeing of the patch list in trace.c.  There
do not appear to be errors in any of the output and all the requested output is
correct, so the bug is both rare and benign.  The devilish map is about 5000 rows
by 3000 columns.

6.  New fractal dimension options are needed in r.le.patch, particularly for 
calculating the grid-cell fractal dimension, individual patch fractal dimension
using dividers, and the fractal dimension of a surface.

	August 1, 1994
	Bill Baker
	bakerwl@uwyo.edu
	Department of Geography & Recreation
	207 Arts & Sciences Bldg.
	University of Wyoming
	Laramie, WY 82071
	U.S.A.

