.TH r.fuz.rule
.SH NAME
\fIr.fuz.rule \fR\- Fuzzy rule modeling
.br
.I "(GRASS Raster Program)"
.LP
.SH SYNOPSIS
\fBr.fuz.rule\fR
.br
\fBr.fuz.rule help\fR
.br
\fBr.fuz.rule \fR[\fB-z\fR] \fBinput\*=\fIname[,name,...]\fR \fBoutput\*=\fIname\fR 
\fBrule\*=\fIname\fR \fBfile\*=\fIname\fR [\fBdefuz\*=\fIname\fR] [\fBcomb\*=\fIname\fR] 
[\fBlog\*=\fIname\fR] [\fBind1\*=\fIname\fR] [\fBind2\*=\fIname\fR]
.LP
.SH DESCRIPTION
.I r.fuz.rule
applies a fuzzy rule model on each pixel of several input fuzzified raster maps. 
The rules are described in the following form (for example) : 
.br
IF ( raster1 AND raster2 ) THEN raster3
.br
where raster1,2, and 3 describe a qualitative knowledge such as
great, low, etc. relative to the corresponding layers as they are
defined in the fuzzy variable file.
.br
Note that, as the result map is not a fuzzified 
map, the user must define a fuzzy variable file for this one.
.LP
.SH OPTIONS
The program will be run non-interactively if the user specifies program arguments 
on the commande line. Alternately, the user can simply type \fIr.fuz.rule\fR
on the command line, without program arguments. In this case, the user will be
prompted for flag settings and parameter values.
.LP
\fBFlags:\fR
.LP
.IP \fB-z\fR 4 
Zero data values are considered as valid data.
.LP
\fBParameters:\fR
.IP \fBinput\*=\fIname[,name,...]\fR 13
Name of existing fuzzified raster maps. 
.IP \fBoutput\*=\fIname\fR 13
Output raster map. The fuzzy rule model is applied on each pixel of the input raster layers
and generates output integer crisp values which are stored in this map.
.IP \fBrule\*=\fIname\fR 13
Name of an existing rule file. The user must specify the file pathname.
.IP \fBfile\*=\fIname\fR 13
Name of an existing fuzzy variable file. The user must specify the file pathname. This file
contains fuzzy variables relative to the output raster layer.
.IP \fBdefuz\*=\fIname\fR 13
Defuzzification method. The method name can be one of the followings : max (defuzzification by maximum), 
med (defuzzification by median) or cdg (defuzzification by center of gravity). The default is cdg.
.IP \fBcomb\*=\fIname\fR 13
Rule combination method. The method name can be one of the followings : min (minimum combination), 
mincrest (cresting minimum combination), max (maximum  combination), maxcrest (cresting maximum combination)
or  weightsum (cresting wheighted sum combination). The default is weightsum.
.IP \fBlog\*=\fIname\fR 13
Logical operators. The operators name can be one of the followings : min (AND=min(x,y), OR=max(x,y)) or
product (AND=x*y, OR=x+y-x*y). The default is min.
.IP \fBind1\*=\fIname\fR 13
Output fuzzy index raster map. This spatial index is a measure of the result map fuzziness 
by computing for each pixel the maximum of the final membership function generated by
the rule combination.
.IP \fBind2\*=\fIname\fR 13
Output fuzzy index raster map. This spatial index is another measure of the result map fuzzines.
It is obtained by calculating, for each pixel, the distance between the final membership function
and its complement according to the following assesment : the more fuzzy a set is, the more difficult 
making the fuzzy set-complement difference is, the closer to 0.5 the index is.

.LP
.SH EXAMPLE
In the fhe following, a simple fuzzy rule model is applied for determining a land suitability
of a given crop. This suitability is based on the combination of two variables, altitude and slope. 
In this model, it is supposed that, on one side, the lower the slope is, the better the suitability is,
and on another side, the suitability is the best when the altitude is medium, i.e. between 1300 and 1700 m.
.LP
The data come from the spearfish database. The ASCII files (rule and fuzzy variables) can be 
found in the grass fuzzy distribution ("data" directory of r.fuzzy).
.LP
The first step is to fuzzify the altitude and slope raster maps : the r.fuz.set command
is used to associate the two fuzzy variables files, dem.var and slope.var to the elevation.dem and slope 
raster layers. The dem.var file is described in the man of r.fuz.set and the slope.var
file is listed below :
.ne 7 
.TS
box;
l s.
#
1
1 Slope
1 1 0 0.1 10 25 slope_low
1 1 10 25 90 90.5  slope_high
< blank record for end of file >
.TE
.LP

We also define the fuzzy variable file of the output map, land.var. We suppose
we can describe the land suitability by three fuzzy classes [low, medium high] :
.ne 8 
.TS
box;
l s.
#
1
1 Land_Suitability
1 1 0 0.1 30 50 suitability_low
1 0 30 50 70  suitability_medium
1 1 50 70 100 100.5 suitability_high
< blank record for end of file >
.TE
.LP

In the last step, the inference rules are defined. According to the expert knowledge,
the rules are supposed to be defined in the following way in the file rules.dat :
.ne 9 
.TS
box;
l s.
IF ( ELEVATION_lrg AND Slope ) THEN  Land_Suitability
elev_low_lrg     slope_low    suitability_medium
elev_low_lrg     slope_high   suitability_low
elev_medium_lrg  slope_low    suitability_high
elev_medium_lrg  slope_high   suitability_medium
elev_high_lrg    slope_low    suitability_medium
elev_high_lrg    slope_high   suitability_low
< blank record for end of file >
.TE 
.LP

Then the model is applied with the following command :
.br
r.fuz.rule input=elevation.dem,slope output=land_suitability rule=rules.dat file=land.var
.br
The output raster map land_suitability will describe the spatial distribution of the land suitability of the desired crop.
.LP
Please, note that the order in which input raster maps are introduced, i.e. (1) elevation.dem (2) slope,
must match the order in which the associated fuzzy variables are written in the logical
expression of the rule file : (1) ELEVATION_lrg  (2) Slope
.LP
.SH "BUGS AND LIMITS"
- all the errors in reading ASCII files (fuzzy variables and rules) have not been tested.
Some of them do not give a clear error message but sometimes "segmentation fault",
and sometimes ... nothing ! 
.LP
- a blank record must end the fuzzy rule and fuzzy variable  ASCII files.
.LP
- the rule file is case sensitive : the logical terms such as IF, AND, OR and THEN 
must be written in capital letters.
.LP
- the algorithms have not been fully optimized, and calculation may be quite long.
For example, in spearfish database, the computation time of the following command :
.br
r.fuz.rule input=elevation.dem,slope output=land_suitability rule=rules.dat file=land.var
.br
is about 8 mn on a Pentium II/450MHz/250Mb/RedHat6.0 configuration. (665000 pixels)
.LP
- the link between the raster maps, the fuzzy variables and the rule data is defined
in a rather strict way : the order in wich the fuzzy variables appear in the 
logical expression of the rule file must be the same as the user defines the input 
raster maps. 
.LP
.SH NOTES
\fIr.fuz.rule\fR works in the current geographic region with the current mask.
.LP
.SH "SEE ALSO"
.I r.fuz.set, r.fuz.map
.LP
.SH AUTHOR 
Francois Delclaux, Institut de Recherche pour le Developpement (IRD), France.
(email : delclaux@mpl.ird.fr )
.LP
.SH REFERENCES
Zadeh L.A. (1965), Fuzzy Sets, Information and Control, 8, 338-353.
.LP
Bardossy A. and Duckstein L. (1995), Fuzzy Rule-Based Modeling with Applications 
to Geophysical, Biological and Engineering Systems, CRC Press (232p).
.LP
Tong-Tong J.R. (1995), La logique floue, Editions Hermes (160p).
.LP
Logique Floue , Observatoire Francais des Techniques Avancees (1994), Masson Ed. (296p).
.LP
Delclaux F. (1998), An approach for integrating fuzzy rule system in hydrological modeling,
Hydraulic Engineering Software VII, WitPress (606p).
.LP
Balutaud O. (2000), Integration de traitements flous dans un Systeme d'Information
Geographique, Rapport de stage DESS, Medias Toulouse/EGID Bordeaux/IRD Montpellier (80p).