%!PS-Adobe
/wpdict	120 dict def
wpdict	begin
/bdef	{bind def} bind def

/bflg	false def
/Bfont	0 def
/bon	false def

/psz	0 def
/_S	/show load def
/_t	{0 rmoveto} bdef

/_pixelsnap
	{transform .25 sub round .25 add
	 exch .25 sub round .25 add exch itransform
	} bdef
/_pixeldsnap
	{ dtransform round exch round exch idtransform } bdef

/_lt	{_pixelsnap lineto} bdef
/_rlt	{_pixeldsnap rlineto} bdef
/_mt	{_pixelsnap moveto} bdef
/_rmt	{_pixeldsnap rmoveto} bdef

/bshow	{gsave psz 30 div 0 _rmt dup show grestore show} bdef

/DUx	0 def
/DUy	0 def
/hscl	0 def

/M	{_mt
	 2 mul -2 2
	 { -2 roll 0 _rmt _S } for
	} bdef

/makeoutl
	{ dup /OutlineFlag known not
	  { dup dup length 2 add dict begin
	    {1 index /FID ne { def }{ pop pop } ifelse } forall
	    /UniqueID known {/UniqueID UniqueID 10000 add def} if
	    /PaintType PaintType 0 eq { 2 }{ PaintType } ifelse def
	    /StrokeWidth 15 def
	    /OutlineFlag true def
	    /OutlineFont currentdict end definefont
	  } if
	} bdef

/nbuff	50 string def
/orntsv	0 def
/plen	0 def
/pwid	0 def
/picstr	1 string def

/WPencoding StandardEncoding 256 array copy def 0
 [ 127/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla
  /Delta/Eacute/Ecircumflex/Edieresis/Egrave/Eth/Gamma/Iacute
  /Icircumflex/Idieresis/Igrave/Lambda/Ntilde/Oacute
  /Ocircumflex/Odieresis/Ograve/Omega/Otilde/Phi/Pi/Psi
  /Scaron/Sigma/TeXtext32/Theta/Thorn
  209/Uacute/Ucircumflex/Udieresis/Ugrave/Upsilon/Xi/Yacute
  /Ydieresis/Zcaron/aacute/acircumflex/adieresis/agrave
  /aring/atilde/brokenbar
  228/ccedilla/copyright/degree/divide
  236/dotlessj/eacute/ecircumflex/edieresis/egrave
  242/eth/ff/ffi
  246/ffl/iacute
  252/icircumflex/idieresis/igrave/logicalnot
  1/minus/mu/multiply/ntilde/oacute/ocircumflex/odieresis
  /ograve/onehalf/onequarter/onesuperior/otilde/plusminus
  /registered/scaron/thorn/threequarters/threesuperior
  /trademark/twosuperior/uacute/ucircumflex/udieresis
  /ugrave/yacute/ydieresis/zcaron
]
{ dup type /nametype eq
  { WPencoding 2 index 2 index put pop 1 add }
  { exch pop } ifelse
} forall pop

/reencode
{ dup FontDirectory exch known
   { findfont }
   {  dup nbuff cvs dup length 1 sub get 82 eq
   {dup nbuff cvs dup length 1 sub 0 exch getinterval
   findfont begin
   currentdict dup length dict begin
{ 1 index /FID ne {def} {pop pop} ifelse } forall
/FontName exch def

/Encoding WPencoding def
currentdict dup end end
/FontName get exch definefont
     }
     { findfont } ifelse
  } ifelse
} bdef

/WPDLencoding StandardEncoding 256 array copy def 0
[ 127     /SA420000/SD630000/SF010000/SF020000/SF030000
/SF040000/SF050000/SF060000/SF070000/SF080000/SF090000
/SF100000/SF110000/SF140000/SF150000/SF160000/SF190000
/SF200000/SF210000/SF220000/SF230000/SF240000/SF250000/SF260000
/SF270000/SF280000/SF360000/SF370000/SF380000/SF390000/SF400000
/SF410000/SF420000/SF430000
209 /SF440000/SF450000/SF460000/SF470000/SF480000
/SF490000/SF500000/SF510000/SF520000/SF530000/SF540000
/SF570000/SF580000/SF590000/SF600000/SF610000
228 /SM570001/SM590000/SM600000/SM630000
236 /SM680000/SM690000/SM700000/SM750000/SM750002
242 /SM770000/SM790000/SP320000
246 /SS000000/SS010000
252 /SS260000/SS270000/SV040000/apostrophereverse
1/arrowboth/arrowdown/arrowleft/arrowright/arrowup/club
/deutschmark/diamond/diamondopen/exclamdbl/female
/fiveeighths/franc/heart/male/musicalnote/musicalnotedbl
/napostrophe/nsuperior/oneeighths/seveneighths/spade
/threeeights/underscoredbl/SM760000
]
{ dup type /nametype eq
  { WPDLencoding 2 index 2 index put pop 1 add }
  { exch pop } ifelse
} forall pop

/reencodeL
    { dup FontDirectory exch known
      { findfont }
      {  dup nbuff cvs dup length 1 sub get 76 eq
         {    dup nbuff cvs dup length 1 sub 0 exch getinterval
         findfont begin
         currentdict dup length dict begin
         { 1 index /FID ne {def} {pop pop} ifelse } forall
         /FontName exch def
         /Encoding WPDLencoding def
         currentdict dup end end
         /FontName get exch definefont
         }
         { findfont } ifelse
      } ifelse
    } bdef

/ron	false def
/sflg	false def
/slan	0 def
/sp	32 def

/sshow
	{ save exch
	   gsave
	    psz 20 div dup neg _rmt dup show
	   grestore
	   dup
	   save exch
	    Bfont setfont
	    1 setgray show
	   restore
	   currentfont makeoutl setfont show
	   currentpoint 3 -1 roll
	  restore _mt
	} bdef

/Sx	0 def
/Sy	0 def
/Ux	0 def
/Uy	0 def
/W	/widthshow load def

/_B	{/bflg true def
	 sflg not {/_S /bshow load def /bon true def} if
	} bdef
/_b	{/bflg false def
	 bon {/_S /show load def /bon false def} if
	} bdef
/_bd	{save} bdef
/_bp	{save 2 setmiterlimit .06 .06 scale 0 0 _mt} bdef
/_ccprocs
	{/proc2 exch cvlit def
	 /proc1 exch cvlit def
	 /newproc proc1 length proc2 length add
	 array def
	 newproc 0 proc1 putinterval
	 newproc proc1 length proc2 putinterval
	 newproc cvx
	} def
/_clr	{3 {255 div 3 1 roll} repeat
	 ron {6 3 roll pop pop pop} {setrgbcolor} ifelse
	} bdef
/_cp	/closepath load def
/_cw	{stroke initclip _mt 0 2 index
	 _rlt 0 _rlt 0 exch neg
	 _rlt clip newpath
	} bdef
/_d	/setdash load def
/_DU	{currentpoint /DUy exch def /DUx exch def} bdef
/_du	{gsave
	  save
	  8 setlinewidth
      currentpoint -30 add _mt
      DUx DUy -30 add _lt stroke
	  restore
	  8 setlinewidth
	  currentpoint -50 add _mt
	  DUx DUy -50 add _lt stroke
	 grestore
	} bdef
/_ed	{restore} bdef
/_ep	{restore showpage 0 0 _mt} bdef
/_f	/eofill load def
/_ff	{ exch reencode exch
	  3 div dup /psz exch def
	  scalefont dup /Bfont exch def setfont
	} bdef
/_ffs	{ /slan exch 10 div def /hscl exch 1000 div def
	  /psz exch 3 div def
	  [ psz hscl mul 0 slan dup sin exch cos div psz mul psz 0 0 ]
	  exch reencode exch makefont dup /Bfont exch def setfont
	} bdef
/_g	/setgray load def
/_gs	{neg 100 add 100 div setgray} bdef
/_i	{gsave
	  dup /picstr exch 7 add 8 idiv string def
	  3 1 roll translate dup 1 scale
	  dup 1 1 [5 -1 roll 0 0 1 0 0]
	  {currentfile picstr readhexstring pop} image
         grestore
        } bdef
/_is	{save 4 1 roll
	  dup /picstr exch 7 add 8 idiv string def
	  3 1 roll translate dup 1 scale
	  dup 1 1 [5 -1 roll 0 0 1 0 0]
	  {currentfile picstr readhexstring pop} image
	 restore
	} bdef
/_ie	{1 eq { {1 exch sub} currenttransfer _ccprocs settransfer} if
	 /_isx exch def /_isy exch def
	 _isx mul exch _isy mul translate
	 add 2 div /_txc exch def
	 add 2 div /_tyc exch def
	 _txc _isx mul _tyc _isy mul translate
	 360 exch sub rotate
	 1 eq { _isx neg _isy scale }
	 { _isx _isy scale }
	 ifelse _txc neg _tyc neg translate
	} bdef
/_irms	{save
	  12 1 roll
	  1 eq {{1 exch sub} currenttransfer _ccprocs settransfer} if
	  /picstr exch string def translate
	  2 index 6 index sub 2 div 2 index 6 index sub 2 div neg
	  translate
	  5 index 5 index 2 div neg exch 2 div exch
	  2 copy neg exch neg exch 5 2 roll translate
	  360 exch sub rotate
	  3 index 3 index 7 index div exch 8 index div exch scale
	  translate pop pop 2 index 2 index scale
	  3 index 0 eq
	  { [ 3 index 0 0 5 index neg 0 0 ] }
	  { 3 index 1 eq
      { [ 3 index 0 0 5 index 0 7 index ] }
      { 3 index 128 eq
	  { [ 3 index neg 0 0 5 index neg 7 index 0 ] }
	  { [ 3 index neg 0 0 5 index 7 index 7 index ] } ifelse
	    } ifelse
	  } ifelse
          {currentfile picstr readhexstring pop} image
          pop
	 restore
	} bdef

/_l	{_lt} bdef
/_lr	{_rlt} bdef
/_m	{_mt} bdef
/_O	{currentfont makeoutl setfont} bdef
/_o	{Bfont setfont} bdef
/_ornt	{/pwid exch def /plen exch def
	 orntsv 1 eq {0 pwid translate -90 rotate} if
	 orntsv 2 eq {pwid plen translate 180 rotate} if
	 orntsv 3 eq {plen 0 translate 90 rotate} if
	 dup 1 eq {pwid 0 translate 90 rotate} if
	 dup 2 eq {pwid plen translate 180 rotate} if
	 dup 3 eq {0 plen translate -90 rotate} if
	 /orntsv exch def
	} bdef
/_lod1	{currentpoint orntsv plen pwid 6 -1 roll restore save} bdef
/_lod2	{_bp 7 2 roll _ornt _mt} bdef
/_unlod	{currentpoint orntsv plen pwid 7 -2 roll restore restore
	 _bp 6 1 roll _ornt _mt
	} bdef
/_p	{2 copy _mt 1 0 _rlt _mt} bdef
/_pl	{{_lt} repeat} bdef
/_R      { /ron true def /_S /_rshow load def /_t /_red load def} bdef
/_rshow	 { save exch
	   currentpoint
	   /RSy exch def /RSx exch def
	   ron {
		 sflg
		 {	currentpoint
			/Ry exch def /Rx exch def
			dup stringwidth pop Rx Ry psz 4 div add _mt
			Rx psz 15 add setlinewidth .95 setgray 0 setlinecap
			add Ry psz 4 div add _lt stroke Rx Ry _mt 0 0 0 setrgbcolor
			dup show Rx Ry _mt
			sshow
		 }
		 { _redshow
		 }ifelse
	   }
	   {	 sflg {sshow} if
	   }ifelse
	   currentpoint 3 -1 roll
	   restore _mt
	 } bdef
/_red	{ gsave dup
         currentpoint /Ry exch def /Rx exch def
         Rx Ry psz 4 div add _mt
         Rx psz 15 add setlinewidth .95 setgray 0 setlinecap
         add Ry psz 4 div add _lt stroke
         Rx Ry _mt
         grestore
         0 rmoveto
    }bdef
/_redshow {currentpoint
         /Ry exch def /Rx exch def
         dup stringwidth pop Rx Ry psz 4 div add _mt
         Rx psz 15 add setlinewidth .95 setgray 0 setlinecap
         add Ry psz 4 div add _lt stroke Rx Ry _mt 0 0 0 setrgbcolor
         show currentpoint _mt
    }bdef
/_rmxy	{_rmt} bdef
/_s	/stroke load def
/_SH	bon {/bon false def} if
	{/sflg true def /_S /_rshow load def
	} bdef
/_sh	{ ron 	{/sflg false def bflg {_B} if}
		{/_S /show load def /sflg false def bflg {_B} if}ifelse
	}bdef
/_sp	{ gsave stroke grestore } bdef
/_ST     {currentpoint /Sy exch def /Sx exch def} bdef
/_st     {gsave
          currentpoint
          psz 4 div add _mt
          Sx Sy psz 4 div add _lt
          10 setlinewidth
          stroke
          grestore
          } bdef
/_U	{currentpoint /Uy exch def /Ux exch def} bdef
/_u	{gsave
	  currentpoint
	  -30 add _mt
	  Ux Uy -30 add _lt
	  12 setlinewidth
	  stroke
	 grestore
	} bdef
/_w	/setlinewidth load def
end
/#copies 1 def /wpdict2 100 dict def
wpdict begin wpdict2 begin
_bd
/_rhs{readhexstring}bdef/_tr{translate}bdef
/_ix{index}bdef/_mx{matrix}bdef
/ife{ifelse}bdef/_x{exch}bdef
/_is{save 4 1 roll
dup/picstr _x 7 add 8 idiv string def
3 1 roll _tr dup 1 scale
dup 1 1[5 -1 roll 0 0 1 0 0]
{currentfile picstr _rhs pop}image restore}bdef
/_epsi{1 eq{{1 _x sub}currenttransfer _ccprocs settransfer}if
/yp _x def/xp _x def/dhgt _x def/dwid _x def
4 copy sub/swid _x def
sub/shgt _x def
add 2 div/icx _x def add 2 div/icy _x def
xp dwid 2 div add icx sub yp dhgt 2 div sub
icy sub _tr icx icy _tr
360 _x sub rotate
dwid swid div/xsc _x def _x
dhgt shgt div/ysc _x def _x
dup 1 eq{xsc neg/xsc _x def pop}
{dup 2 eq{ysc neg /ysc _x def pop}
{3 eq{ysc neg/ysc _x def xsc neg/xsc _x def}
{}ife}ife}ife
xsc ysc scale
100 div _x 100 div _x scale
icx neg icy neg _tr}bdef
/_c{3{255 div 3 1 roll}repeat setrgbcolor}bdef
/eq3{3 copy 2 _ix eq{eq{true}{false}ife}{pop
pop false}ife}bdef
/g{255 div setgray}bdef
/_clr{ron{6 3 roll pop pop pop}{eq3{pop
pop g}{_c}ife}ife}bdef
/_r{/ron false def eq3{1 sub neg g pop
pop}{setrgbcolor}ife}bdef
/_ircms{save 15 1 roll
1 eq{{1 exch sub}currenttransfer _ccprocs settransfer}if
/pstr _x string def _tr
/Cli _x def/USy _x def/USx _x def/Rot _x def/HTd _x def
/WDd _x def/Bdep _x def/HTs _x def/WDs _x def/MIR _x def
USx 100 div USy 100 div scale
WDd WDs sub 2 div HTd HTs sub 2 div neg _tr
WDs HTs 2 div neg _x 2 div _x _tr
Rot 360 _x sub rotate WDd HTd HTs div _x WDs div _x scale
WDs 2 div neg HTs 2 div _tr
WDs HTs scale WDs HTs Bdep MIR 0
eq{[WDs 0 0 HTs neg 0 0]}{MIR 1 eq{[WDs 0 0 HTs 0 HTs]}
{MIR 128 eq{[WDs neg 0 0 HTs neg WDs 0]}
{[WDs neg 0 0 HTs WDs HTs]}ife}ife}ife
{currentfile pstr _rhs pop}Cli
0 eq{image}{false 3 colorimage}ife
restore}bdef
/_bp{save 2 setlinecap 2 setmiterlimit
.06 .06 scale 0 0 moveto}bdef
/tctm _mx def/trot _mx def/tscale _mx def/rmtx _mx def
/fr{72 0 rmtx defaultmatrix dtransform
/yres _x def/xres _x def
xres dup mul yres dup mul add sqrt}bdef
/sus{/spotf _x def/sang _x def/csz _x def
/m tctm currentmatrix def/rm sang trot rotate def
/sm csz dup tscale scale def
sm rm m m concatmatrix m concatmatrix pop
1 0 m dtransform /y1 _x def/x1 _x def
/veclength x1 dup mul y1 dup mul add sqrt def
/frcy fr veclength div def /nsang y1 x1 atan def
frcy nsang/spotf load setscreen}bdef
/bitis{/ybit _x def /xbit _x def
/bval bstring ybit bwidth mul xbit 8 idiv add get def
/mask 1 7 xbit 8 mod sub bitshift def
bval mask and 0 ne}bdef
/bps{/y _x def /x _x def
/xndx x 1 add 2 div bpside mul cvi def
/yndx y 1 add 2 div bpside mul cvi def
xndx yndx bitis
{/onb onb 1 add def 1}{/ofb ofb 1 add def 0}ife}bdef
/stpatt{/csz _x def /angle _x def /bwidth _x def
/bpside _x def /bstring _x def
/onb 0 def /ofb 0 def
csz angle /bps load
sus{}settransfer
ofb ofb onb add div _g}bdef
/_fp{8 1 0 cpi stpatt}bdef
/_pf{gsave eofill grestore}bdef
/_np{newpath}bdef/_lc{setlinecap}bdef
/_sr{/cpi _x def}bdef
/nbuff 50 string def
letter _bp 0 13200 10200 _ornt /CourierR 600 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
5100 11863 _m
(1)_S 3314 11463 _m
/Times-BoldR 500 _ff
(Performing)_S 112 _t
(Hydrologic)_S 56 _t
(Simulation)_S 56 _t
(in)_S 56 _t
(GRASS)_S 56 _t
(4.2:)_S 4118 11262 _m
/Times-BoldItalicR 500 _ff
(r.water.fea)_S 56 _t
/Times-BoldR 500 _ff
(Program)_S 56 _t
(Tutorial)_S /Times-RomanR 600 _ff
/Times-RomanR 500 _ff
4706 8130 _m
(Baxter)_S 56 _t
(Vieux)_S 4655 7930 _m
(Nalneesh)_S 56 _t
(Gaur)_S 7200 7930 _m
56 _t
4145 3930 _m
(US)_S 56 _t
(Army)_S 56 _t
(Corps)_S 56 _t
(of)_S 56 _t
(Engineers)_S 3512 3730 _m
(Construction)_S 56 _t
(Engineering)_S 56 _t
(Research)_S 56 _t
(Laboratories)_S 4350 3530 _m
(Environmental)_S 56 _t
(Division)_S 4085 3330 _m
(Spatial)_S 56 _t
(Analysis)_S 56 _t
(Systems)_S 56 _t
(Team)_S 4650 3130 _m
(P.O.)_S 56 _t
(Box)_S 56 _t
(9005)_S 4218 2930 _m
(Champaign,)_S 56 _t
(IL)_S 56 _t
(61826-9005)_S 4762 1330 _m
(JULY)_S 56 _t
(1993)_S _ep
_bp /Times-RomanR 500 _ff
0 13200 10200 _ornt 
/_r      { sflg {/_t {0 rmoveto}bdef /ron false def}
         { /_S /show load def /_t {0 rmoveto}bdef /ron false def}ifelse
     }bdef
5100 11863 _m
/CourierR 600 _ff
(2)_S /Times-RomanR 500 _ff
4382 11055 _m
/Times-BoldR 600 _ff
(Table)_S 67 _t
(of)_S 67 _t
(Contents)_S /Times-RomanR 600 _ff
/Times-RomanR 500 _ff
1200 10013 _m
(1)_S 56 _t
(Introduction...................................................................................................................................................)_S 8400 10013 _m
56 _t
(3)_S 1200 9813 _m
(2)_S 56 _t
(Orientation....................................................................................................................................................)_S 8400 9813 _m
56 _t
(3)_S 1200 9613 _m
(3)_S 56 _t
(Program)_S 56 _t
(Structure.........................................................................................................................................)_S 8400 9613 _m
56 _t
(4)_S 1200 9413 _m
(4)_S 56 _t
(Sample)_S 56 _t
(Session.............................................................................................................................................)_S 8400 9413 _m
56 _t
(4)_S 1200 9213 _m
(5)_S 56 _t
(Results..........................................................................................................................................................)_S 8400 9213 _m
(21)_S 1200 9013 _m
(6)_S 56 _t
(Recommended)_S 56 _t
(Reading)_S 56 _t
(and)_S 56 _t
(References......................................................................................................)_S 8400 9013 _m
(22)_S 56 _t
_ep
_ed end end
