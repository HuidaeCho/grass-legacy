Mmain	main.c	/^main(argc,argv) char *argv[];$/
add_SubSigs	subcluster.c	/^static void add_SubSigs(SubSig1,SubSig2,SubSig3,nb/
closefiles	closefiles.c	/^closefiles(files)$/
compute_constants	subcluster.c	/^static int compute_constants(Sig,nbands)$/
copy_ClassSig	subcluster.c	/^static void copy_ClassSig(Sig1,Sig2,nbands)$/
copy_SubSig	subcluster.c	/^static void copy_SubSig(SubSig1,SubSig2,nbands)$/
distance	subcluster.c	/^static double distance(SubSig1,SubSig2,nbands)$/
get_training_classes	get_train.c	/^get_training_classes (parms, files, S)$/
initialize_signatures	init_sig.c	/^initialize_signatures (files, S)$/
invert	invert.c	/^int invert(a,n,det,indx,y,col) $/
list_Sig	subcluster.c	/^static void list_Sig(Sig,nbands)$/
loglike	subcluster.c	/^static double loglike(x,SubSig,nbands)$/
lookup_class	lookup_class.c	/^lookup_class(cats, ncats, list, nlist, class)$/
open_cell	opencell.c	/^open_cell (name, mapset, fd)$/
openfiles	openfiles.c	/^openfiles(parms, files)$/
parse	parse.c	/^parse(argc,argv,parms)$/
print_class	subcluster.c	/^static void print_class(Sig,fname)$/
read_data	read_data.c	/^read_data (files, S)$/
read_training_labels	labels.c	/^read_training_labels (parms, files)$/
read_training_map	read_train.c	/^read_training_map(class, row, ncols, files)$/
reduce_order	subcluster.c	/^static void reduce_order(Sig,nbands,min_ii,min_jj)/
reestimate	subcluster.c	/^static int reestimate(Sig,nbands)$/
refine_clusters	subcluster.c	/^static double refine_clusters(Sig,nbands)$/
regroup	subcluster.c	/^static double regroup(Sig,nbands)$/
seed	subcluster.c	/^static void seed(Sig,nbands)$/
subcluster	subcluster.c	/^int subcluster(S,Class_Index,Max_num)$/
write_sigfile	write_sig.c	/^write_sigfile (parms, S)$/
