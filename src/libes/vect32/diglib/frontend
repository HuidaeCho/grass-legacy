INTERFACE LEVEL I
=================
dig_init (fp)
    FILE *fp;
dig_rewind (fp)
    FILE *fp;
dig_read_next_line (fp, n_points, x, y)
    FILE *fp;
    int *n_points;
    double *x, *y;
dig_read_next_line_type (fp, n_points, x, y, type)
    FILE *fp;
    int *n_points;
    double *x, *y;
    char type;
dig_fini (fp)
    FILE *fp;


INTERFACE LEVEL II
==================
#include "digit.h"

token??
dig_P_init (name, mapset, map)
    char *name;
    char *mapset;
    struct Map_info *map;
dig_P_rewind (map)
    struct Map_info *map;
dig_P_fini (map)
    struct Map_info *map;

dig_P_tmp_close (map)
    struct Map_info *map;
dig_P_tmp_open  (map)
    struct Map_info *map;

dig_P_num_lines (map)
    struct Map_info *map;
dig_P_num_areas (map)
    struct Map_info *map;

dig_P_read_line (map, line, points)
    struct Map_info *map;
    int line;
    struct line_pnts **points;

dig_P_line_att (map, line)
    struct Map_info *map;
    int line;
dig_P_area_att (map, area)
    struct Map_info *map;
    int area;

/* returns -1 on error
dig_P_get_area (map, num, Area)
    struct Map_info *map;
    P_AREA **Area;
    int num;

dig_P_get_area_bbox (map, area, N, S, E, W)
    struct Map_info *map;
    int area;
    double *N, *S, *E ,*W;
dig_P_get_line_bbox (map, line, N, S, E, W)
    struct Map_info *map;
    int line;
    double *N, *S, *E ,*W;
