
  To those who have written device drivers for 'digit'.  I suggest reading the
  GRASS 3.0 INSTALLATION GUIDE to get an over all feel for how 'digit' is
  being compiled in 3.0 .  Also suggest reading the INSTALL in the digitizer
  driver your compiling.
  This is a list of changes to the code for GRASS 3.0:

  There are five drivers.  altek, altek2, kurta, kurta2 and none.
  The difference between the altek and the altek2 is that the altek uses
  the buttons on the digitizing cursor while the altek2 doesn't use the cursor
  buttons it uses the keyboard.  The same differences apply to the kurta.

  There is a new driver called 'none'. This driver allows you to use 'digit'
  without a digitizer (for labeling and editing) .  'none' can be compiled
  at any time and is recommended.

  There is a new compiling method.  Now the main 'digit' code in
  ../mapdev/digit is compiled into the library libdigit.a .  Each device driver
  links with that library to create a 'digit' program for that specific driver.
  In /usr/grass3/etc there is directory 'dig_drivers' where sub-directories with
  the drivers reside.

  If you are creating or updating a different driver, suggest you copy the
  Gmakefile from one of the other drivers and alter it,

  NOTE:  the digitizer directory name in 'dig_drivers' MUST match the 'name'
  in the digitcap file.

  The program name has to match exactly with the name in the
	../dig_front/digitcap file.
  'digit' has to be owned by root and have mode -rwsrwsr-x- .
  (chown root digit;  chmod 06775 digit;)

  The code for registering the map in GRASS 2.0 has been updated and is
  now device independant, and has moved in with the other 'digit' code.

  There is a new file 'dig_curses.c'.  This can just be copyed to a new driver
  directory (only contains <includes>), no editing needed.

  In file coll_pts.c colors in call to plot_points() have changed and the 
  <include>'s at the top of coll_pts.c have changed.

  New functions in interface.c:  D_curses_buttons(), ask_driver_raw(),
  and D_start_button().
  Suggest reading documentation in interface.c .

  If your driver is running in only in POINT mode you will have to change
  ask_driver_raw() to read only once.

  The digitizer device drivers for 3.0 are simpler and have less code  then
  the 2.0 versions, but there should be even less.  There shouldn't be any 
  calls to the dumb terminal with curses  (Write_info()) or to the graphics 
  driver (plot_points()).  I ran out of time.   


  -michael h.



NOTE:  
    Digit is a very CPU intensive program.  Having a system with other users
  on it and having a high load average can slow digit down.  If it seems that
  'digit' isn't responding rapidly enough the priority for the program may
  have to be raised.  This is accomplished by changing the file in 
  ../src/mapdev/digit/set_prior.c .  Up the priority by changing this line:
  "#define PRIORITY -13"
  Change '-13'  to  '-15' but no higher then '-16'.
  Then recompile the digitizer driver.


