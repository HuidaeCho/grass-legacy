%!PS-Adobe-1.0
%%DocumentFonts: Courier
%%Dimensions: 11 x 8.5 (in) 
%%Margins: (l,t,r,b) 0.35, 0.35, 0.35, 0.35 (in) 
%%Title: /usr/lib/print/lptops -M 2 -O 0.4pt -P 7pt -W -H
%%CreationDate: Tue Jul 25 16:12:23 1995
%%Creator: brown
%%Pages: (atend)
%%EndComments
save
/ISOLatin1Encoding where {pop save true}{false} ifelse
/ISOLatin1Encoding [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /space /exclam /quotedbl /numbersign
    /dollar /percent /ampersand /quoteright /parenleft
    /parenright /asterisk /plus /comma /minus /period
    /slash /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater
    /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M
    /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft
    /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m
    /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft
    /bar /braceright /asciitilde /guilsinglright /fraction
    /florin /quotesingle /quotedblleft /guilsinglleft /fi
    /fl /endash /dagger /daggerdbl /bullet /quotesinglbase
    /quotedblbase /quotedblright /ellipsis /trademark
    /perthousand /grave /scaron /circumflex /Scaron /tilde
    /breve /zcaron /dotaccent /dotlessi /Zcaron /ring
    /hungarumlaut /ogonek /caron /emdash /space /exclamdown
    /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron /degree
    /plusminus /twosuperior /threesuperior /acute /mu
    /paragraph /periodcentered /cedilla /onesuperior
    /ordmasculine /guillemotright /onequarter /onehalf
    /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute
    /Icircumflex /Idieresis /Eth /Ntilde /Ograve /Oacute
    /Ocircumflex /Otilde /Odieresis /multiply /Oslash
    /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde
    /adieresis /aring /ae /ccedilla /egrave /eacute
    /ecircumflex /edieresis /igrave /iacute /icircumflex
    /idieresis /eth /ntilde /ograve /oacute /ocircumflex
    /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def {restore} if
/UD { dup stringwidth pop
    /under_width exch def
    show
    under_width neg 0 rmoveto
    (_) show } def
/SL { gsave } def
/LN { show } def

% ----------------------------------
% Gaudy Definitions ----------------
% ----------------------------------

/QSU { 100000 mul 72 div } def
/DateFont {
    findfont 16 QSU scalefont setfont
} def
/PageNoFont {
    findfont 30 QSU scalefont setfont
} def
/TitleFont {
    findfont 20 QSU scalefont setfont
} def

% Format : <gray_level> <left> <bottom> <width> <height> Rectangle
/Rectangle
{
    /height exch def
    /width exch def
    /bottom exch def
    /left exch def
    /gray exch def
    gray setgray
    newpath
    left bottom moveto
    0 height rlineto
    width 0 rlineto
    0 height neg rlineto
    closepath
} bind def
% Format : <gray_level> <left> <bottom> <width> <height> RoundRectangle
/RoundRectangle
{
    /height exch def
    /width exch def
    /bottom exch def
    /left exch def
    /gray exch def
    /fourpops { 4 {pop} repeat } def
    /radius 18 QSU def
    gray setgray
    gsave
        left bottom translate
        newpath
        0 radius moveto
        0 height width height radius arcto fourpops
        width height width 0 radius arcto fourpops
        width 0 0 0 radius arcto fourpops
        0 0 0 height radius arcto fourpops
        fill
    grestore
} bind def
% Format : <gray> <bounding_width> <bounding_height> <string> CentreString
/CentreString {
    /str exch def
    /ht  exch def
    /wd  exch def
    /gray  exch def
    gsave
        gray 0 0 wd ht Rectangle clip
        str dup
        wd exch
        stringwidth ht 
        sub abs 2 div 2 div
        3 1 roll 
        sub abs 2 div
        exch moveto
        show
    grestore
} bind def

/GaudyHeader {
    /Page  exch def
    /landscape  exch def
    /hdrHt 50 QSU def
    /leftWd 72 QSU def
    /Offset 2 QSU def
    newpath clippath pathbbox   % Get imageable area in the current units
    /URy exch def
    /URx exch def
    /LLy exch def
    /LLx exch def
    landscape 1 eq
    { LLx URy translate -90 rotate } if
    newpath clippath pathbbox   % Get imageable area in the current units
    /URy exch def
    /URx exch def
    /LLy exch def
    /LLx exch def
    /TM URy Offset sub def
    /BM LLy Offset add def
    /LM LLx Offset add def
    /RM URx Offset sub def
    gsave
        /Times-Bold DateFont
        LM TM hdrHt sub abs translate
        .8 0 0 leftWd hdrHt RoundRectangle 
        0 setgray
        7 QSU 30 QSU moveto
        Date show
        7 QSU 10 QSU moveto
        Time show
        gsave
            /Times-Bold PageNoFont
            RM LM sub leftWd sub abs 0 translate
            .8 0 0 leftWd hdrHt RoundRectangle 
            0 leftWd hdrHt Page CentreString
        grestore
        gsave
            /Helvetica-Bold TitleFont
            /InnerWd { RM LM sub leftWd 2 mul sub abs } def
            /CBar 30 QSU def
            leftWd 10 QSU translate
            .9 0 0 InnerWd CBar RoundRectangle 
            0 InnerWd CBar Title CentreString
        grestore
    grestore
} bind def


%%EndProlog
/Date  (07/25/95) def 
/Time  (16:12:23) def 
%%Page: 4 4
/Title ((standard input)) def 
/EL { grestore 0 -10072 rmoveto } def
save
/O {gsave show grestore} def
/reencodeISO {
    dup length dict begin
        {1 index /FID ne {def}{pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end
} def
/findISO {
    dup /FontType known {
        dup /FontType get 3 ne {
            dup /CharStrings known {
                dup /CharStrings get /Thorn known {
                    true
                }{ false } ifelse
            }{ false } ifelse
        }{ false } ifelse
    }{ false } ifelse
} def
/N {/Courier findfont findISO { reencodeISO /Courier-ISO exch definefont
    9685 scalefont setfont }
    { 9685 scalefont setfont } ifelse 
} def
72 100000 div 72 100000 div scale
N()pop
0 1100000 translate
-90 rotate
gsave
0 35000 35000 507367 780000 Rectangle clip 
42633 806893 moveto
SL
(/* ycoord/xcoord to viewres row/col */)LN
EL
SL
(#define Y2VROW\(gs,py\)      \(int\)\(\(gs->yrange - \(py\)\)/\(gs->yres * gs->y_mod\)\))LN
EL
SL
(#define X2VCOL\(gs,px\)      \(int\)\(\(px\)/\(gs->xres * gs->x_mod\)\))LN
EL
SL
()LN
EL
SL
(/* viewres row/col to data row/col */)LN
EL
SL
(#define VROW2DROW\(gs,vrow\)      \(int\)\(gs->y_mod * \(vrow\)\))LN
EL
SL
(#define VCOL2DCOL\(gs,vcol\)      \(int\)\(gs->x_mod * \(vcol\)\))LN
EL
SL
()LN
EL
SL
(/* data row/col to ycoord/xcoord */)LN
EL
SL
(#define DROW2Y\(gs,drow\)      \(gs->yrange - \(\(drow\) * gs->yres\)\))LN
EL
SL
(#define DCOL2X\(gs,dcol\)      \(\(dcol\) * gs->xres\))LN
EL
SL
()LN
EL
SL
(/* viewres row/col to ycoord/xcoord */)LN
EL
SL
(#define VROW2Y\(gs,vrow\)      \(gs->yrange - \(\(vrow\) * gs->yres * gs->y_mod\)\))LN
EL
SL
(#define VCOL2X\(gs,vcol\)      \(\(vcol\) * gs->xres * gs->x_mod\))LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 35000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
/#copies 1 def showpage
restore
%%Page: 3 3
/Title ((standard input)) def 
/EL { grestore 0 -10072 rmoveto } def
save
/O {gsave show grestore} def
/reencodeISO {
    dup length dict begin
        {1 index /FID ne {def}{pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end
} def
/findISO {
    dup /FontType known {
        dup /FontType get 3 ne {
            dup /CharStrings known {
                dup /CharStrings get /Thorn known {
                    true
                }{ false } ifelse
            }{ false } ifelse
        }{ false } ifelse
    }{ false } ifelse
} def
/N {/Courier findfont findISO { reencodeISO /Courier-ISO exch definefont
    9685 scalefont setfont }
    { 9685 scalefont setfont } ifelse 
} def
72 100000 div 72 100000 div scale
N()pop
0 1100000 translate
-90 rotate
gsave
0 35000 35000 507367 780000 Rectangle clip 
42633 806893 moveto
SL
()LN
EL
SL
(#define GS_UNIT_SIZE 1000.)LN
EL
SL
()LN
EL
SL
(#define BETWEEN\(x, a, b\) \(\(\(x\) > \(a\) && \(x\) < \(b\)\) || \(\(x\) > \(b\) && \(x\) < \(a\)\)\))LN
EL
SL
(#define GS_NEAR_EQUAL\(x, y, ratio\) \(\(x\) == \(y\) || \(\(x\) == 0.0? \\)LN
EL
SL
(                        GS_BETWEEN\(\(x\), \(y\)+\(y\)*\(ratio\), \(y\)-\(y\)*\(ratio\)\):\\)LN
EL
SL
(                        GS_BETWEEN\(\(y\), \(x\)+\(x\)*\(ratio\), \(x\)-\(x\)*\(ratio\)\)\)\))LN
EL
SL
()LN
EL
SL
(/* current maximums */)LN
EL
SL
(#define MAX_SURFS      12)LN
EL
SL
(#define MAX_VECTS      12       )LN
EL
SL
(#define MAX_SITES      12)LN
EL
SL
(#define MAX_ATTS        7)LN
EL
SL
(#define MAX_LIGHTS      3)LN
EL
SL
(#define MAX_CPLANES     6 )LN
EL
SL
()LN
EL
SL
(/* surface display modes */)LN
EL
SL
(#define DM_GOURAUD   0x00000100)LN
EL
SL
(#define DM_FLAT      0x00000200   /* defined for symmetry */)LN
EL
SL
()LN
EL
SL
(#define DM_FRINGE    0x00000010)LN
EL
SL
()LN
EL
SL
(#define DM_WIRE      0x00000001)LN
EL
SL
(#define DM_COL_WIRE  0x00000002)LN
EL
SL
(#define DM_POLY      0x00000004)LN
EL
SL
(#define DM_WIRE_POLY 0x00000008)LN
EL
SL
()LN
EL
SL
(#define WC_COLOR_ATT 0xFF000000)LN
EL
SL
()LN
EL
SL
(#define IFLAG unsigned int)LN
EL
SL
()LN
EL
SL
(/* surface attribute ***descriptors***  */)LN
EL
SL
(#define ATT_NORM      0     /* library use only */)LN
EL
SL
(#define ATT_TOPO      1)LN
EL
SL
(#define ATT_COLOR     2)LN
EL
SL
(#define ATT_MASK      3)LN
EL
SL
(#define ATT_TRANSP    4)LN
EL
SL
(#define ATT_SHINE     5)LN
EL
SL
(#define ATT_EMIT      6)LN
EL
SL
(#define LEGAL_ATT\(a\) \(a >= 0 && a < MAX_ATTS\))LN
EL
SL
()LN
EL
SL
(/* surface attribute **sources**  */)LN
EL
SL
(#define NOTSET_ATT   0)LN
EL
SL
(#define MAP_ATT      1)LN
EL
SL
(#define CONST_ATT    2)LN
EL
SL
(#define FUNC_ATT     3)LN
EL
SL
(#define LEGAL_SRC\(s\) \(s==NOTSET_ATT||s==MAP_ATT||s==CONST_ATT||s==FUNC_ATT\))LN
EL
SL
()LN
EL
SL
(/* site markers */)LN
EL
SL
(#define ST_X            1)LN
EL
SL
(#define ST_BOX          2)LN
EL
SL
(#define ST_SPHERE       3)LN
EL
SL
(#define ST_CUBE         4)LN
EL
SL
(#define ST_DIAMOND      5)LN
EL
SL
(#define ST_DEC_TREE     6)LN
EL
SL
(#define ST_CON_TREE     7)LN
EL
SL
(#define ST_ASTER        8)LN
EL
SL
(#define ST_GYRO         9)LN
EL
SL
()LN
EL
SL
(/* site attribute modes \(what attribute of marker category is used for\) */)LN
EL
SL
(/* TODO: may want to make these OR'able */)LN
EL
SL
(#define ST_ATT_NONE     0x00000000)LN
EL
SL
(#define ST_ATT_COLOR    0x00000001)LN
EL
SL
(#define ST_ATT_SIZE     0x00000002)LN
EL
SL
(#define ST_ATT_MARKER   0x00000004)LN
EL
SL
()LN
EL
SL
(/* Buffer modes */)LN
EL
SL
(#define GSD_FRONT 1)LN
EL
SL
(#define GSD_BACK  2)LN
EL
SL
(#define GSD_BOTH  3)LN
EL
SL
()LN
EL
SL
(/* fence colormodes */)LN
EL
SL
(#define FC_OFF           0)LN
EL
SL
(#define FC_ABOVE         1)LN
EL
SL
(#define FC_BELOW         2)LN
EL
SL
(#define FC_BLEND         3)LN
EL
SL
(#define FC_GREY          4 )LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 35000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
gsave
0 550000 35000 507367 780000 Rectangle clip 
557633 806893 moveto
SL
()LN
EL
SL
(extern float GS_global_exag\(\);)LN
EL
SL
(extern int *GS_get_surf_list\(\);)LN
EL
SL
(extern int *GV_get_vect_list\(\);)LN
EL
SL
(extern int *GP_get_site_list\(\);)LN
EL
SL
(extern void *GS_Get_ClientData\(\);)LN
EL
SL
()LN
EL
SL
()LN
EL
SL
(/* these have to be 1 << KF_id_index */)LN
EL
SL
()LN
EL
SL
(#define KF_FROMX_MASK   0x00000001)LN
EL
SL
(#define KF_FROMY_MASK   0x00000002)LN
EL
SL
(#define KF_FROMZ_MASK   0x00000004)LN
EL
SL
(#define KF_FROM_MASK    0x00000007)LN
EL
SL
()LN
EL
SL
(#define KF_DIRX_MASK    0x00000008)LN
EL
SL
(#define KF_DIRY_MASK    0x00000010)LN
EL
SL
(#define KF_DIRZ_MASK    0x00000020)LN
EL
SL
(#define KF_DIR_MASK     0x00000038)LN
EL
SL
()LN
EL
SL
(#define KF_FOV_MASK     0x00000040)LN
EL
SL
(#define KF_TWIST_MASK   0x00000080)LN
EL
SL
()LN
EL
SL
(#define KF_ALL_MASK     0x000000FF)LN
EL
SL
()LN
EL
SL
(#define KF_NUMFIELDS 8 )LN
EL
SL
()LN
EL
SL
(#define KF_LINEAR 111)LN
EL
SL
(#define KF_SPLINE 222)LN
EL
SL
(#define KF_LEGAL_MODE\(m\) \(m == KF_LINEAR || m == KF_SPLINE\) )LN
EL
SL
()LN
EL
SL
()LN
EL
SL
()LN
EL
SL
(#define KF_FROMX 0)LN
EL
SL
(#define KF_FROMY 1)LN
EL
SL
(#define KF_FROMZ 2)LN
EL
SL
(#define KF_DIRX 3)LN
EL
SL
(#define KF_DIRY 4)LN
EL
SL
(#define KF_DIRZ 5)LN
EL
SL
(#define KF_FOV 6)LN
EL
SL
(#define KF_TWIST 7)LN
EL
SL
()LN
EL
SL
(#define FM_VECT 0x00000001)LN
EL
SL
(#define FM_SITE 0x00000002)LN
EL
SL
(#define FM_PATH 0x00000004)LN
EL
SL
()LN
EL
SL
(typedef struct view_node{)LN
EL
SL
(    float fields[KF_NUMFIELDS]; )LN
EL
SL
(} Viewnode;)LN
EL
SL
()LN
EL
SL
(typedef struct key_node{)LN
EL
SL
(    float  pos, fields[KF_NUMFIELDS]; )LN
EL
SL
(    int look_ahead;)LN
EL
SL
(    unsigned long fieldmask;)LN
EL
SL
(    struct key_node *next, *prior;)LN
EL
SL
(} Keylist;)LN
EL
SL
()LN
EL
SL
(/* these defines work with modeling coordinates only */)LN
EL
SL
()LN
EL
SL
(/* view resolutions */)LN
EL
SL
(#define VXRES\(gs\)   \(gs->x_mod * gs->xres\))LN
EL
SL
(#define VYRES\(gs\)   \(gs->y_mod * gs->yres\))LN
EL
SL
()LN
EL
SL
(/* number of viewres rows/cols */)LN
EL
SL
(#define VROWS\(gs\)    \(int\)\(\(gs->rows -1\)/gs->y_mod\))LN
EL
SL
(#define VCOLS\(gs\)    \(int\)\(\(gs->cols -1\)/gs->x_mod\))LN
EL
SL
()LN
EL
SL
(/* data row & col to offset */)LN
EL
SL
(#define DRC2OFF\(gs, drow, dcol\)  \(int\)\(\(dcol\) + \(drow\) * gs->cols\))LN
EL
SL
()LN
EL
SL
(/* ycoord/xcoord to data row/col */)LN
EL
SL
(#define Y2DROW\(gs,py\)      \(int\)\(\(gs->yrange - \(py\)\)/gs->yres\))LN
EL
SL
(#define X2DCOL\(gs,px\)      \(int\)\(\(px\)/gs->xres\))LN
EL
SL
()LN
EL
SL
(/* ycoord/xcoord to offset */)LN
EL
SL
(#define XY2OFF\(gs, px, py\) \(int\)DRC2OFF\(gs, Y2DROW\(gs,py\), X2DCOL\(gs,px\)\))LN
EL
SL
()LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 550000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
/#copies 1 def showpage
restore
%%Page: 2 2
/Title ((standard input)) def 
/EL { grestore 0 -10072 rmoveto } def
save
/O {gsave show grestore} def
/reencodeISO {
    dup length dict begin
        {1 index /FID ne {def}{pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end
} def
/findISO {
    dup /FontType known {
        dup /FontType get 3 ne {
            dup /CharStrings known {
                dup /CharStrings get /Thorn known {
                    true
                }{ false } ifelse
            }{ false } ifelse
        }{ false } ifelse
    }{ false } ifelse
} def
/N {/Courier findfont findISO { reencodeISO /Courier-ISO exch definefont
    9685 scalefont setfont }
    { 9685 scalefont setfont } ifelse 
} def
72 100000 div 72 100000 div scale
N()pop
0 1100000 translate
-90 rotate
gsave
0 35000 35000 507367 780000 Rectangle clip 
42633 806893 moveto
SL
(    int     constant;     /* TODO: should be float */)LN
EL
SL
(    int     *lookup;      /* TODO: use transform instead */)LN
EL
SL
(    float   min_nz, max_nz, range_nz;)LN
EL
SL
(} gsurf_att;)LN
EL
SL
()LN
EL
SL
(typedef struct g_surf{)LN
EL
SL
(    int gsurf_id;)LN
EL
SL
(    int cols, rows;)LN
EL
SL
(    gsurf_att att[MAX_ATTS]; /* mask, topo, color, etc. */)LN
EL
SL
(    IFLAG draw_mode; /*DM_GOURAUD | DM_FRINGE | DM_POLY, DM_WIRE, DM_WIRE_POLY*/)LN
EL
SL
(    long wire_color;   /* 0xBBGGRR or WC_COLOR_ATT */)LN
EL
SL
(    double ox, oy;     /* real world origin \(i.e., SW corner\) */)LN
EL
SL
(    double xres, yres;)LN
EL
SL
(    float z_exag;)LN
EL
SL
(    float x_trans, y_trans, z_trans;)LN
EL
SL
(    float xmin, xmax, ymin, ymax, zmin, zmax, zminmasked;)LN
EL
SL
(    float xrange, yrange, zrange; )LN
EL
SL
(    float zmin_nz, zmax_nz, zrange_nz;)LN
EL
SL
(    int x_mod, y_mod, x_modw, y_modw; /*cells per viewcell, per wire viewcell*/)LN
EL
SL
(    int nz_topo, nz_color;  /* no zero flags */)LN
EL
SL
(    int mask_needupdate, norm_needupdate;)LN
EL
SL
(    unsigned long *norms;)LN
EL
SL
(    struct BM *curmask;)LN
EL
SL
(    struct g_surf *next;)LN
EL
SL
(    void *clientdata;)LN
EL
SL
(} geosurf;)LN
EL
SL
()LN
EL
SL
(/* maybe put attribute info here instead of in geovect - allow a single)LN
EL
SL
(   vector file to have multiple attributes ?   Cached lines should )LN
EL
SL
(   usually be stored as 2d, since they may be draped on multiple)LN
EL
SL
(   surfaces & Z will vary depending upon surface. */)LN
EL
SL
(typedef struct g_line{)LN
EL
SL
(    int dims, npts;)LN
EL
SL
(    Point3 *p3;)LN
EL
SL
(    Point2 *p2;)LN
EL
SL
(    struct g_line *next;)LN
EL
SL
(} geoline;)LN
EL
SL
()LN
EL
SL
(typedef struct g_vect{)LN
EL
SL
(    int gvect_id;)LN
EL
SL
(    int use_mem, n_lines;)LN
EL
SL
(    int drape_surf_id[MAX_SURFS]; /* if you want 'em flat, define the surface */)LN
EL
SL
(    int n_surfs;)LN
EL
SL
(    int color, width;)LN
EL
SL
(    char filename[NAME_SIZ];)LN
EL
SL
(    float x_trans, y_trans, z_trans; )LN
EL
SL
(/* also maybe center & rotate? */)LN
EL
SL
(    geoline *lines;)LN
EL
SL
(    geoline *fastlines;)LN
EL
SL
(    int \(*bgn_read\)\(\), \(*end_read\)\(\), \(*nxt_line\)\(\);)LN
EL
SL
(    struct g_vect *next;)LN
EL
SL
(    void *clientdata;)LN
EL
SL
(} geovect;)LN
EL
SL
()LN
EL
SL
(typedef struct g_point{)LN
EL
SL
(    int dims;)LN
EL
SL
(    Point3 p3;)LN
EL
SL
(    float fattr; /* may want to make these pointers or arrays for mult atts */)LN
EL
SL
(    int iattr;)LN
EL
SL
(    char *cattr;)LN
EL
SL
(    struct g_point *next;)LN
EL
SL
(} geopoint;)LN
EL
SL
()LN
EL
SL
(typedef struct g_site{)LN
EL
SL
(    int gsite_id;)LN
EL
SL
(    int drape_surf_id[MAX_SURFS];  /* ditto */)LN
EL
SL
(    int n_surfs, n_sites;)LN
EL
SL
(    int color, width, marker, use_z, use_mem;)LN
EL
SL
(    int has_z, has_att;  /* set when file loaded */)LN
EL
SL
(    int attr_mode; /* ST_ATT_COLOR, ST_ATT_MARKER, ST_ATT_SIZE, ST_ATT_NONE */)LN
EL
SL
(    char filename[NAME_SIZ];)LN
EL
SL
(    transform attr_trans;)LN
EL
SL
(    float size;)LN
EL
SL
(    float x_trans, y_trans, z_trans; )LN
EL
SL
(    geopoint *points;)LN
EL
SL
(    int \(*bgn_read\)\(\), \(*end_read\)\(\), \(*nxt_site\)\(\);)LN
EL
SL
(    struct g_site *next;)LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 35000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
gsave
0 550000 35000 507367 780000 Rectangle clip 
557633 806893 moveto
SL
(    void *clientdata;)LN
EL
SL
(} geosite;)LN
EL
SL
()LN
EL
SL
(struct lightdefs{)LN
EL
SL
(    float position[4];  /* X, Y, Z, \(1=local/0=inf\) */)LN
EL
SL
(    float color[3];  /* R, G, B */)LN
EL
SL
(    float ambient[3];  /* R, G, B */)LN
EL
SL
(    float emission[3];  /* R, G, B */)LN
EL
SL
(    float shine;  /* 0. to 128. */)LN
EL
SL
(};)LN
EL
SL
()LN
EL
SL
(typedef struct{)LN
EL
SL
(    int coord_sys;      /* latlon, equal area, etc */)LN
EL
SL
(    int view_proj;     /* perspective, ortho */)LN
EL
SL
(    int infocus;       /* fixed center of view - true or false */)LN
EL
SL
(    float from_to[2][4];)LN
EL
SL
(    int twist, fov, incl, look;  /* 10ths of degrees */)LN
EL
SL
(    float real_to[4], vert_exag; /* a global Z exag */)LN
EL
SL
(    float scale;)LN
EL
SL
(    struct lightdefs lights[MAX_LIGHTS];)LN
EL
SL
(} geoview;)LN
EL
SL
()LN
EL
SL
(typedef struct{        /* need to add elements here for off_screen drawing */)LN
EL
SL
(    float nearclip, farclip, aspect;)LN
EL
SL
(    short left, right, bottom, top;  /* Screen coordinates */)LN
EL
SL
(    int bgcol;)LN
EL
SL
(} geodisplay;)LN
EL
SL
()LN
EL
SL
(float ID_matrix[4][4]; )LN
EL
SL
()LN
EL
SL
(void \(*Cxl_func\)\(\);)LN
EL
SL
()LN
EL
SL
()LN
EL
SL
(/* function prototypes */)LN
EL
SL
(extern int GS_surf_exists\(\);)LN
EL
SL
(extern int GS_new_surface\(\);)LN
EL
SL
(extern int GS_delete_surface\(\);)LN
EL
SL
(extern float GS_distance\(\);)LN
EL
SL
(extern float GS_global_exag\(\); )LN
EL
SL
(extern double GS_get_aspect\(\);)LN
EL
SL
()LN
EL
SL
(extern int Gs_loadmap_as_int\(\);)LN
EL
SL
(extern int Gs_loadmap_as_short\(\);)LN
EL
SL
()LN
EL
SL
(extern geoline *Gv_load_vect\(\);)LN
EL
SL
()LN
EL
SL
(extern geosurf *gs_get_surf\(\);)LN
EL
SL
(extern geosurf *gs_get_prev_surface\(\);)LN
EL
SL
(extern geosurf *gs_get_last_surf\(\);)LN
EL
SL
(extern geosurf *gs_get_new_surf\(\);)LN
EL
SL
(extern int gs_num_surfaces\(\);)LN
EL
SL
(extern int gs_init_surf\(\);)LN
EL
SL
(extern int gs_delete_surf\(\);)LN
EL
SL
(extern int gs_free_surf\(\);)LN
EL
SL
(extern int gs_free_unshared_buffs\(\);)LN
EL
SL
(extern int gs_get_att_type\(\);)LN
EL
SL
(extern int gs_get_att_src\(\);)LN
EL
SL
(extern float gs_distance\(\);)LN
EL
SL
(extern typbuff *gs_get_att_typbuff\(\);)LN
EL
SL
(extern int gs_num_datah_reused\(\);)LN
EL
SL
()LN
EL
SL
(extern int gsds_alloc_typbuff\(\);)LN
EL
SL
(extern typbuff *gsds_get_typbuff\(\);     )LN
EL
SL
(extern char *gsds_get_name\(\);   )LN
EL
SL
(extern int gsds_geth\(\); )LN
EL
SL
(extern int gsds_findh\(\);)LN
EL
SL
(extern int gsds_newh\(\);)LN
EL
SL
(extern int gsds_free_datah\(\);)LN
EL
SL
(extern int gsds_set_changed\(\);)LN
EL
SL
(extern int gsds_get_changed\(\);)LN
EL
SL
(extern int gsds_get_type\(\);)LN
EL
SL
()LN
EL
SL
()LN
EL
SL
(/*  gsurf.h )LN
EL
SL
(    Bill Brown, USACERL  )LN
EL
SL
(    January 1993)LN
EL
SL
(*/)LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 550000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
/#copies 1 def showpage
restore
%%Page: 1 1
/Title ((standard input)) def 
/EL { grestore 0 -10072 rmoveto } def
save
/O {gsave show grestore} def
/reencodeISO {
    dup length dict begin
        {1 index /FID ne {def}{pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end
} def
/findISO {
    dup /FontType known {
        dup /FontType get 3 ne {
            dup /CharStrings known {
                dup /CharStrings get /Thorn known {
                    true
                }{ false } ifelse
            }{ false } ifelse
        }{ false } ifelse
    }{ false } ifelse
} def
/N {/Courier findfont findISO { reencodeISO /Courier-ISO exch definefont
    9685 scalefont setfont }
    { 9685 scalefont setfont } ifelse 
} def
72 100000 div 72 100000 div scale
N()pop
0 1100000 translate
-90 rotate
gsave
0 35000 35000 507367 780000 Rectangle clip 
42633 806893 moveto
SL
(/***********)LN
EL
SL
(* gsget.h)LN
EL
SL
(***********/)LN
EL
SL
()LN
EL
SL
(#include "gsurf.h")LN
EL
SL
()LN
EL
SL
(/* good for types int, short, or char ONLY */)LN
EL
SL
(#define GET_MAPATT1\(buff, offset, att\) att=\(buff->ib? \(float\)buff->ib[offset]: \\)LN
EL
SL
(                                      buff->sb? \(float\)buff->sb[offset]: \\)LN
EL
SL
(                                      \(float\)buff->cb[offset]\))LN
EL
SL
()LN
EL
SL
(#define GET_MAPATT\(buff, offset, att\) att=\(buff->ib? \(float\)buff->ib[offset]: \\)LN
EL
SL
(                                      buff->sb? \(float\)buff->sb[offset]: \\)LN
EL
SL
(                                      buff->cb? \(float\)buff->cb[offset]: \\)LN
EL
SL
(                                      buff->fb? \(float\)buff->fb[offset]: \\)LN
EL
SL
(                                      buff->k\); \\)LN
EL
SL
(                                      if\(buff->tfunc\) \\)LN
EL
SL
(                                          att = \(buff->tfunc\)\(att, offset\);)LN
EL
SL
()LN
EL
SL
(#define SCALE_ATT\(att, val, low, high\)   \(\(val\) <= att->max_nz && \\)LN
EL
SL
(                                \(val\) >= att->min_nz && att->range_nz? \\)LN
EL
SL
(                                \(\(\(val\) - att->min_nz\)/att->range_nz\) * \\)LN
EL
SL
(                                \(\(high\) - \(low\)\) + \(low\): 0\))LN
EL
SL
()LN
EL
SL
(/* cast to float, otherwise doesn't seem to handle neg. values */)LN
EL
SL
()LN
EL
SL
()LN
EL
SL
(#define XYMAXPOS 0x3ff    /* 1023 */)LN
EL
SL
(#define ZMAXPOS 0x3ff    /* 1023 */)LN
EL
SL
()LN
EL
SL
(#define NXMASK 0xffe00000/* top 11 bits */)LN
EL
SL
(#define NYMASK 0x1ffc00  /* middle 11 bits of packed int */)LN
EL
SL
(#define NZMASK 0x3ff     /* lowest 10 bits */)LN
EL
SL
()LN
EL
SL
(#define NZUP 0x000003ff)LN
EL
SL
()LN
EL
SL
(/* Fetch Normal vector from packed int */)LN
EL
SL
(#define FNORM\(i,nv\)  \\)LN
EL
SL
(  nv[X] = \(\(int\)\(\(\(i\) & NXMASK\) >> 21\) - XYMAXPOS\)/\(float\)XYMAXPOS; \\)LN
EL
SL
(  nv[Y] = \(\(int\)\(\(\(i\) & NYMASK\) >> 10\) - XYMAXPOS\)/\(float\)XYMAXPOS; \\)LN
EL
SL
(  nv[Z] = \(int\)\(\(i\) & NZMASK\)/\(float\)ZMAXPOS)LN
EL
SL
()LN
EL
SL
(/* Pack Normal vector into int */)LN
EL
SL
(#define PNORM\(i,nv\)  \\)LN
EL
SL
(  i = \(\(unsigned int\)\(\(nv[X]*XYMAXPOS\)+XYMAXPOS\) << 21\) |           \\)LN
EL
SL
(  \(\(unsigned int\)\(\(nv[Y]*XYMAXPOS\)+XYMAXPOS\) << 10\) |               \\)LN
EL
SL
(  \(unsigned int\)\(nv[Z]*ZMAXPOS\))LN
EL
SL
()LN
EL
SL
()LN
EL
SL
()LN
EL
SL
(/*  gstypes.h)LN
EL
SL
(    Bill Brown, USACERL  )LN
EL
SL
(    January 1993)LN
EL
SL
(*/)LN
EL
SL
(        )LN
EL
SL
(#include "gsurf.h")LN
EL
SL
(#include "bitmap.h")LN
EL
SL
()LN
EL
SL
(/*)LN
EL
SL
(#define TRACE_FUNCS)LN
EL
SL
(*/)LN
EL
SL
()LN
EL
SL
(#define X 0)LN
EL
SL
(#define Y 1)LN
EL
SL
(#define Z 2)LN
EL
SL
(#define W 3)LN
EL
SL
(#define FROM 0)LN
EL
SL
(#define TO 1)LN
EL
SL
()LN
EL
SL
(/* colormodes */)LN
EL
SL
(#define CM_COLOR               0)LN
EL
SL
(#define CM_EMISSION            1)LN
EL
SL
(#define CM_AMBIENT             2)LN
EL
SL
(#define CM_DIFFUSE             3)LN
EL
SL
(#define CM_SPECULAR            4)LN
EL
SL
(#define CM_AD                  5)LN
EL
SL
(#define CM_NULL                6)LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 35000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
gsave
0 550000 35000 507367 780000 Rectangle clip 
557633 806893 moveto
SL
()LN
EL
SL
(#define CM_WIRE CM_COLOR)LN
EL
SL
()LN
EL
SL
(#define ZERO_COLOR 0xFFFFFF)LN
EL
SL
()LN
EL
SL
(/* attribute sizes - NOT YET USED */)LN
EL
SL
(#define GS_CHAR8      char)LN
EL
SL
(#define GS_SHORT16   short)LN
EL
SL
(#define GS_INT32       int)LN
EL
SL
()LN
EL
SL
(/* attribute ***types*** */)LN
EL
SL
(#define ATTY_MASK       16   /* can't use this one for numbytes */)LN
EL
SL
(#define ATTY_FLOAT       8   /* can't use this one for numbytes */)LN
EL
SL
(#define ATTY_INT         4 )LN
EL
SL
(#define ATTY_SHORT       2 )LN
EL
SL
(#define ATTY_CHAR        1)LN
EL
SL
(#define LEGAL_TYPE\(t\)    \\)LN
EL
SL
(\(t==ATTY_MASK || t==ATTY_FLOAT || t==ATTY_INT || t==ATTY_SHORT || t==ATTY_CHAR\))LN
EL
SL
()LN
EL
SL
(#define MAXDIMS 4)LN
EL
SL
()LN
EL
SL
(#define FUDGE\(gs\) \(\(gs->zmax_nz - gs->zmin_nz\)/500.\))LN
EL
SL
(#define DOT3\( a, b \)    \( \(a\)[X]*\(b\)[X] + \(a\)[Y]*\(b\)[Y] + \(a\)[Z]*\(b\)[Z] \))LN
EL
SL
()LN
EL
SL
(/* changed flags for datasets */)LN
EL
SL
(#define CF_NOT_CHANGED 0x000000)LN
EL
SL
(#define CF_COLOR_PACKED 0x000001)LN
EL
SL
(#define CF_USR_CHANGED 0x000010)LN
EL
SL
(#define CF_CHARSCALED  0x000100)LN
EL
SL
()LN
EL
SL
(#define NAME_SIZ 80)LN
EL
SL
()LN
EL
SL
(typedef float Point4[4];)LN
EL
SL
(typedef float Point3[3];)LN
EL
SL
(typedef float Point2[2];)LN
EL
SL
()LN
EL
SL
(typedef struct{)LN
EL
SL
(    float *fb;)LN
EL
SL
(    int *ib;)LN
EL
SL
(    short *sb;)LN
EL
SL
(    char *cb;)LN
EL
SL
(    struct BM *bm;)LN
EL
SL
(    float  \(*tfunc\)\(\);)LN
EL
SL
(    float k;)LN
EL
SL
(} typbuff;)LN
EL
SL
()LN
EL
SL
(typedef struct{  /* use hash table? */)LN
EL
SL
(    int n_elem;  /* if n_elem == 256, index == NULL */)LN
EL
SL
(    char *index;)LN
EL
SL
(    int *value;)LN
EL
SL
(} table256;)LN
EL
SL
()LN
EL
SL
(typedef struct{  /* applied thusly: offset, mult, if\(use_lookup\) lookup */)LN
EL
SL
(    float offset;)LN
EL
SL
(    float mult;)LN
EL
SL
(    int use_lookup;)LN
EL
SL
(    table256 lookup;)LN
EL
SL
(} transform;)LN
EL
SL
()LN
EL
SL
(/* move this to dataset file? */)LN
EL
SL
(typedef struct{)LN
EL
SL
(    int data_id;)LN
EL
SL
(    int dims[MAXDIMS];)LN
EL
SL
(    int ndims;)LN
EL
SL
(    int numbytes;)LN
EL
SL
(    char unique_name[NAME_SIZ];)LN
EL
SL
(    typbuff databuff;)LN
EL
SL
(    IFLAG changed;)LN
EL
SL
(    int need_reload;)LN
EL
SL
(} dataset;)LN
EL
SL
()LN
EL
SL
(/* maybe add transformation matrix? */)LN
EL
SL
(typedef struct{)LN
EL
SL
(    IFLAG     att_src;     /* NOTSET_ATT, MAP_ATT, CONST_ATT, FUNC_ATT */)LN
EL
SL
(    IFLAG     att_type;    /* ATTY_INT, ATTY_SHORT, or ATTY_CHAR */)LN
EL
SL
(    int     hdata;      /* handle to dataset */ )LN
EL
SL
(    int     \(*user_func\)\(\);)LN
EL
grestore

gsave
initclip
553 setlinewidth
newpath 550000 35276 moveto 515000 0 rlineto 0 779447 rlineto -515000 0 rlineto closepath stroke
grestore
/#copies 1 def showpage
restore
%%Trailer
restore
%%Pages: 4
%PageTable:  1 1 22029 2 2 14603 3 3 7682 4 4 5751 5 5 5751
