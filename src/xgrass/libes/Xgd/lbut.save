#include "xgrass_dlib.h"

Widget
#ifdef _NO_PROTO
XgdCreateLinePatternPad(parent, string, cols, orientation, callback)
Widget parent;
char *string;
int cols;
int orientation;
void (*callback)();
#else
XgdCreateLinePatternPad( Widget parent, char *string, int cols, 
    int orientation, void (*callback)())
#endif
{
  Widget frame;
  Widget rc;
  Widget w;
  Widget lastColumn1, lastColumn2;
  Pixel fg, bg;
  int i, offset = 7;
  Widget caption;
  XmString xms;
  Boolean status;

  xms = XmStringCreateSimple(string);
  caption = XtVaCreateManagedWidget("line_caption", xbaeCaptionWidgetClass,
				    parent,
				    XmNlabelPosition, XbaePositionTop,
				    XmNlabelAlignment, XbaeAlignmentCenter,
				    XmNlabelString, xms,
				    NULL);
  XmStringFree(xms);

  XtVaSetValues(caption, XmNlabelOffset, -offset, NULL);
  
  frame = XtVaCreateManagedWidget("linepat_pad_frame", 
				  xmFrameWidgetClass, caption,
				  XmNmarginWidth, offset, 
				  XmNmarginHeight, offset, NULL);
  
  rc = XtVaCreateManagedWidget("linepat_pad_rc",
			       xmRowColumnWidgetClass, frame,
			       XmNcolumns, cols,
			       XmNorientation, orientation,
			       NULL);
  
  XtVaGetValues(parent, XmNforeground, &fg, XmNbackground, &bg, NULL);
  
  for ( i = 0; i < XtNumber(__XGDlinePatternButtonTable); i++ ) {
    Pixmap pixmap;
    XmString xms;
    
    if ( __XGDlinePatternButtonTable[i].bitmap ) {
      pixmap = XCreatePixmapFromBitmapData(XtDisplay(parent),
				 RootWindowOfScreen(XtScreen(parent)), 
				 __XGDlinePatternButtonTable[i].bitmap,
	                         __XGDlinePatternButtonTable[i].width,
				 __XGDlinePatternButtonTable[i].height,
				 fg, bg,
				 DefaultDepthOfScreen(XtScreen(parent)));
      w = XtVaCreateManagedWidget(__XGDlinePatternButtonTable[i].label,
				  xmPushButtonWidgetClass, rc, 
				  XmNlabelType, XmPIXMAP,
				  XmNlabelPixmap, pixmap,
				  NULL);
    } else {
      xms = XmStringCreateSimple(__XGDlinePatternButtonTable[i].label);
      w = XtVaCreateManagedWidget(__XGDlinePatternButtonTable[i].label,
				  xmPushButtonWidgetClass, rc, 
				  XmNlabelString, xms,
				  NULL);
      XmStringFree(xms);
    }
    XtAddCallback(w, XmNactivateCallback, callback, i);
  }
  
  return caption;
}

