                    NEIGHBORHOOD ANALYSIS AND FILTERS

The user may wish to model interactions across a landscape, or to remove
systematic distortions occurring across a map or image.  The user may
also wish to eliminate "noise" from map data in order to make the basic
results more visually apparent.  Such applications can be approached by
filtering data.

The user can build custom filters to make the value of one pixel a
(user-defined) function of the values in the surrounding cells.  The
paper @ref("r.mapcalc: An Algebra for GIS and Image Processing",18.biblio/unpub.rmap.90) provides
examples of how some spatial filters commonly used in image processing
can built using @man("r.mapcalc").  See also past issues of the newsletter
@ref("GRASSClippings",18.biblio/clip.all) for other examples of custom filters for specific
applications and the image processing section on "Building Custom
Filters."

The programs below are used in neighborhood analysis and filtering.  

 @ref("-  r.basins.fill ",Commands.def/rbasfill.def)            @ref("-  r.mapcalc ",Commands.def/rmapcalc.def)
 @ref("-  r.buffer ",Commands.def/rbuffer.def)                 @ref("-  r.neighbors ",Commands.def/irneigh.def) 
 @ref("-  r.cost ",Commands.def/rcost.def)                   @ref("-  r.slope.aspect ",Commands.def/rslasp.def) 
 @ref("-  r.clump ",Commands.def/rclump.def)                  @ref("-  r.thin ",Commands.def/rthin.def) 
 @ref("-  r.drain ",Commands.def/rdrain.def)                  @ref("-  r.watershed ",Commands.def/rh20shed.def) 
 @ref("-  r.grow ",Commands.def/rgrow.def) 
