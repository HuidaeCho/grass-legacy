shell=grass$(VERSION_NUMBER)

EXTRA_CFLAGS = -DD_LOCATION_NAME=\"$(DEFAULT_LOCATION)\" -DD_GISDBASE=\"$(DEFAULT_DATABASE)\" -DVERSION_NUMBER=\"'$(VERSION_NUMBER)'\" -DVERSION_UPDATE_PKG=\"'$(VERSION_UPDATE_PKG)'\"

all: unix \
     $(ETC)/GIS.sh \
     $(ETC)/gis_set \
     $(ETC)/clean_temp \
     $(ETC)/lock \
     $(ETC)/run \
     $(ETC)/echo \
     $(ETC)/gis_intro

unix:
	@test -d $(UNIX_BIN) || (echo 'UNIX_BIN($(UNIX_BIN))' not found; exit 1)
	@test -w $(UNIX_BIN) || (echo 'UNIX_BIN($(UNIX_BIN))' not writeable; exit 1)
	rm -f $(UNIX_BIN)/$(shell)
	echo ':' > $(UNIX_BIN)/$(shell)
	echo GISBASE=$(GISBASE) >> $(UNIX_BIN)/$(shell)
	echo export GISBASE >> $(UNIX_BIN)/$(shell)
	echo exec '$$'GISBASE/etc/GIS.sh >> $(UNIX_BIN)/$(shell)
	chmod +x $(UNIX_BIN)/$(shell)

$(ETC)/GIS.sh: gis.head gis.shell gis.tail version.sed $(SRC)/CMD/VERSION
	rm -f $@
	sh ./version.sed "$(VERSION_NUMBER)" "$(VERSION_DATE)" "$(VERSION_UPDATE_PKG)" gis.head > $@
	sh ./version.sed "$(VERSION_NUMBER)" "$(VERSION_DATE)" "$(VERSION_UPDATE_PKG)" gis.shell >> $@
	cat gis.tail >> $@
	chmod +x $@

GIS_SET = gis_set.o mke_mapset.o mke_loc.o chk_dbase.o other.o
$(ETC)/gis_set: $(GIS_SET) $(GISLIB) $(VASKLIB)
	rm -f a.out
	$(CC) $(LDFLAGS) $(GIS_SET) $(GISLIB) $(VASK)
	mv a.out $@

$(ETC)/echo: echo.o
	$(CC) $(LDFLAGS) echo.o -o $@

$(ETC)/clean_temp: clean_temp.o $(GISLIB) 
	$(CC) $(LDFLAGS) clean_temp.o $(GISLIB) -o $@

$(ETC)/run: run.o
	$(CC) $(LDFLAGS) run.o -o $@

$(ETC)/lock: lock.o
	$(CC) $(LDFLAGS) lock.o -o $@

$(BIN)/exit:
	touch $@
	chmod 600 $@

$(ETC)/gis_intro: gis_intro.tx
	rm -f $@
	sh ./version.sed "$(VERSION_NUMBER)" "$(VERSION_DATE)" "$(VERSION_UPDATE_PKG)" gis_intro.tx >$@
	chmod +r $@

$(GISLIB): # in case library changes
$(VASKLIB): #
