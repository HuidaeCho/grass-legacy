


compress(1)          GRASS Reference Manual           compress(1)



NAME
     compress - Compresses cell
     (Available through grass3 menu)

SYNOPSIS
     compress map_layer

DESCRIPTION
     The GRASS tool compress reformats cell using a run-length-
     encoding (RLE) algorithm.

     which contain very little information (such as boundary,
     geology, soils and land use can be greatly reduced in size.
     Some are shrunk to roughly 1% of their original sizes.
     containing complex images such as elevation and photo or
     satellite images may increase slightly in size.  GRASS uses
     a new compressed format, and all new cell are now
     automatically stored in compressed form (see FORMATS below).
     GRASS programs read both the compressed and regular formats.

     As an example, the Spearfish "owner" was originally a size
     of 26600 bytes. After it was compressed, the became only
     1249 bytes.  may be decompressed to return them to their
     original format. If compress is asked to work on a which is
     already compressed, it simply informs the user of that, and
     leaves the as it is.

     The GRASS command decompress map_layer returns the specified
     to its decompressed format. As with compress, decompress[1]
     will not bother an already decompressed

FORMATS
     Conceptually a consists of rows of cells, with each row
     containing the same number of cells. A cell consists of one
     or more bytes.  The number of bytes per cell depends on the
     values in the in the range 0-255 require 1 byte per cell,
     while in the range 256-65535 require 2 bytes, and in the
     range above 65535 require 3 (or more) bytes per cell.

     The decompressed format matches the conceptual format.  For
     example, a with 1 byte cells that is 100 rows with 200 cells
     per row, consists of 20,000 bytes.  The UNIX command "ls -l"
     on this file will show a size of 20,000. If the cells were 2
     byte cells, the file would require 40,000 bytes.  The start
     with the upper left corner cell followed by the other cells
     along the northern boundary.  The byte following the last
     byte of that first row is the first cell of the second row
     of (moving from left to right).  There are no end-of-row
     markers or other syncing codes in the A cell header file,
     cellhd, is used to define how this string of bytes is broken
     up into rows of




GRASS 3.2                U.S. Army CERL                         1






compress(1)          GRASS Reference Manual           compress(1)



     The compressed format is not so simple, but is quite elegant
     in its design.  It not only requires less disk space to
     store the but often can result in faster execution of
     graphic and analysis programs since there is less disk i/o.
     There are two compressed formats:  the pre-3.0 format (which
     GRASS programs can read but no longer produce), and the 3.0
     format (which is automatically used when new cell are
     created).

     Pre-3.0 format:

     First 3 bytes (chars) - These are a special code that
          identifies the as compressed.

     Address array (long) - array (size of the number of rows +
          1) of addresses pointing to the internal start of each
          row.  Because each row may be a different size, this
          array is necessary to provide a mapping of the data.

     Row by row, beginning at the northern edge of the data,  a
          series of byte groups describes the data.  The number
          of bytes in each group is the number of bytes per cell
          plus one.  The first byte of each group gives a count
          (up to 255) of the number of cells that contain the
          category given by the remaining bytes of the group.

     3.0 format:

     The 3 byte code is not used.  Instead, a field in the cell
          header is used to indicate compressed format.

     The address array is the same.

     The RLE format is the same as the pre-3.0 RLE, except that
          each row of data is preceded by a single byte
          containing the number of bytes per cell for the row,
          and if run-length-encoding the row would not require
          less space than non-run-length-encoding, then the row
          is not encoded.

     These improvements give better compression than the pre-3.0
     format in 99% of the The kinds of which get bigger are those
     in which each row would be larger if compressed (e.g.,
     imagery band But even in this case the cell would only be
     larger by the size of the address array and the single byte
     preceding each row.

AUTHOR
     James Westervelt, U.S. Army Construction Engineering
     Research Laboratory
     Michael Shapiro, U.S. Army Construction Engineering Research
     Laboratory



GRASS 3.2                U.S. Army CERL                         2



