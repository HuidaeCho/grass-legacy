


Gask(2G)             GRASS Reference Manual              Gask(2G)



NAME
     Gask  - Prompt the user for database files
     (G Language Tool)

SYNOPSIS
     Gask type prompt element desc unixfile

DESCRIPTION
     Gask is designed for shell scripts that need to prompt the
     user for a database file. The parameters are:


     type        The type of query:

                 old - For existing data files anywhere in the user's mapset search path
                 new - For files that must not exist in the current mapset
                 any - For files that may/or may not exist in the current mapset
                 mapset - For files that must exist in the current mapset



     prompt      The prompt to be displayed to the user. If
                 specified as a dash - an appropriate prompt will
                 be constructed.

     element     The database element (i.e., directory) to be
                 queried.

     desc        A short description of the database element
                 which is meaningful to the user.

     unixfile    The name of a UNIX file to store the user's
                 response. See next section for what is written
                 to this file and how it can be used by shell
                 scripts.

OUTPUT
     After querying the user for the requested information, Gask
     writes 3 lines to the unixfile:

          name=[somename]
          mapset=[somemapset]
          file=[filename]

     The output is /bin/sh commands to set the variable name to
     the database file name, mapset to the mapset in which the
     file resides (or will be created), and file to the full UNIX
     name for the database file. These variables may be set in
     the /bin/sh as follows:

          . unixfile




GRASS 3.2                U.S. Army CERL                         1






Gask(2G)             GRASS Reference Manual              Gask(2G)



     The . is a shell command which means read the unixfile and
     execute the commands found there. It is NOT part of the
     unixfile name and MUST be followed by a space.

NOTES
     The user may choose to simply hit the return key and not
     enter a file name. If this happens the variables will be set
     as follows:

          name=
          mapset=
          file=

     The following is a way to test for this case:

          if [ ! "$file" ]
          then
               exit
          fi

AUTHOR
     Michael Shapiro, U.S. Army Construction Engineering Research
     Laboratory
































GRASS 3.2                U.S. Army CERL                         2



