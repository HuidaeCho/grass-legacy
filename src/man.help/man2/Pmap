.\" %W% %G%
.if n .ds z >>>
.if t .ds z \>\h'-0.2m'\>\h'-0.2m'\>
.TH Pmap 2P P-language
.SH NAME
Pmap \- Command language interface to color hardcopy output.
.SH SYNOPSIS
\fBPmap\fI [scale\*=\fIscale\fB] [<\fIscriptfile\fB]\fR
.SH DESCRIPTION
.I Pmap
is a command language interface used to produce hardcopy maps on the user's
system's color printer. 
.I Pmap
is more robust than
.I paint.
However, since it is command language driven for greater versatility, there is
little on-line user prompting or help. In order to use 
.I Pmap
properly, the user is advised to be prepared and knowledgeable of the required
inputs before running
.I Pmap.

\fBNOTE\fR: Before running
.I Pmap,
the user
must tell the paint system which 
.CT output paint
device
to use.
See manual entries for 
.I paint[1]
or 
.I Pselect[2P]
for details.

Once the user types the command \fIPmap\fR, a (\>) prompt will appear.
The following
commands may be selected at the prompt (for a list of these commands, type
\fBhelp\fR at the (\>) prompt). Those commands that require further subcommands
are indicated by an (S) below:

.IP cell 14
to select a cell 
.CT file map
for output
.IP sites(S)
to select a site 
.CT file map
for output
.IP vector(S)
to select a vector 
.CT file map
for output
.IP labels
to select a 
.CT "label" "paint label"
file for output
.IP window(S)
to place a 
.CT database "data base"
.CT window "geographic window"
outline on the map output
.IP grid(S)
to output a coordinate grid
.IP outline(S)
to outline the areas of the cell 
.CT file map
with a specified color
.IP colortable
to include the color table for the cell 
.CT file map
in the legend below the map
.IP colormode
to select the appropriate method to color 
.CT raster cell
maps 
.XT "and images"
.IP comments(S)
to make comments which will be printed below the map
.IP read 
to provide \fIPmap\fR with a previously prepared input stream.
.IP verbose
to change the amount of talking
.I Pmap
will do
.IP scale
to select a scale for the output map
.IP setcolor    
to change the color of the output map
.IP defpat(S)
to define area fill patterns to be used in later commands
.IP setpat   
to impose a (previously defined) pattern on a cell 
.CT file map
category
.IP text(S)
to place text at the requested 
.CT location position
on the map
.IP line(S)
to place other lines on the output map
.IP point(S)
to place additional points or icons on the output map
.IP end     
to terminate input and begin painting the map

.LP
During interactive usage, the user knows that additional subcommands are
expected when a \fB\*z\fR begins a line (see section below entitled \fBTHE
COMMANDS\fR for more information on commands and subcommands). Once all
subcommands have been entered, enter the subcommand \fBend\fR to return to
command level. When the user is finished entering all \fIPmap\fR commands, enter
a final \fBend\fR command at the (\>) prompt and \fIPmap\fR will begin
generating the output map.

.SH COMMAND LINE INPUTS
A user may choose to run \fIPmap\fR by directing a previously prepared script
file into \fIPmap\fR at the command line. This \fIPmap\fR script file must
contain appropriate \fIPmap\fR commands and subcommands. Do NOT enter the
(\>) or
the \*z prompts in the script file. When preparing a \fIPmap\fR scriptfile,
indenting the subcommands is allowed (\fBNOTE\fR: DO NOT indent \fBdefpat\fR
patterns, see section on \fBdefpat\fR below for details.) This prepared script
file may then be submitted on the \fIPmap\fR command line:
.RS 

\fBPmap\fR < \fIscriptfile\fR
.RE

The output scale can also be designated on the command line. When directing a
script file into \fIPmap\fR, the scale set on the command line will override
the scale set in the script file.
.RS

\fBPmap scale\fR = \fIscale\fR < \fIscriptfile\fR
.RE

These options allow fast, repeated submissions and/or slight modifications
of the input parameters.  In fact, it is expected that most 
.I Pmap 
output will be generated by this method. 

.FI
.SH NAMED COLORS
The following are the colors that are accepted by
.I Pmap :
.ll -5
.IP
aqua
black
blue
brown
cyan
gray
green
grey
indigo
magenta
orange
purple
red
violet
white
yellow

.ll +5
.SH ICONS VERSUS PATTERNS
Icons and patterns as used in 
.I Pmap
are not the same thing.  Patterns are defined and are normally used to cover
those extended areas covered by a cell 
.CT file map
category. A pattern will repeat
above, below and adjacently to itself.  Icons are normally associated with a
specific point in a GRASS \fIsites\fR 
.CT "file." "map."

.SH THE COMMANDS
The following sections describe the commands in more detail. The correct format
and an example using the command is given for each command. (\fBNOTE\fR:
Indenting input is allowed in \fIPmap\fR. This is especially useful when
creating a scriptfile to keep commands and subcommands orderly. However, do NOT
indent when using the \fBdefpat\fR command, as all leading blanks are
interpreted as 0's). Where appropriate, the user may get a listing of
available input for each command or subcommand simply by entering:
.br
\fIcommand\fR \fBlist\fR (for example, \fBcell list\fR).

.SH CELL
.I Cell 
is used to select the cell 
.CT file map
to be output. For each 
.I Pmap
run, only one cell 
.CT file map
can be requested. If no cell 
.CT file map
is requested, an all
white map will be produced.  It can be useful to select no cell 
.CT file map
in order to
provide a white background for vector images.

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE: 
>\fBcell\fR \fIcellmapname/list\fR	>\fBcell soils\fR
.TE

EXAMPLE: This would paint a map of the cell 
.CT file map
\fIsoils\fR.

.SH SITES
.I Sites 
allows a selected 
.CT "sites file" "site map"
to be placed on the output map (for more
information on 
.CT "sites lists," "site maps,"
see manual entry for \fIsites[1]\fR).
The subcommands allow the user to assign:
.TP
1) the \fBcolor\fR for the sites;
.TP
2) the \fBicon\fR to be used to represent the presence of a site (for more
   information on icon files, see the \fIicons\fR section of the \fIpaint[1]\fR
   manual entry);
.TP
3) the \fBsize\fR of the icon (in number of times larger than the size it is in
   the icon file);
.TP
4) whether or not the \fBdesc\fRription associated with each site is also to be
   printed.
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBsites\fR sitemap/list	>\fBsites\fR windmills
\*z\fBcolor\fR color	\*z\fBcolor\fR blue
\*z\fBicon\fR iconfile/list	\*z\fBicon\fR windmill
\*z\fBsize\fR #	\*z\fBsize\fR 2
\*z\fBdesc\fR [y/n]	\*z\fBdesc\fR y
\*z\fBend\fR	\*z\fBend\fR
.TE

Example: This would paint a map with blue windmills (from an icon file created
by the user) placed at all windmill 
.CT locations positions
(from a
.CT "sites file)." "site map)."
These
windmills
would be 2 times larger than the size of the icon in the icon file and have
descriptions (from the 
.CT "sites file)" "site map)"
printed next to them.

.SH VECTOR
.I Vector 
is used to select a vector 
.CT file map
for output.  The subcommands allow the user to
assign:
.TP
1) the \fBcolor\fR for the vector 
.CT file map
lines;
.TP
2) the \fBwidth\fR of the lines in pixels;
.TP
3) the highlight color (\fBhcolor\fR) for the vector 
.CT file map
lines;
.TP
4) the width of the highlight color (\fBhwidth\fR) in pixels;
.TP
5) the line \fBstyle\fR (the \fBstyle\fR option allows the vector 
.CT file map 
lines
   to be dashed in different patterns and colors. This is done by typing a
   series of numbers (0-9) in a desired sequence or pattern. Colors for the
   numbers (1-9) can be assigned using the \fBcolor\fR subcommand. 0's and
   non-digit characters are recognized as blanks. Using 0 would allow the
   colors of the cell 
.CT "file," "map,"
or the background color (if no cell 
.CT file map
was
   selected), to show through.
.TP
6) whether or not the 
.CT file "cell map"
is to be \fBmasked\fR (i.e., if the vector 
.CT file map
.XT data
   is also to stop being painted when \fB"no data"\fR 
.CT values "category values"
are encountered,
   see manual entry \fImask[1]\fR for more information on masks). 
.LP

.TS
lw(25) lw(25) lw(25) 
l l l.
FORMAT:	EXAMPLE 1:	EXAMPLE 2:
>\fBvector\fR vectormap/list	>\fBvector streams	>\fBvector\fR roads
\*z\fBcolor\fR [#] color	\*z\fBcolor\fR blue	\*z\fBwidth\fR 2  
\*z\fBwidth\fR #	\*z\fBwidth\fR 2	\*z\fBstyle\fR 001122
\*z\fBhcolor\fR color	\*z\fBhcolor\fR white	\*z\fBcolor\fR 1 black 
\*z\fBhwidth\fR #	\*z\fBhwidth\fR 1	\*z\fBcolor\fR 2 red
\*z\fBstyle\fR  0-9	\*z\fBmasked\fR y	\*z\fBmasked\fR n
\*z\fBmasked\fR [y/n]	\*z\fBend\fR	\*z\fBend\fR
\*z\fBend\fR
.TE

Example 1: This would paint a map of the vector 
.CT file map
\fIstreams\fR.
These streams would be a total of 3 pixels wide (the inner two pixels blue and
the outer highlight pixel white). The map would not show streams outside of the
current mask.

Example 2: This would paint a map of the vector 
.CT file map
\fIroads\fR. These
roads would be 2 pixels wide and would be dashed blank-black-red (the blank 
areas would show what lies under the roads). This map would show roads inside 
and outside of the current mask.

.SH LABELS
.I Labels
is used to select a 
.CT "paint/labels" "paint labels"
file to be output (see the section \fIlabels\fR
of the \fIpaint[1]\fR manual entry for more information on 
.CT labels "paint labels"
files).

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBlabels\fR  \fIlabelfile/list\fR	>\fBlabels town.names\fR
.TE

Example: This would paint labels (from the 
.CT "paint/labels" "paint labels"
file called
\fItown.names\fR). Presumably, these labels would indicate the names of
towns on the map.

.SH WINDOW
.I Window 
allows the user to place the outline of a smaller 
.CT window "geographic window"
upon the output
.CT "(windows" "geographic windows"
 can be created and saved using the \fIwindow[1]\fR or the
\fIGwindow[2]\fR functions in GRASS; see these manual entries for
more information). The smaller 
.CT window "geographic window"
can be used to show a subsection
of an area,
to which other painted maps are intended to refer.  The subcommands allow the
user to assign:
.TP
1) the \fBcolor\fR of the border.
.TP
2) the \fBwidth\fR (in pixel units) of the border. Defaults are a black border
   of one pixel width.
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBwindow\fR windowfile/list	>\fBwindow\fR subwindow
\*z\fBcolor\fR color	\*z\fBcolor\fR white
\*z\fBwidth\fR #	\*z\fBwidth\fR 2
\*z\fBend\fR	\*z\fBend\fR
.TE

Example: This would place a white outline, 2 pixels wide, of the 
.CT window "geographic window"
called subwindow, onto the output map. This 
.CT window "geographic window"
would have been created
and saved in the 
.CT database "data base"
via \fIwindow[1]\fR or \fIGwindow[2]\fR.
 
.SH GRID 
.I Grid 
overlays a coordinate grid onto the output map. The \fBspacing\fR of the grid
is given (in the 
.CT coordinate "map coordinate"
system units) on the command line. The subcommands
allow the user to specify; 
.TP
1) the \fBcolor\fR of the grid lines;
.TP
2) whether or not the grid lines should be \fBnumbered\fR (and if so, whether it
   should it be numbered every grid line (#=1), every other grid line 
   (#=2), etc., and what color the numbers should be). The defaults are
   black grid lines, unnumbered.
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBgrid\fR spacing	>\fBgrid\fR 10000   
\*z\fBcolor\fR color	\*z\fBcolor\fR green
\*z\fBnumbers\fR # [color]	\*z\fBnumbers\fR 2 red
\*z\fBend\fR	\*z\fBend\fR
.TE

EXAMPLE: (For a UTM-based 
.CT "database)." "data base)."
This would overlay a green grid with a
spacing of 10000 meters onto the output map. Alternate grid lines would be
numbered with a red UTM.

.SH OUTLINE
.I Outline
allows the user to outline areas of a cell 
.CT "file." "map."
 The subcommand \fBcolor\fR
allows the user to specify the color of the outline (default = black). It is
important the user enter the subcommand \fBend\fR even if a color is not
chosen. (It is expected that in the future, the outline of a different cell map
other than the one currently being painted may be placed on the map.)

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBoutline\fR	>\fBcell\fR soils
\*z\fBcolor\fR  color	>\fBoutline\fR   
\*z\fBend\fR	\*z\fBcolor\fR grey
	\*z\fBend\fR
.TE

EXAMPLE: This would outline the category areas of the cell 
.CT file map
\fIsoils\fR in grey.

.SH COLORTABLE
.I Colortable 
allows the user to print a color table below the map as part of the legend.
The color table will display the colors for each cell 
.CT file map
category and the
category 
.CT "description." "label."
To get a color table, you must have previously requested a
cell 
.CT "file." "map."
 Omitting the \fBcolortable\fR command would result in the default of
no color table. \fBNote\fR: Be careful about asking for color tables for
cell 
.CT files maps
 which have many categories, such as elevation. This could result
in an extremely long color table!!!!!

.ne 4
.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBcolortable\fR [y/n]	>\fBcolortable\fR y
.TE

EXAMPLE: This would print a color table as part of the legend to the map.

.SH COLORMODE
.I Colormode
allows the user to select the method used to render color for 
.CT "raster files." "cell maps."
There are two methods,
.I normal
and
.I image.
From a user perspective,
.I normal
should be used for normal 
.CT "maps," "cell maps,"
such as soils, and
.I image
should be used for images, such as Landsat images or NHAP photos.
The
.I normal
mode treats each pixel independently, giving it the printer color that best approximates
the true color.
The
.I image
mode "blends" colors from pixel to pixel. Each pixel gets the printer color
that best approxmiates the true color, but the difference between the printed color
and the true color is carried over to the pixels below and to the right.
The default is
.I normal.

.ne 6
.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBcolormode\fR [normal/image]	>\fBcolormode\fR image
.TE

EXAMPLE: This would select the
.I image
colormode. The assumption is that the cell 
.CT file map
being printed is
an image or a picture, e.g., one band from an NHAP photo, or a color composite
from a Landsat scene, etc.

.SH COMMENTS
Use
.I comments 
if you would like comments to appear below the painted map itself. You may
submit comment text line by line during \fIPmap\fR execution or a via a
prepared comments file.

.TS
lw(25) lw(25) lw(25)
l l l.
FORMAT:	EXAMPLE 1:	EXAMPLE 2:
>\fBcomments\fR [commentsfile]	>\fBcomments\fR	>\fBcell\fR vegetation
\*zcomment text	\*zThis is a comment.	>\fBcomments\fR veg.comments
\*z\fBend\fR	\*z\fBend\fR	\*z\fBend\fR
.TE

EXAMPLE 1: This would print the comment "This is a comment" in the
legend below the map.

EXAMPLE 2: This would print whatever was in the comments file in the
legend below the map. In this case, the comments file may contain comments
pertaining to the cell 
.CT file map
\fIvegetation\fR, such as "This map was created by
classifying a LANDSAT TM image".

.SH READ
.I Read 
allows the user to read any previously prepared UNIX file into \fIPmap\fR.
\fBNote\fR: \fIPmap\fR will not search for this file. The user must be in the
correct directory or specify the full path on the \fBread\fR command line
(~ won't work with this command).

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBread\fR \fIpreviously prepared UNIX file\fR	>\fBread pmap.roads\fR
.TE

EXAMPLE: This example reads the UNIX file \fIpmap.roads\fR into \fIPmap\fR.
This file may contain all the \fIPmap\fR commands and subcommands for placing
the vector 
.CT file map
\fIroads\fR onto the output map. The user may have created this
file because this vector 
.CT file map
is particularly useful for many \fIPmap\fR
outputs. By using the \fBread\fR command, the user need not enter all the input
for the \fBsites\fR command, but simply \fBread\fR the previously prepared file
with the correct commands.

.SH VERBOSE
.I Verbose 
changes the amount of talking 
.I Pmap
will do while painting the map. A higher value implies more chatter. The
default is 2.

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBverbose\fR [0/1/2]	>\fBverbose\fR 0
.TE

EXAMPLE: This would set the amount of chatter \fIPmap\fR will do to a
minimum.

.SH SCALE
.I Scale 
selects a scale for the output map. The scale can be selected either as:
.TP
1) a relative ratio, e.g.  1:25000;
.TP
2) an absolute width of the printed map, e.g. 10 inches;
.TP
3) the number of printed paper panels, e.g. 3 panels;
.TP
4) the number of miles per inch e.g., 1 inch equals 4 miles.
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBscale\fR \fIscale\fR	>\fBscale\fR 1:25000
.TE

EXAMPLE: This example would set the scale of the map to 1 unit = 25000
units. (\fBNOTE\fR: When setting the scale at the command line, setting it again
here would override the scale set at the command line. On the other hand, if
\fIPmap\fR commands were entered via a scriptfile, setting the scale at the
command line would override the scale set in the scriptfile.)

.SH SETCOLOR
.I Setcolor 
is used to override the default color for one or more categories of the cell
.CT "file." "map."
.I Setcolor 
can be requested more than once to override the default color for additional
categories. More than one category can be changed for each request by listing
all the category 
.CT numbers values
separated by commas, but with no spaces.

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBsetcolor\fR cat(s) color	>\fBcell\fR watersheds
	>\fBsetcolor\fR 2,5,8 white
	>\fBsetcolor\fR 10 green
.TE

EXAMPLE: This would set the color for categories 2,5 and 8 of the cell
.CT file map
\fIwatersheds\fR to white and category 10 to green. (\fBNOTE\fR: no
spaces are inserted between the category 
.CT "numbers.)" "values.)"

.SH DEFPAT
.I Defpat 
is used to define new patterns for the output map.  The defined pattern can 
then be assigned to a category by 
.I setpat
(see below). A
.I defpat
file can also be created as a UNIX file and used by requesting 
.I read
and then the UNIX file name before using the
.I setpat
command. (\fBNOTE\fR: Do NOT indent the pattern. Any blank spaces will be 
interpreted as 0's.) The pattern is given a name on the \fIdefpat\fR
command line. The user is then prompted to enter the pattern one line after
another. The pattern is composed of a sequence of numbers 0-9. Zeros are blanks
and 1-9 can be given any of the named colors. The default color
for all the digits will be white unless specified by using the 
.B color
subcommand.  The color option will begin by entering the word 
.B color
at the  
.B \*z
prompt, followed by one of the digits (1-9) in the pattern, followed by one of
the NAMED COLORS. This should be repeated for each of the digits specified to
avoid using white.  After entering 
.B end,
the user can define more patterns by entering 
.I defpat 
again.

.TS
lw(25) lw(25) lw(25) 
l l l.
FORMAT:	EXAMPLE 1:	EXAMPLE 2:
>\fBdefpat\fR name	>\fBdefpat\fR horiz	>\fBdefpat\fR vert
\*zenter pattern	\*z1	\*z1000 
\*z\fBcolor\fR # color	\*z0	\*z\fBcolor\fR 1 green
\*z\fBend\fR	\*z0	\*z\fBend\fR
	\*z0
	\*z\fBcolor\fR 1 black
	\*z\fBend\fR
.TE

.TS
lw(25) lw(25)
l l.
EXAMPLE 3:	EXAMPLE 4:
>\fBdefpat\fR diag	>\fBdefpat\fR tree
\*z00001	\*z     2
\*z0001	\*z    222
\*z001	\*z   22122
\*z01	\*z  22 1 22
\*z1	\*z      1   
\*z\fBcolor\fR 1 red   	\*z
\*z\fBend\fR   	\*z               2
   	\*z              222
   	\*z             22122
   	\*z            22 1 22
   	\*z                1   
	\*z\fBcolor\fR 1 orange 
	\*z\fBcolor\fR 2 black
	\*z\fBend\fR
.TE

EXAMPLE 1: This would create a black horizontal pattern.

EXAMPLE 2: This would create a green vertical pattern.

EXAMPLE 3: This would create a red diagonal pattern.

EXAMPLE 4: This would create a two-toned tree pattern with orange
trunks and green leaves.

.SH SETPAT
.I Setpat 
is used to assign a user defined pattern to a category. The user can 
choose to use:
.TP
1) a pattern created using \fBdefpat\fR (see above);
.TP
2) the patterns built into \fIPmap\fR;
.TP
3) all the patterns the user may have created in a UNIX file.
.LP

.TS
lw(25) lw(25) lw(25) 
l l l.
FORMAT:	EXAMPLE 1:	EXAMPLE 2:
>\fBsetpat\fR cat defpat/builtin/all	>\fBcell\fR veg	>\fBcell\fR soils
	>\fBsetpat\fR 3 vert	>\fBread\fR horiz
	>\fBsetpat/fR 10 tree	>\fBsetpat\fR 5 horiz
.TE

EXAMPLE 1: This assigns the vertical pattern created using \fBdefpat\fR (example
2 in \fBdefpat\fR above) to category 3 of the cell 
.CT file map
\fIvegetation\fR and the
tree pattern (example 4 in \fBdefpat\fR above) to category 10. 

EXAMPLE 2: This uses a previously prepared UNIX file with the correct 
\fBdefpat\fR commands for creating a black horizontal pattern (see example 1 in
\fBdefpat\fR above) and assigns that pattern to category 5 of the cell
.CT file map
\fIsoils\fR via the \fBsetpat\fR command.

.SH TEXT
.I Text 
is used to place text at the requested 
.CT location position
on the map.
.I Text 
requests can be submitted more than once to place different (or the same)
text at different 
.CT "locations." "positions."
More than one line of text can be
submitted by notating the end of a line with a 
.B \en
(e.g.: \fItext\^\fP\en\fImoretext\fP).
The user specifies where the text will be placed by
providing map coordinates or percentages of window.  The desired text follows
on the same command line. Subcommands allow the user to assign:
.IP (1)
the the text \fBfont\fR. The available fonts are:

.in +3
cyrilc gothgbt gothgrt gothitt greekc greekcs greekp greeks italicc
italiccs italict romanc romancs romand romans romant scriptc scripts
.in -3

The default font is romans;
.IP (2)
the \fBcolor\fR of the text;
.IP (3)
the \fBwidth\fR which determines the line thickness of the letters. (The 
default is 1 pixel; larger numbers can be used to simulate bold face);
.IP (4)
the highlight color (\fBhcolor\fR);
.IP (5)
the width of the highlight color (\fBhwidth\fR);
.IP (6)
the text-enclosing-box \fBbackground\fR color;
.IP (7)
the text box \fBborder\fR color;
.IP (8)
the text \fBsize\fR as the vertical height of the letters in meters on the
ground. (Thus, text size will grow or shrink depending on the scale at which
the map is painted);
.IP (8)
the \fBref\fRerence point. This reference point tells \fIPmap\fR what
part of the text should be placed on the 
.CT location position
specified by the map coordinates.
Reference points can refer to:
[lower/upper/center],[left/right/center] of the text to be printed);
.IP (10)
the \fByoffset\fR (which provides finer placement of text by shifting the
text a vertical distance in pixels from the specified north. The vertical 
offset will shift the 
.CT location position
to the south if positive, north if negative);
.IP (11)
the \fBxoffset\fR (which shifts the text a horizontal distance in pixels from
the specified east The horizontal offset will shift the 
.CT location position
east if 
positive, west if negative).
.IP (12)
whether or not the text should be \fBopaque\fR to vectors. Entering \fBno\fR
to the opaque option will allow the user to see any 
.CT "vector lines" vectors
which go
through the text's background box. Otherwise, they will end at the box's 
edge.
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBtext\fR  east north text	>\fBtext\fR 650000 7365000 SPEARFISH LANDCOVER
>\fBtext\fR  x% y% text	\*z\fBfont\fR romand
\*z\fBfont\fR fontname	\*z\fBcolor\fR red
\*z\fBcolor\fR color/none	\*z\fBwidth\fR 2
\*z\fBwidth\fR #	\*z\fBhcolor\fR black
\*z\fBhcolor\fR color/none	\*z\fBhwidth\fR 1
\*z\fBhwidth\fR #	\*z\fBbackground\fR white
\*z\fBbackground\fR color/none	\*z\fBborder\fR red
\*z\fBborder\fR color/none	\*z\fBsize\fR 500
\*z\fBsize\fR #	\*z\fBref\fR lower left 
\*z\fBref\fR reference point	\*z\fBopaque\fR y
\*z\fBxoffset\fR #	\*z\fBend\fR
\*z\fByoffset\fR #
\*z\fBopaque\fR [y/n]
\*z\fBend\fR
.TE

EXAMPLE: (For a UTM-based 
.CT "database)." "data base)."
This would place the text
\fISPEARFISH LAND
COVER\fR at the UTM coordinates E650000 N7365000. The text would be a total of
3 pixels wide (2 pixels of red text and 1 pixel black highlight), have a white
background enclosed in a red box, and be 500 meters in size. The lower right
corner of the text would be centered over the UTM coordinates provided. All
.CT "vector lines" vectors
on the map would stop at the border of this text.

.SH LINE
.I Line 
is used to place additional lines on the output map.  The
.I line 
command can be entered several times, if more than one line is desired. The 
beginning and end points of the line are entered in the command line. These end
points can defined either by map coordinates or by using percentages of the 
window.  Subcommands allow the user to assign: 
.TP
1) the line's \fBcolor\fR;
.TP
2) its \fBwidth\fR in number of pixel units;
.TP
3) whether or not it is to be \fBmasked\fR (i.e., whether these lines will 
   appear outside the current mask. See manual entry for \fImask[1]\fR for more
   information on masks).
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBline\fR east north east north	>\fBline\fR 10% 80% 30% 70%
>\fBline\fR x% y% x% y%	\*z\fBcolor\fR yellow
\*z\fBcolor\fR color	\*z\fBwidth\fR 2
\*z\fBwidth\fR #	\*z\fBmasked\fR n
\*z\fBmasked\fR [y/n]	\*z\fBend\fR
\*z\fBend\fR
.TE

EXAMPLE: This would draw a yellow line from the point (x=10% y=80%
of the total window) to the point (x=30% y=70% of the total window). This line
would be 2 pixels wide and would not be masked by the current mask.

.SH POINT
.I Point 
is used to place additional points or icons on the output map. The 
.I point 
command can be entered several times, each time for an additional point. The
point location is entered in the command line by giving either the map 
coordinates or by using percentages of the window.  Subcommands allow the user
to assign: 
.TP
1) the \fBcolor\fR of the point;
.TP
2) the \fBicon\fR file to be used to represent the point location. (See the 
   \fIicon\fR section in the \fIpaint[1]\fR manual entry for more information
   on creating icons);
.TP
3) its \fBsize\fR in integer multiples of the pattern in the icon file;
.TP
4) whether or not it is to be \fBmasked\fR (i.e., whether the icons will appear
   outside of the current mask. See manual entry for \fImask[1]\fR for more 
   information on masks.)
.LP

.TS
lw(25) lw(25) 
l l.
FORMAT:	EXAMPLE:
>\fBpoint\fR east north	>\fBpoint\fR 456000 7890000
>\fBpoint\fR x% y%	\*z\fBcolor\fR purple     
\*z\fBcolor\fR color	\*z\fBicon\fR diamond
\*z\fBicon\fR iconfile/list	\*z\fBsize\fR 1
\*z\fBsize\fR #	\*z\fBmasked\fR n
\*z\fBmasked\fR [y/n]	\*z\fBend\fR
\*z\fBend\fR	
.TE

EXAMPLE: This would place a purple diamond (from icon file
\fIdiamond\fR) at the point (E456000 N7890000). This diamond would be the same
size it is in the diamond icon file and would not be masked by the current
mask.

.SH END
.I End
is used when all other desired commands have been entered. This final 
.I end
command must be present to terminate input and begin painting the map.

.TS
lw(25)
l.
FORMAT:
>\fBend\fR
.TE
.bp
.SH EXAMPLE Pmap SCRIPT FILE
The following is an example of a \fIPmap\fR script file called 
\fIspear.soils\fR. (For the purposes of illustration, the file is in
two columns.) This script file can be entered at the command line:
.RS

\fBPmap < spear.soils\fR
.RE

.TS
lw(18) lw(42)
lw(20) lw(42).
	(cont.)
\fBcell\fR soils	\fBdefpat\fR diag
\fBvector\fR streams	000001
   \fBcolor\fR blue	00001
   \fBwidth\fR 2	0001
   \fBhcolor\fR white	001
   \fBhwidth\fR 1	01
   \fBmasked\fR y	1
   \fBend\fR 	   \fBcolor\fR 1 red
\fBvector\fR roads 	   \fBend\fR
   \fBwidth\fR 2	\fBsetpat\fR 4 diag
   \fBstyle\fR 001122	\fBtext\fR 608000.00 3476004.73 SPEARFISH SOILS MAP
   \fBcolor\fR 1 black	   \fBcolor\fR red  
   \fBcolor\fR 2 red	   \fBwidth\fR 2  
   \fBmasked\fR n	   \fBhcolor\fR black
   \fBend\fR	   \fBhwidth\fR 1  
\fBlabels\fR town.names	   \fBbackground\fR white
\fBwindow\fR subwindow	   \fBborder\fR red  
   \fBcolor\fR white	   \fBsize\fR 500
   \fBwidth\fR 2	   \fBref\fR lower left
   \fBend\fR	   \fBopaque\fR y
\fBgrid\fR 10000	   \fBend\fR
   \fBcolor\fR green	\fBline\fR 606969.73 3423092.91 616969.73 3423092.91
   \fBnumbers\fR 2 red	   \fBcolor\fR yellow
   \fBend\fR	   \fBwidth\fR 2
\fBoutline\fR	   \fBopaque\fR yes
   \fBcolor\fR black	   \fBend\fR
   \fBend\fR	\fBpoint\fR 40% 60%
\fBcolortable\fR\ y	   \fBcolor\fR purple
\fBcomments\fR	   \fBicon\fR diamond
   This is a comment	   \fBsize\fR 2	
   \fBend\fR	   \fBmasked\fR n
\fBscale\fR 1:25000	   \fBend\fR	
\fBsetcolor\fR 6,8,9 white	\fBend\fR	
\fBsetcolor\fR 10 green
.TE

.SH "SEE ALSO"
.TS
ll.
\fIpaint[1]\fR	For interactive paint use
.br
\fIPselect[2P]\fR	To select the painter
.TE
.SH AUTHOR
Michael Shapiro, U.S. Army Construction Engineering Research Laboratory

