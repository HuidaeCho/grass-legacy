.\" %W% %G%
.TH Ginfer 2G G-language
.nh
.SH NAME
Ginfer \- Cell map overlay tool
.br
.I (G Lanuage Tool)
.SH SYNOPSIS
.B Ginfer
[\fI-t -v\fR] \fIinput_file\fR
.SH DESCRIPTION
.I Ginfer
is an inference engine which applies a set of user-specified rules
to named map layers.  A new map layer \fIinfer\fR is created as output,
whose category contents relects the ability of each grid cell in the
named layers to satisfy the named conditions.

\fIGinfer\fR commands (conditions and consequences) are typed into
a file by the user using a system editor such as vi, and then input to
\fIGinfer\fR as the \fIinput_file\fR named on the command line.
The results are used to generate a new map layer named \fIinfer\fR
in the current mapset.
The two options \fI-t(est)\fR and \fI-v(erbose)\fR
are described in the OPTIONS section below.
This program performs analyses similar to the 
GRASS command
.I combine[1],
but uses a (possibly) more pleasing syntax and approach.

The following commands are available in 
.I Ginfer
.sp .25
.TS
c|c|c|c
l|l|l|l.
Command	Aliases	Followed By	Such As
_
IFMAP	ANDIFMAP	cellmap cat#	geology 2
	ANDMAP		
_
IFNOTMAP	ANDNOTMAP	cellmap cat#	geology 2
_
THENMAPHYP		cat# [statement]	3 nice vacation spot
_
THEN		statement	No sandstone
		condition	
_
IF	AND	predefined	No sandstone
	ANDIF	statement condition		
.TE

These five commands may be used to formulate statements
with functions
ranging from a simple reclassification to a more complex
expert system type application.
Statements are composed of one or more \fBconditions\fR
followed by one or more \fBhypotheses\fR and/or \fBconclusions\fR.
The use of aliases is provided to allow for the use of a command
which has an English meaning consistent with the logic at
that point.

Following is a description of each of the five commands.
The map layers used in the 
examples are in the Spearfish sample database.

.ti -.25i
IFMAP 
.ti -.25i
.B Map condition.
.ti -.25i
Map conditions are questions to each grid cell about the presence of
specified map layer categories.  \fIGinfer\fR questions each grid cell
in the named map layer (here, geology) about its contents (i.e., category).
Grid cells which satisfy the named condition(s) stated by IFMAP
(i.e., here, those grid cells which contain geology map layer categories
4 or 5) will be assigned the subsequently-stated map conclusion or
hypothesis (category), in the new map layer \fIinfer\fR.
Grid cells which fail to satisfy named map condition(s) will
continue to move down through the user's \fIinput_file\fR (searching
for conditions it is able to satisfy) if any additional
conclusions/hypotheses are stated in the file, or will be assigned
category zero in the new map layer \fIinfer\fR (if no additional
conclusions/hypotheses are possible in this \fIinput_file\fR).

example: \fB IFMAP geology 4 5\fR


.ti -.25i
IFNOTMAP 
.ti -.25i
.B Map condition.
.ti -.25i
Like IFMAP, but instead questions each grid cell about the \fIabsence\fR
of specified map layer categories.  Grid cells which meet the IFNOTMAP
conditions (i.e., below, those grid cells which do NOT include owner
map layer category 2) will be assigned the named conclusion\hypothesis,
in the new map layer \fIinfer\fR.

example: \fBIFNOTMAP owner 2\fR



.ti -.25i
THENMAPHYP 
.ti -.25i
.B Map conclusion.
.ti -.25i
Assigns each grid cell a specified category in the new map layer \fIinfer\fR
based on the grid cell's ability or failure to meet conditions
named above this THENMAPHYP statement in the \fIinput_file\fR.
The user should note that although the user can specify a uniquely-named
\fIinput_file\fR, \fIGinfer\fR always directs its output to a file
named \fIinfer\fR in the current mapset (overwriting whatever is
currently in this file).  Therefore, if the user wishes to save this
file for future use, this file should be renamed before the user next
runs \fIGinfer\fR (e.g., using the GRASS commands \fIrename[1]\fR or
\fIGrename[2G]\fR).

It is important to realize that \fIGinfer\fR runs through the conditions
stated in the named \fIinput_file\fR one grid cell at a time, moving
from the top of the input file to the bottom of the input file.
As soon as the grid cell currently being examined by \fIGinfer\fR
satisfies a set of conditions, it is assigned a category in the new
map layer \fIinfer\fR.  \fIGinfer\fR does NOT check to see if that
same grid cell satisfies other conditions named further down in the
input file, too.  Instead, it moves on to the next grid cell, and
begins anew with the conditions named at the top of the input file.
Essentially, this means that conclusions made higher-up in the
input file have precedence over conditions named further down in the
input file.

.IP example: 10
\fB IFMAP density 1
.br
THENMAPHYP 1 no trees\fR
.PP
In the above example, all cells having a category value of
\fI1\fR (non-forest) in the map layer "density,"
are assigned a category value of \fI1\fR in the resultant
map layer \fIinfer\fR.  The trailing text "no trees" is entered
into the category support file for category 1 in the new map layer
\fIinfer\fR.


.ti -.25i
THEN 
.ti -.25i
.B Statement hypothesis.
.ti -.25i
At the conclusion of one or several condition statements,
instead of making a map conclusion as with THENMAPHYP,
the conditions are used to create a hypothesis. This may
then be referenced in later statements using the IF command.
The trailing text at the end of the THEN
statement is used as the means with which
to reference the hypothesis.
An example follows the description of IF below.


.ti -.25i
IF 
.ti -.25i
.B Statement condition.
.ti -.25i
States a condition based on an hypothesis that was
created by a previous THEN statement. IF may be
used only after a THEN has set up the group of statements
that are to be referenced later.

.IP example: 10
\fBIFMAP elevation.255 170-255
.br
ANDIFMAP density 3 4
.br
THEN high elevation with trees
.br
!
.br
IF high elevation with trees
.br
ANDIFMAP owner 2
.br
THENMAPHYP 1 this is the place\fR
.PP
The above example queries each grid cell for the presence of \fIboth\fR
elevations greater than 1580 meters (i.e., for elevation.255 categories
170-255) and a medium to high density of trees (i.e., density categories
3 4).  All areas (i.e., grid cells) that satisfy these criteria are
assigned to the hypothesis
"high elevation with trees." The "!" simply tells 
.I Ginfer
to ignore whatever appears on that line (a comment statement), and is
used here for readability.

The IF statement then references grid cells having "high elevation with
trees" (i.e., those grid cells that satisfied both of the above conditions
named by the IFMAP and ANDIFMAP statements).  If a grid cell \fIboth\fR
has "high elevations with trees" and owner map layer category 2 (areas
owned by the Forest Service), it is assigned by the THENMAPHYP statement
to category 1 in the new map layer \fIinfer\fR.  The trailing text
"this is the place" is automatically entered into the category
support file for the new map \fIinfer\fR.  Grid cells failing
to meet all of the conditions stated in this input file will be
assigned category 0 in the new map layer \fIinfer\fR.
.SH OPTIONS
.IP -t
Allows the user to run
.I Ginfer
in \fItest\fR mode.
The user is questioned about the truth of each condition named
in the file.  \fIGinfer\fR then outputs the value that would be
placed in the new layer \fIinfer\fR for a grid cell meeting conditions
in the way specified by the user.  When no sets of conditions
stated in the input file are satisfied (based upon the user's answers),
cell values of zero are output.  Test mode is used to test the accuracy
of the user's logic.  Users are encouraged to run \fIGinfer\fR in test
mode prior to actually creating map layers.

.IP -v
Provides 
.I verbose 
information about each cell as it is analyzed
according to the statement conditions.
.SH SEE ALSO
\fIGRASS Tutorial: Ginfer\fR
.br
\fIcombine[1], rename[1], weight[1], Gmapcalc[2G], Grename[2G], Gweight[2G]\fR
.SH "AUTHOR"
James Westervelt, U.S. Army Construction Engineering Research Laboratory
.br
Special recognition goes to:
.sp
.nf
George W. Hageman
SOFTMAN Enterprises
P.O. Box 11234
Boulder, Colorado  80301

Daniel S. Cox
In Touch
796 West Peachtree St. NE
Atlanta, GA 30308
.fi
.sp
Mr. Hageman, in the spring of 1986, submitted an inference engine to the UNIX
network.  Mr. Cox reworked the code submitting an new version shortly
thereafter.  It is this code that forms the guts of
.I Ginfer.
