FILE *G_fopen_new() ;
FILE *G_fopen_old() ;
FILE *G_fopen_modify() ;
FILE *G_fopen_append() ;
FILE *G_fopen_sites_old();
FILE *G_fopen_sites_new();
FILE *G_fopen_vector_old();
FILE *G_fopen_vector_new();

CELL *G_allocate_cell_buf() ;
CELL  G_number_of_cats() ;
CELL  G_get_histogram_cat() ;

long  G_get_histogram_count() ;

double G_database_units_to_meters_factor();
double G_northing_to_row();
double G_easting_to_col();
double G_row_to_northing();
double G_col_to_easting();


char **G_tokenize () ;
char *G__file_name () ;
char *G__getenv () ;
char *G__home () ;
char *G__location_path () ;
char *G__mapset_name () ;
char *G_ask_any () ;
char *G_ask_any_ext () ;
char *G_ask_cell_in_mapset () ;
char *G_ask_cell_new () ;
char *G_ask_cell_old () ;
char *G_ask_in_mapset () ;
char *G_ask_in_mapset_ext () ;
char *G_ask_new () ;
char *G_ask_new_ext () ;
char *G_ask_old () ;
char *G_ask_old_ext () ;
char *G_ask_sites_any () ;
char *G_ask_sites_in_mapset () ;
char *G_ask_sites_new () ;
char *G_ask_sites_old () ;
char *G_ask_vector_any () ;
char *G_ask_vector_in_mapset () ;
char *G_ask_vector_new () ;
char *G_ask_vector_old () ;
char *G_calloc() ;
char *G_color_name() ;
char *G_date() ;
char *G_database_unit_name();
char *G_database_projection_name();
char *G_ellipsoid_name();
char *G_find_cell () ;
char *G_find_cell2 () ;
char *G_find_file () ;
char *G_find_file2 () ;
char *G_find_sites () ;
char *G_find_sites2 () ;
char *G_find_vector () ;
char *G_find_vector2 () ;
char *G_fully_qualified_name () ;
char *G_get_ask_return_msg();
char *G_get_cat () ;
char *G_get_cats_title () ;
char *G_get_cell_title();
char *G_getenv () ;
char *G_gisbase() ;
char *G_gisdbase() ;
char *G_home () ;
char *G_lat_format_string();
char *G_location() ;
char *G_location_path() ;
char *G_lon_format_string();
char *G_malloc() ;
char *G_mapset() ;
char *G_mask_info() ;
char *G_myname() ;
char *G_program_name() ;
char *G_realloc() ;
char *G_recreate_command() ;
char *G_squeeze () ;
char *G_store () ;
char *G_tempfile () ;
char *G_tolcase () ;
char *G_toucase () ;
char *G_unit_name ();
char *G_whoami() ;
char *index() ;
char *rindex () ;
struct Flag *G_define_flag();
struct Option *G_define_option();

char * G_strcpy ();
char * G_chrcpy ();
char * G_strncpy ();
char * G_strmov ();
char * G_chrmov ();
char * G_strcat ();
char * G_chrcat ();

struct Key_Value * G_create_key_value();
struct Key_Value * G_fread_key_value ();
struct Key_Value * G_read_key_value_file();
char * G_find_key_value ();
