C-- TAG 8WAY CONNECTED POLYGONS OF CELLS THAT ARE NEGATIVE.
C   IT IS ASSUMED THAT THE FIRST AND LAST LINE AND COLUMN DO
C   NOT CONTAIN NEGATIVE VALUES.
C
      integer*2 dbytes
      parameter (dbytes=8)

      CHARACTER*160 LIFILE
      CHARACTER*160 MAFILE, tfile
      CHARACTER*6 SYSTEM
      INTEGER*2 LFILE,MFILE,NL,NS,I,I1,I2,II,J,CURLABEL,M1,M2,M3,M4
      INTEGER*2 K,KK,ITEMP,TOTLAB,NUM,TEST,CHECK,M
      INTEGER*2 SDIR(20000)
      INTEGER*2 BRIDGE
      INTEGER*2 MASK(20000,2)
      INTEGER*2 MAPTO(21,5000)
      INTEGER*2 LINK(5000),STACK(5000)
      COMMON /MAPS/MAPTO
      COMMON MASK,SDIR,LINK,STACK
      LFILE=8
      MFILE=9
      PRINT *,'ENTER NL,NS,LINK FILE,MASK FILE,SYSTEM(UNIX,VMS,PRIME)'
      read(*,'(a)') tfile
      OPEN(UNIT=10,STATUS='OLD',file=tfile)
      READ(10,*)NL,NS
      READ(10,'(a)')LIFILE
      READ(10,'(a)')MAFILE
      READ(10,'(a)')SYSTEM
C      IF (SYSTEM.EQ.'VMS') GOTO 700
C      IF (SYSTEM.EQ.'PRIME') GOTO 710
C
C     This section is for opening files under UNIX
C
      OPEN(UNIT=LFILE,STATUS='OLD',RECL=NS*2,
     *   FORM='UNFORMATTED',ACCESS='DIRECT',
     *   file=LIFILE)
      OPEN(UNIT=MFILE,STATUS='NEW',RECL=NS*2,
     *   FORM='UNFORMATTED',ACCESS='DIRECT',file=MAFILE)
C      GOTO 13
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     This section is for opening files under VMS
C
C 700  CONTINUE
C      OPEN(UNIT=LFILE,STATUS='OLD',RECL=(NS+1)/2,
C     *   FORM='UNFORMATTED',ACCESS='DIRECT',
C     *   file=LIFILE)
C      OPEN(UNIT=MFILE,STATUS='NEW',RECL=(NS+1)/2,
C     *   FORM='UNFORMATTED',ACCESS='DIRECT',file=MAFILE)
C      GOTO 13
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     This section is for opening files under PRIMOS
C
C 710  CONTINUE
C      OPEN(UNIT=LFILE,STATUS='OLD',RECL=NS,
C     *   FORM='UNFORMATTED',ACCESS='DIRECT',
C     *   file=LIFILE)
C      OPEN(UNIT=MFILE,STATUS='NEW',RECL=NS,
C     *   FORM='UNFORMATTED',ACCESS='DIRECT',file=MAFILE)
C      GOTO 13
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 13   I1=1
      I2=2
      CURLABEL=1
      DO 5 I=1,NS
 5    MASK(I,1)=-1.d00
      WRITE(MFILE,REC=1)(MASK(II,1),II=1,NS)
      READ (LFILE,REC=2)(SDIR(II),II=1,NS)
      DO 10 I=2,NL-1
      MASK(1,I2)=-1
      MASK(NS,I2)=-1
      DO 15 J=2,NS-1
      MASK(J,I2)=-1
      IF(SDIR(J).EQ.0.d00)MASK(J,I2)=0
      IF(SDIR(J).GE.0.d00)GOTO 15
C-- THIS ONE IS PART OF A POLYGON
C   IS THERE ALREADY A LABEL STARTED?
      M1=MASK(J-1,I1)
      M2=MASK(J,I1)
      M3=MASK(J+1,I1)
      M4=MASK(J-1,I2)
      IF(M1.GT.0.OR.M2.GT.0.OR.M3.GT.0.OR.M4.GT.0)GOTO 20
C-- START A NEW LABEL
      MASK(J,I2)=CURLABEL
      DO 25 KK=1,21
 25   MAPTO(KK,CURLABEL)=0
      CURLABEL=CURLABEL+1
      IF(CURLABEL.GT.5000)STOP 99
      GOTO 15
C-- IS A CONTINUATION
 20   MASK(J,I2)=BRIDGE(M1,M2,M3,M4)
 15   CONTINUE
      WRITE(MFILE,REC=I)(MASK(II,I2),II=1,NS)
      ITEMP=I1
      I1=I2
      I2=ITEMP
      READ(LFILE,REC=I+1)(SDIR(II),II=1,NS)
 10   CONTINUE
      DO 22 I=1,NS
 22   MASK(I,1)=-1
      WRITE(MFILE,REC=NL)(MASK(I,1),I=1,NS)
C-- FILL IN LINK
      TOTLAB=CURLABEL-1
      PRINT *,'FOUND ',TOTLAB,' POLYGON PARTS'
      DO 200 I=1,TOTLAB
 200  LINK(I)=I
      DO 210 I=1,TOTLAB
C-- ALREADY PROCESSED?
      IF(LINK(I).NE.I)GOTO 210
C-- NO NEIGHBORS?
      IF(MAPTO(1,I).EQ.0)GOTO 210
      NUM=MAPTO(1,I)
      DO 220 J=1,NUM
 220  STACK(J)=MAPTO(J+1,I)
C-- BUILD STACK
      II=1
 225  TEST=STACK(II)
      IF(MAPTO(1,TEST).EQ.0)GOTO 230
      DO 228 J=2,MAPTO(1,TEST)+1
      CHECK=MAPTO(J,TEST)
      DO 229 K=1,NUM
      IF(CHECK.EQ.STACK(K))GOTO 228
 229  CONTINUE
C-- ADD TO STACK
      NUM=NUM+1
      STACK(NUM)=CHECK
 228  CONTINUE
 230  II=II+1
      IF(II.LE.NUM)GOTO 225
C-- STACK BUILT, DO LINK
      DO 240 J=1,NUM
 240  LINK(STACK(J))=I
 210  CONTINUE
C== READ AND WRITE
      DO 300 I=2,NL-1
      READ(MFILE,REC=I)(MASK(II,1),II=1,NS)
      DO 310 J=2,NS-1
      M=MASK(J,1)
      IF(M.EQ.-1.OR.M.EQ.0)GOTO 310
      MASK(J,1)=LINK(M)
 310  CONTINUE
 300  WRITE(MFILE,REC=I)(MASK(II,1),II=1,NS)
      END
C
      INTEGER*2 FUNCTION BRIDGE(M1,M2,M3,M4)
      INTEGER*2 M1,M2,M3,M4
      INTEGER*2 M(4),MAPTO(21,5000)
      INTEGER*2 I,MI,J,MJ,NUM,K
      COMMON /MAPS/MAPTO
      M(1)=M1
      M(2)=M2
      M(3)=M3
      M(4)=M4
      I=4
      IF(M4.GT.0)GOTO 20
      DO 10 I=1,3
      IF(M(I).GT.0)GOTO 20
 10   CONTINUE
      STOP 111
 20   BRIDGE=M(I)
C-- MAPTO INDEX IS POLY NUMBER
C-- MAPTO(1) IS THE NUMBER OF NEIGHBORS
C-- MAPTO(2-N) IS THE NEIGHBOR LIST
      DO 30 I=1,4
      IF(M(I).LE.0)GOTO 30
      MI=M(I)
      DO 35 J=1,4
      IF(MI.EQ.M(J))GOTO 35
      IF(M(J).LE.0)GOTO 35
      MJ=M(J)
      NUM=MAPTO(1,MI)
      IF(NUM.EQ.0)GOTO 40
      DO 41 K=1,NUM
      IF(MAPTO(K+1,MI).EQ.MJ)GOTO 35
 41   CONTINUE
 40   MAPTO(1,MI)=MAPTO(1,MI)+1
      IF(MAPTO(1,MI).GT.20) STOP 222
      MAPTO(MAPTO(1,MI)+1,MI)=MJ
      MAPTO(1,MJ)=MAPTO(1,MJ)+1
      IF(MAPTO(1,MJ).GT.20)STOP 222
      MAPTO(MAPTO(1,MJ)+1,MJ)=MI
 35   CONTINUE
 30   CONTINUE
      RETURN
      END
