#
# $Header: /hdf/hdf/v3.2r2/src/RCS/makepc.msc,v 1.2 1992/10/12 18:11:51 koziol beta $
#
# $Log: makepc.msc,v $
# Revision 1.2  1992/10/12  18:11:51  koziol
# Updated for v3.2r2 release
#
# Revision 1.1  1992/08/25  21:40:44  koziol
# Initial revision
#
#
# ##################################################################
#
#                   NCSA HDF Version 3.2 release 3
#                          December 1, 1992
#
#           MAKEFILE for creating the HDF library, libdf.a,
#
# This makefile creates the following FORTRAN and C interfaces 
# for HDF in a library called "df.lib": 
#
#              DFR8   (8-bit raster image sets)
#              DF24   (24-bit raster image sets)
#              DFP    (palettes)
#              DFSD   (scientific data sets)
#              DFAN   (annotations)
#              V      (vsets)
#
# See the file INSTALL for further information on how to invoke
# this makefile.
#
# This release of HDF marks the first use of a new set of lower
# level routines.  The makefile also creates these interfaces,
# which are available in C only.  These routines are categorized 
# as follows:
#
#              H      (new lower level i/o)
#              DF     (emulation of old lower level i/o routines)
#              HD     (lower level utilities for developers)
#              HE     (lower level error-handling)
#              HD     (lower level utilities, for developers)
#              DFK    (conversion routines)
#
# ##################################################################
#
#
# PORTING INSTRUCTIONS
# You must modify the lines marked "# ==>".
#

.SUFFIXES : .f

# ==> specify your machine
#MACHINE=WIN3
MACHINE=PC

INCDIR=../include
LIBDIR=../lib
BINDIR=../bin

# ==> where are your hdf.h, hdfi.h and vg.h files located?
IFLAGS=   /I../include /I.

# ==> specify your FORTRAN compiler
FC=fl
FFLAGS= /AH /4I4 $(IFLAGS) /W2 /Od /Tf

# ==> specify your C compiler
CC=cl
#CFLAGS=  /D$(MACHINE) /AH /W4 /Od $(IFLAGS) /Zi /Zp1
CFLAGS=  /D$(MACHINE) /AH /W4 /Ox $(IFLAGS) /Zp1

# ==> where is your HDF library (libdf.a) located?
LIBS= ../lib/df.lib


#BDIR=../backup

# ==> specify your archiver
AR=lib
ARFLAGS=
ARFLAGS2=/NOLOGO /PAGE:32 -+

# ==> specify your archive randomizer
#RANLIB=ranlib

RM=del
RMFLAGS=
LINTFLAGS=
SHAR=zip
ARCHIVE=hdf.zip

HDRS=hfile.h hdf.h hdfi.h herr.h hproto.h dfan.h dfrig.h dfgr.h dfsd.h \
     dfgroup.h dfconvrt.h vg.h df.h dfi.h dfstubs.h dfutil.h

CSRCS=hfile.c herr.c hblocks.c hextelt.c hkit.c dfan.c dfr8.c dfcomp.c \
      dfimcomp.c dfp.c dfgr.c df24.c dfsd.c dfgroup.c dfconv.c dfufp2i.c  \
      vg.c vrw.c vio.c vparse.c vconv.c vsfld.c vgp.c vhi.c     \
      dfutil.c dfstubs.c

COBJS=hfile.obj herr.obj hblocks.obj hextelt.obj hkit.obj dfan.obj dfr8.obj \
        dfcomp.obj dfimcomp.obj dfp.obj dfgr.obj df24.obj dfsd.obj dfgroup.obj \
        dfconv.obj dfufp2i.obj vg.obj vrw.obj vio.obj vparse.obj vconv.obj \
        vsfld.obj vgp.obj vhi.obj dfutil.obj dfstubs.obj

FSRCS=hfileF.c herrF.c hfileFf.f dfanF.c dfr8F.c dfpF.c df24F.c dfsdF.c \
      vgF.c dfF.c dfanFf.f df24Ff.f dfpFf.f dfr8Ff.f dfsdFf.f vgFf.f dfFf.f \
      dfutilF.c dfufp2iF.f constant.f

FOBJS=hfileF.obj herrF.obj hfileFf.obj dfanF.obj dfr8F.obj dfpF.obj df24F.obj \
      dfsdF.obj vgF.obj dfF.obj dfanFf.obj df24Ff.obj dfpFf.obj dfr8Ff.obj \
      dfsdFf.obj vgFf.obj dfFf.obj dfutilF.obj dfufp2iF.obj constant.obj

#add all utilities here
UTILS=vshow.obj

.c.obj:
    $(CC) /c $(CFLAGS) $<
    $(AR) $(ARFLAGS) df.lib $(ARFLAGS2) $*;

.f.obj:
    $(FC) /c $(FFLAGS) $<
    $(AR) $(ARFLAGS) df.lib $(ARFLAGS2) $*;

all: df.lib utils install note

allnostub: libnostub utils install note

df.lib: $(COBJS) #$(FOBJS)
#    -$(RM) df.lib
#    $(AR) $(ARFLAGS) df.lib $(ARFLAGS2) $(COBJS) $(FOBJS)
#    $(RANLIB) df.lib

libnostub: $(COBJS)
    -$(RM) df.lib
#    $(AR) $(ARFLAGS) df.lib $(COBJS)
    $(RANLIB) df.lib

utils: $(UTILS)

note:
    @echo "^G"
    @echo "***********************************************************"
    @echo " libdf.a successfully created."
    @echo ""
    @echo "If you have any old vset files (v 1.0) you must use vcompat"
    @echo "to make them compatible with Vset 2.0 applications"
    @echo ""
    @echo "The utilities (vshow, vmake, vconcat) can be individually"
    @echo "created as follows:"
    @echo ""
    @echo "   cc -D$(MACHINE) program.c libdf.a -o program"
    @echo ""
    @echo "The test programs can be created as follows:"
    @echo ""
    @echo "   make -f Makefile.test"
    @echo ""
    @echo "***********************************************************"
    @echo ""


saber:
    #load -D$(MACHINE) $(CSRCS) $(TSRCS) -lc

hfile.obj: hfile.h hdf.h herr.h hproto.h hdfi.h

herr.obj: hdf.h herr.h hproto.h hdfi.h

hblocks.obj: hfile.h hdf.h herr.h hproto.h hdfi.h

hextelt.obj: hfile.h hdf.h herr.h hproto.h hdfi.h

hkit.obj: hfile.h hdf.h herr.h hproto.h  hdfi.h

dfan.obj: hdf.h herr.h dfan.h hproto.h hdfi.h

dfanF.obj: hdf.h herr.h dfan.h hproto.h hdfi.h

dfr8.obj: hdf.h herr.h dfrig.h hproto.h hdfi.h

dfr8F.obj: hdf.h herr.h dfrig.h hproto.h hdfi.h

dfcomp.obj: hdf.h herr.h dfrig.h hproto.h hdfi.h

dfimcomp.obj: hdf.h herr.h dfrig.h hproto.h hdfi.h

dfp.obj: hdf.h herr.h hproto.h hdfi.h

dfpF.obj: hdf.h herr.h hproto.h hdfi.h

dfgr.obj: hdf.h herr.h dfgr.h hproto.h hdfi.h

df24.obj: hdf.h herr.h dfgr.h hproto.h hdfi.h

df24F.obj: hdf.h herr.h dfgr.h hproto.h hdfi.h

dfsd.obj: hdf.h herr.h dfsd.h hproto.h hdfi.h

dfsdF.obj: hdf.h herr.h dfsd.h hproto.h hdfi.h

dfgroup.obj: hdf.h herr.h hfile.h hproto.h hdfi.h

dfconv.obj: hdf.h herr.h hdfi.h

vg.obj: vg.h hdf.h hdfi.h

vgF.obj: vg.h hdf.h hdfi.h

vrw.obj: vg.h hdf.h hdfi.h

vio.obj: vg.h hdf.h hdfi.h

vparse.obj: vg.h hdf.h hdfi.h

vconv.obj: vg.h hdf.h hdfi.h

vsfld.obj: vg.h hdf.h hdfi.h

vgp.obj: vg.h hdf.h hdfi.h

vhi.obj: vg.h hdf.h hdfi.h

dfstubs.obj: hdf.h herr.h dfstubs.h df.h dfi.h hproto.h hdfi.h

dfF.obj: hdf.h herr.h dfstubs.h df.h dfi.h hproto.h hdfi.h

install:
    -mkdir $(INCDIR)
    -cp $(HDRS) $(INCDIR)
    -mkdir $(LIBDIR)
    -cp df.lib $(LIBDIR)
    -mkdir $(BINDIR)
    -cp $(UTILS) $(BINDIR)

clean:
    -$(RM) $(RMFLAGS) *.obj

cleanup:
    -$(RM) $(RMFLAGS) libdf.a $(UTILS)

lint: $(SRCS) $(R8SRCS)
    $(LINT) $(LINTFLAGS) $(SRCS)

TAGS: $(SRCS) $(HDRS)
    etags $(SRCS) $(HDRS)

#$(ARCHIVE): ChangeLog Makefile $(SRCS) $(HDRS) $(TSRCS) $(USRCS)
#   $(RM) $(RMFLAGS) $(ARCHIVE)
#   $(SHAR) $(ARCHIVE) ChangeLog Makefile $(SRCS) $(HDRS) \
#       $(TSRCS) $(USRCS)

#archive: $(ARCHIVE)

#backup: ChangeLog Makefile $(SRCS) $(HDRS) $(TSRCS) $(USRCS)
#   cp ChangeLog Makefile $(SRCS) $(HDRS) $(TSRCS) $(USRCS) $(BDIR)
 
 
