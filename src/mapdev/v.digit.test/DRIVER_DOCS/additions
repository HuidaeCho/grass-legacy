New Rules for Digitizer Files

Several changes have been made to the format of digitizer files
to accomodate v.digit. These include the following:

1. Files are no longer required to end with the .dgt extension.

2. Several additions have been made to the legal entries in the setup group:

    A) buttons = n. Number of buttons on digitizer cursor. This entry
    lets v.digit know if digitizer keys are available for input. Default is 0,
    so an entry must be made if the digitizer cursor is to be used for input.	

    B) buttonstart = n. Number of the first key on the digitizer cursor.
    Usually 0 or 1. Default is 0.

    C) buttonoffset = n. Difference between 1 and the value sent by the lowest
    digitizer button. In other words, if the digitizer keys sent the values 
    0, 1, ..., n, buttonoffset would equal one, if the button output already
    starts with one, buttonoffset would be zero (the default value). 
    Although these are the two most common cases, it is legal for buttonoffset 
    to be any integer value.  For instance if your keys for some reason output 
    the values 16-32, it would be legal to use the value -15 as the 
    buttonoffset. 

    D)footswitch = 0 or 1. Does the digitizer have a footswitch? 
    Zero for no, one for yes.

    E) digname = string. Name of the digitizer.

    F) description = string. One line description of digitizer, format, etc.

    G) button_up_char = c. Character that indicates that no button is pressed.
    Only appropriate if format is ascii and includes a button press byte.

3. Start is no longer a legal group heading. It has been replaced by
    startrun, startpoint, and startquery, which should include the start
    actions for run, point, and query mode respectively. They may each include
    the same actions previously allowed in the start group, that is:
    send, read, wait, and baud. At least one of these start groups must be 
    included. To use the file with v.digit, startquery must be included.

4. The format strings may now include a 'p' for button push character. 
    Binary format strings may also include a 'p' bit.
    In binary format a one in the p bit indicates that a cursor button is
    pushed. In ascii format a button is assumed to be pushed if the push byte
    does not equal the button up character. This is included to allow formats
    that use this method to differentiate between no button pressed and the 
    zero button pressed.


