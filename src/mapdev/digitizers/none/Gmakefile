
LIBTRANS	= ../../libes/libtrans.a
LIBDIGIT	= ../../v.digit2/libdigit.a

DIG_DRIVER		= $(ETC)/dig_drivers
#  specific driver we are compiling
DRIVER_DIR	= $(DIG_DRIVER)/none


COMPILE_DIGIT 	= $(LDFLAGS) -o  digit  $(OBJ) $(LIBDIGIT) $(VECTLIB) $(LIBTRANS) $(DIG_ATTLIB) $(D_LIB) $(DISPLAYLIB) $(RASTERLIB) $(VASKLIB) $(CURSES) $(MATHLIB) $(GISLIB)

EXTRA_CFLAGS	= $(DIGITFLAGS) $(VECT_INCLUDE)


OBJ = \
	coll_pts.o \
	dig_curses.o \
	dig_dev.o \
	interface.o \
	setup_driver.o

CSRC = \
	coll_pts.c \
	dig_curses.c \
	dig_dev.c \
	interface.c \
	setup_driver.c


all:  driver 

#
#  These directories will be made by this Gmake:
#  $(ETC)/dig_drivers  $(ETC)/dig_drivers/none
#
#  The 'none' driver is a NULL driver .
#
#  If a new digitizer driver is created a directory
#  $(ETC)/dig_drivers/driver_name will have to be created to store the driver
#  programs.  The directory MUST match the 'name' in the digitcap file.
#


driver: mk_driver_dev  mk_driver_dig

#  make directory that contains all the drivers and altek  in ../etc
$(DRIVER_DIR):
	mkdir $(DRIVER_DIR)



mk_driver_dev:
	@echo "";   echo	'  Compiling  NONE  driver.';  echo ""
#  make sure libdigit.a is there
	$(GMAKE)  $(SRC)/mapdev/v.digit2

mk_driver_dig: $(OBJ) $(DRIVER_DIR) $(LIBDIGIT) $(VECTLIB) $(LIBTRANS) $(DIG_ATTLIB) $(DISPLAYLIB) $(RASTERLIB) $(VASKLIB) $(GISLIB)
#  compile driver into the program
	$(CC) $(COMPILE_DIGIT)
	rm -f $(DRIVER_DIR)/digit
	mv digit $(DRIVER_DIR)/digit

$(RASTERLIB) $(DISPLAYLIB) (VASKLIB) $(GISLIB): #
$(LIBDIGIT) $(VECTLIB) $(LIBTRANS) $(DIG_ATTLIB): #

coll_pts.o: ../../v.digit2/digit.h  ../../v.digit2/globals.h 
dig_curses.o:  dig_menu.h
dig_curses.o:  ../../v.digit2/digit.h
dig_curses.o:  ../../v.digit2/menu.h
dig_curses.o:  ../../v.digit2/curses.C

saber_src:
	#load $(CFLAGS) $(EXTRA_CFLAGS) $(CSRC) ../../v.digit2/*.c ../../Vlib/*.c ../../diglib/*.c  $(LIBTRANS) $(DIG_ATTLIB) $(D_LIB) $(DISPLAYLIB) $(RASTERLIB) $(VASKLIB)  $(GISLIB) $(CURSES) $(MATHLIB)
