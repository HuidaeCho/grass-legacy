.TH v.cutter
.SH NAME
\fIv.cutter\fR \- Polygon Cookie Cutter  (Boolean \fIAND\fR Overlay)
.br
.I "(GRASS Vector Program)"
.SH SYNOPSIS
\fBv.cutter\fR
.br
\fBv.cutter help\fR
.br
\fBv.cutter [-u] [-q] cutter\*=\fIname\fR \fBdata\*=\fIname\fR \fBout\*=\fIname\fR 
.SH DESCRIPTION
This program provides a way to generate new maps based on an intersection
of two existing maps.  It in effect provides a way to create masked
versions of vector maps.  Both lines, sites, and polygons are clipped 
correctly.
.SH "COMMAND LINE OPTIONS"
\fBParameters:\fR
.IP \fI-q\fR 18
Run quietly.  Don't print percent information.
.IP \fI-u\fR 18
Intersect all areas even those that are unlabeled. Not generally useful
and also not fully tested.
.IP \fIcutter\*=\fImapname\fR 18
Name of the binary vector file to use for the cookie cutter.
.IP \fIdata\*=\fImapname\fR 18
Name of the binary vector file which is to be cut.
.IP \fIout\*=\fImapname\fR 18
Name of new vector file to be created.
.SH NOTES
The user must run \fIv.spag -i\fR after running \fIv.cutter\fR to remove
identical lines.

The polygons of the cutter map must be labeled to be effective unless
the -u flag is specified.

The attributes of created polygons will be generated from the attributes
of the \fIdata\fR map.
.SH BUGS
There are a few rare situations that are not currently handled correctly.
These mostly involve nodes or vertices intersecting exactly with lines
of the opposite map.  You will know you have hit one of these cases
because a lot of strange text will start spitting out.

Currently the program generates many duplicate lines.  So \fIv.spag -i\fR
must be run on the new file to clean them up.  The -i flag specifies
to only do the identical line removal phase and is a new option 
to \fIv.spag\fR in release 4.1.  Don't forget to use this flag, as
it will run much faster, and will not make any other changes to your data.

Borders between areas with the same attributes are not disolved.

There is no \fIfuzzy\fR data handling code, so expect to see slivers.

There are many places where the code could be optimized greatly.

.SH "SEE ALSO"
.I v.spag,
.I v.digit,
.I v.support,
.I v.clean
.SH AUTHOR
Dave Gerdes,  U.S. Army Construction Engineering Research Laboratory
