MLE	interp.c	/^void MLE(sf,ll,region,M)$/
alpha_dec_max	interp.c	/^static double alpha_dec_max(N)$/
alpha_max	alpha_max.c	/^void alpha_max(N,a,M,eps)$/
copy_reg	reg_util.c	/^void copy_reg(region1,region2)$/
dec_reg	reg_util.c	/^void dec_reg(region)$/
decimate	decimate.c	/^static void decimate(ll1,region1,M,ll2,alpha)$/
eigen	eigen.c	/^int eigen(M,lambda,n) $/
error	segment.c	/^static error(name)$/
extract	model.c	/^void extract(img,region,ll,S)$/
extract_init	model.c	/^void extract_init(S)$/
free_cubic_pyramid	decimate.c	/^void free_cubic_pyramid(pym,wd,ht,M)$/
free_img	multialloc.c	/^void free_img(pt)$/
free_pyramid	decimate.c	/^void free_pyramid(pym,wd,ht)$/
func	alpha_max.c	/^double func(x)$/
get_cubic_pyramid	decimate.c	/^char ****get_cubic_pyramid(w0,h0,M,size)$/
get_img	multialloc.c	/^unsigned char **get_img(wd,ht,size)$/
get_pyramid	decimate.c	/^char ***get_pyramid(w0,h0,size)$/
gradient	alpha_max.c	/^void gradient(grad,N,a,M)$/
increment_reg	segment.c	/^static int increment_reg(region,wd,ht,block_size)$/
init_reg	segment.c	/^static void init_reg(region,wd,ht,block_size)$/
interp	interp.c	/^static void interp(sf1,region,sf2,ll,M,alpha,perio/
invert	invert.c	/^int invert(a,n) $/
levels	decimate.c	/^int levels(wd,ht)$/
levels_reg	reg_util.c	/^int levels_reg(region)$/
line_search	alpha_max.c	/^void line_search(N,a,M,b,eps)$/
log_like	alpha_max.c	/^double log_like(N,a,M)$/
make_pyramid	decimate.c	/^void make_pyramid(ll_pym,region,M,alpha,vlevel)$/
multialloc	multialloc.c	/^multialloc(va_alist)$/
multifree	multialloc.c	/^multifree(r,d)$/
normalize	alpha_max.c	/^int normalize(b)$/
print_N	interp.c	/^static void print_N(N)$/
print_alpha	interp.c	/^static void print_alpha(alpha)$/
read_block	segment.c	/^read_block(img,wd,ht,nbands,region,infn)$/
reg_to_wdht	reg_util.c	/^void reg_to_wdht(region,wd,ht)$/
segment	segment.c	/^segment(S)$/
seq_MAP	interp.c	/^void seq_MAP(sf_pym,region,ll_pym,M,alpha_dec,vlev/
seq_MAP_routine	interp.c	/^static void seq_MAP_routine(sf_pym,region,ll_pym,M/
shift_img	segment.c	/^static shift_img(img,nbands,region,block_size)$/
shift_ll	segment.c	/^static shift_ll(ll_pym,region,block_size)$/
solve	solve.c	/^double  solve(f,a,b,err,code)$/
up_char	interp.c	/^static int up_char(i,j,region,img,pt)$/
up_ll	decimate.c	/^static void up_ll(pt1,M,alpha,pt2)$/
