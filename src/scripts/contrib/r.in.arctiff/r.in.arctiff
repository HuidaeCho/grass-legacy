#!/bin/sh

# 12/99 minor bugfix for black-white TIFFs
# 11/99: commented r.compress, not required for GRASS 5 (MN)
# written by Markus Neteler (V 1.2 - 30. Aug. 98)
#            neteler@geog.uni-hannover.de
# 
# Requirement: tiffinfo - program
#

if [ "$#" -lt 1 ]; then
      echo ""
      echo ""
      echo "Import of TIFF (8bit) raster file and ARC/INFO .tfw file as GRASS raster map"
      echo ""
      echo "Usage: r.in.arctiff filename (without .tif extension!)"
      echo ""
      exit
fi

# First import the image, then create a new header with coordinates:
r.in.tiff -v input=$1.tif output=$1

#check the exit status:
 #if [ $? ]; then
 # echo ""
 # echo "This TIFF-format is not yet supported... Sorry! "
 # echo "Import stopped."
 # exit
 #fi

## not required in GRASS 5.0
#echo ""
#echo "Compressing raster file..."
#r.compress $1

echo "Creating raster file header..."
# get image information:
tiffinfo $1.tif > /tmp/tiffinfo.txt
XWIDTH="`grep Image /tmp/tiffinfo.txt |grep -v Description | head -3 |tail -1 |cut -d' ' -f5`"
YHEIGHT="`grep Image /tmp/tiffinfo.txt |grep -v Description| head -3 |tail -1 |cut -d' ' -f8`"
rm -f /tmp/tiffinfo.txt

## tfw-format example:
## 10.0	 "e-w resol" Size of pixel in x direction.
## 0.0	 N\A Rotation term for row (usually 0).
## 0.0	 N\A Rotation term for column (usually 0).
## -10.0	 "n-s resol" Size of pixel in y direction(- sign is needed!)
## 590005 "west" + 1/2 "e-w resol"  
##                    The x coordinate of pixel in upper left corner.
## 4927995 "north" - 1/2 "n-s resol" 
##                    The y coordinate of pixel in upper left corner.


# store image north, west, n-s-resolution, e-w-resolution, xwidth and yheight 
# in one line in $1.info:
   # .tfw - last line (north):
cat $1.tfw |tail -1 > /tmp/$1.n
sed -e '1,$s/\ //g' /tmp/$1.n > /tmp/$1.i

   # .tfw - last but one line (west):
cat $1.tfw |tail -2 |head -1 > /tmp/$1.w
sed -e '1,$s/\ //g' /tmp/$1.w >>/tmp/$1.i

   # .tfw - last but two line (n-s resol) and eliminate "-":
cat $1.tfw |tail -3 |head -1 > /tmp/$1.rns
sed -e '1,$s/\ //g' /tmp/$1.rns | sed -e '1,$s/\-//g' >>/tmp/$1.i

   # .tfw - first line (e-w resol):
cat $1.tfw |head -1 > /tmp/$1.rew
sed -e '1,$s/\ //g' /tmp/$1.rew >>/tmp/$1.i

echo $XWIDTH >>/tmp/$1.i
echo $YHEIGHT  >>/tmp/$1.i

   #create one line file for awk
paste -s /tmp/$1.i > /tmp/$1.info
rm -f /tmp/$1.i /tmp/$1.n /tmp/$1.w /tmp/$1.rns /tmp/$1.rew


# write image cellhd-file: #############################

# 1. proj and zone info:
cat $LOCATION/WIND |head -2 > $LOCATION/cellhd/$1

# structure of /tmp/$1.info 
#north, west, n-s-resolution, e-w-resolution, xwidth and yheight 
# $1     $2       $3             $4             $5         $6

# 2. north and south info (take n-s res):
north=`awk '{ distx = ( $1 + ($3 / 2)) }
            { printf "%.4f\n", distx }' /tmp/$1.info`

south=`awk '{ distx = ( $1 + ($3 / 2)) - $6 * $3 }
            { printf "%.4f\n", distx }' /tmp/$1.info`
echo "north:      $north" >> $LOCATION/cellhd/$1
echo "south:      $south" >> $LOCATION/cellhd/$1

# 3. west and east (take ew-res)
 west=`awk '{ disty = ( $2 - ($4 / 2)) }
            { printf "%.4f\n", disty }' /tmp/$1.info`
 east=`awk '{ disty = ( $2 - ($4 / 2)) + $5 * $4}
            { printf "%.4f\n", disty }' /tmp/$1.info`

echo "east:       $east" >> $LOCATION/cellhd/$1
echo "west:       $west" >> $LOCATION/cellhd/$1

echo "Boundaries: north:$north, south:$south"
echo "            west:$west, east:$east"

# 4. cols and rows:
echo "cols:       $XWIDTH"   >> $LOCATION/cellhd/$1
echo "rows:       $YHEIGHT"  >> $LOCATION/cellhd/$1

# 5. resolution:
nsres=`awk '{ printf "%.4f\n", $3 }' /tmp/$1.info`
ewres=`awk '{ printf "%.4f\n", $4 }' /tmp/$1.info`

echo "N-S Resolution: $nsres"
echo "W-E Resolution: $ewres"
echo "e-w resol:  $ewres"  >> $LOCATION/cellhd/$1
echo "n-s resol:  $nsres"  >> $LOCATION/cellhd/$1

# 6. format (0=1 byte) and compressed (yes, due to r.compress) status
echo "format:     0"  >> $LOCATION/cellhd/$1
echo "compressed: 1"  >> $LOCATION/cellhd/$1
rm /tmp/$1.info

# The cell-header file is complete now.

echo "Your file $1.tif was successfully imported into GRASS."

