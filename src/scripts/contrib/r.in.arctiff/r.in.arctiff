#!/bin/sh

# $Id$
# 1/2000 several updates by D D Gray <ddgray@armadce.demon.co.uk>
# 12/99 minor bugfix for black-white TIFFs
# 11/99: commented r.compress, not required for GRASS 5 (MN)
# written by Markus Neteler (V 1.2 - 30. Aug. 98)
#            neteler@geog.uni-hannover.de
# 
# Requirement: tiffinfo - program
#

if [ "$#" -lt 1 ]; then
      echo ""
      echo ""
      echo "Import of TIFF (8bit) raster file and ARC/INFO .tfw file as GRASS raster map"
      echo ""
      echo "Usage: r.in.arctiff filename"
      echo ""
      exit
fi

if [ "$1" = "help" ]; then
      echo ""
      echo ""
      echo "Import of TIFF (8bit) raster file and ARC/INFO .tfw file as GRASS raster map"
      echo ""
      echo "Usage: r.in.arctiff filename"
      echo ""
      exit
fi

# Convert spaces in input file name to underscores for name of 
# cell files.

cellfile=`echo $1 | sed 's/\ /_/g'`

# remove .tif extension, if there
INFILE=`echo $1 | sed s/tif=// | sed 's/\.tif$//'`

# First import the image, then create a new header with coordinates:
r.in.tiff -v input="$INFILE.tif" output=${cellfile}

#check the exit status:
if [ $? != 0 ]; then
  echo ""
  echo "ERROR! r.in.tiff not installed or TIFF-format unsupported... Sorry!"
  echo "Import stopped."
  exit
fi

## not required in GRASS 5.0
#echo ""
#echo "Compressing raster file..."
#r.compress ${cellfile}

echo "Creating raster file header..."
# get image information:
#tiffinfo $INFILE.tif > /tmp/tiffinfo.txt
#XWIDTH="`grep Image /tmp/tiffinfo.txt |grep -v Description | head -3 |tail -1 |cut -d' ' -f5`"
#YHEIGHT="`grep Image /tmp/tiffinfo.txt |grep -v Description| head -3 |tail -1 |cut -d' ' -f8`"
#rm -f /tmp/tiffinfo.txt

XWIDTH="`tiffinfo \"$INFILE.tif\" | sed -n \
's/^\ *Image\ Width:\ \([0-9]*\)\ Image\ Length:\ [0-9]*$/\1/p'`" 
YHEIGHT="`tiffinfo \"$INFILE.tif\" | sed -n \
's/^\ *Image\ Width:\ [0-9]*\ Image\ Length:\ \([0-9]*\)$/\1/p'`"
#check the exit status:
if [ $? != 0 ]; then
  echo ""
  echo "ERROR! tiffinfo not installed ... Sorry!"
  echo "Import stopped."
  exit
fi

## tfw-format example:
## 10.0	 "e-w resol" Size of pixel in x direction.
## 0.0	 N\A Rotation term for row (usually 0).
## 0.0	 N\A Rotation term for column (usually 0).
## -10.0	 "n-s resol" Size of pixel in y direction(- sign is needed!)
## 590005 "west" + 1/2 "e-w resol"  
##                    The x coordinate of pixel in upper left corner.
## 4927995 "north" - 1/2 "n-s resol" 
##                    The y coordinate of pixel in upper left corner.


# store image north, west, n-s-resolution, e-w-resolution, xwidth and yheight 
# in one line in $1.info:
   # .tfw - last line (north):
cat "$INFILE.tfw" |tail -1 > "/tmp/$INFILE.n"
sed -e '1,$s/\ //g' "/tmp/$INFILE.n" > "/tmp/$INFILE.i"

   # .tfw - last but one line (west):
cat "$INFILE.tfw" |tail -2 |head -1 > "/tmp/$INFILE.w"
sed -e '1,$s/\ //g' "/tmp/$INFILE.w" >>"/tmp/$INFILE.i"

   # .tfw - last but two line (n-s resol) and eliminate "-":
cat "$INFILE.tfw" |tail -3 |head -1 > "/tmp/$INFILE.rns"
sed -e '1,$s/\ //g' "/tmp/$INFILE.rns" | sed -e '1,$s/\-//g' >>"/tmp/$INFILE.i"

   # .tfw - first line (e-w resol):
cat "$INFILE.tfw" |head -1 > "/tmp/$INFILE.rew"
sed -e '1,$s/\ //g' "/tmp/$INFILE.rew" >>"/tmp/$INFILE.i"

echo $XWIDTH >>"/tmp/$INFILE.i"
echo $YHEIGHT  >>"/tmp/$INFILE.i"

   #create one line file for awk
paste -s "/tmp/$INFILE.i" > "/tmp/$INFILE.info"
rm -f /tmp/$INFILE.i /tmp/$INFILE.n /tmp/$INFILE.w /tmp/$INFILE.rns /tmp/$INFILE.rew


# write image cellhd-file: #############################

# 1. proj and zone info:
cat $LOCATION/WIND |head -2 > "$LOCATION/cellhd/${cellfile}"

# structure of /tmp/$INFILE.info 
#north, west, n-s-resolution, e-w-resolution, xwidth and yheight 
# $1     $2       $3             $4             $5         $6

# 2. north and south info (take n-s res):
north=`awk '{ distx = ( $1 + ($3 / 2)) }
            { printf "%.4f\n", distx }' "/tmp/$INFILE.info"`

south=`awk '{ distx = ( $1 + ($3 / 2)) - $6 * $3 }
            { printf "%.4f\n", distx }' "/tmp/$INFILE.info"`
echo "north:      $north" >> "$LOCATION/cellhd/${cellfile}"
echo "south:      $south" >> "$LOCATION/cellhd/${cellfile}"

# 3. west and east (take ew-res)
 west=`awk '{ disty = ( $2 - ($4 / 2)) }
            { printf "%.4f\n", disty }' "/tmp/$INFILE.info"`
 east=`awk '{ disty = ( $2 - ($4 / 2)) + $5 * $4}
            { printf "%.4f\n", disty }' "/tmp/$INFILE.info"`

echo "east:       $east" >> "$LOCATION/cellhd/${cellfile}"
echo "west:       $west" >> "$LOCATION/cellhd/${cellfile}"

echo "Boundaries: north:$north, south:$south"
echo "            west:$west, east:$east"

# 4. cols and rows:
echo "cols:       $XWIDTH"   >> "$LOCATION/cellhd/${cellfile}"
echo "rows:       $YHEIGHT"  >> "$LOCATION/cellhd/${cellfile}"

# 5. resolution:
nsres=`awk '{ printf "%.4f\n", $3 }' "/tmp/$INFILE.info"`
ewres=`awk '{ printf "%.4f\n", $4 }' "/tmp/$INFILE.info"`

echo "N-S Resolution: $nsres"
echo "W-E Resolution: $ewres"
echo "e-w resol:  $ewres"  >> "$LOCATION/cellhd/${cellfile}"
echo "n-s resol:  $nsres"  >> "$LOCATION/cellhd/${cellfile}"

# 6. format (0=1 byte) and compressed (yes, due to r.compress) status
echo "format:     0"  >> "$LOCATION/cellhd/${cellfile}"
echo "compressed: 1"  >> "$LOCATION/cellhd/${cellfile}"
rm -f "/tmp/$INFILE.info"

# The cell-header file is complete now.

echo "Your file $INFILE.tif was successfully imported into GRASS."
