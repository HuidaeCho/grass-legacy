WARNING: This widget was implemented quickly and is not bulletproofed.
		 It has been tested with Motif 1.0A/X11R4 on Sun4's and SunOS 4.0.3

  The Table widget included here is meant to gather/display/edit tabular 
data. It is defined by the application program as having n rows and m columns.
The number of rows and columns displayed can be adjusted.
The widget has 3 optional areas, a title area, a column heading area, and 
a row heading area. If the table has rows > rows displayed, there will be
a vertical scrollbar, the row headings will scroll with the table. 
The same goes for the columns and column headings
The font of the title and heading areas can be set separately from the 
text entry font. The width and height of the table elements can also be set.
In fact this is the list of settable resources:

Name                   Class                  RepType          Default Value
----                   -----                  -------          -------------
(all Core, Composite, Constraint, and XmManager resources)

XmNrows                XmCRows                unsigned int     1
XmNcolumns             XmCColumns             unsigned int     1
XmNrowsDisplayed       XmCRowsDisplayed       unsigned int     2  
XmNcolumnsDisplayed    XmCColumnsDisplayed    unsigned int     2
XmNcolumnWidth         XmCColumnWidth         Dimension        dynamic
XmNrowHeight           XmCRowHeight           Dimension        dynamic
XmNheadingSpacing      XmCHeadingSpacing      Dimension        4
XmNspacing             XmCSpacing             Dimension        4
XmNmarginWidth         XmCMarginWidth         Dimension        0
XmNmarginHeight        XmCMarginHeight        Dimension        0
XmNentryFontList       XmCEntryFontList       FontList         fixed
XmNheadingFontList     XmCHeadingFontList     FontList         fixed
XmNtitleString         XmCTitleString         XmString         NULL
XmNcolumnHeadings      XmCColumnHeadings      XmStringTable    NULL
XmNrowHeadings         XmCRowHeadings         XmStringTable    NULL

the following CAN be accessed if you must:

XmNhorizontalScrollBar XmCHorizontalScrollBar Widget 		
XmNverticalScrollBar   XmCVerticalScrollBar   Widget


   The Table widget is static in size once it is created, all geometry
requestes are refused. a geometry query WILL return the Table's 
preferred size. 

A set of API functions are included, functionality should be obvious:

Widget XmCreateTable(parent, name, args, argCount)
    Widget   parent;
    char     *name;
    ArgList  args;
    Cardinal argCount;

char * XmTableGetValue(tb,row,col)
    XmTableWidget tb;
    int row, col;

void XmTableSetValue(tb,row,col,value)
    XmTableWidget tb;
    int row, col;
    char *value;

char * XmTableGetRow(tb,row)
    XmTableWidget tb;
    int row;

void XmTableSetRow(tb,row,values)
    XmTableWidget tb;
    int row;
    char *values[];

char * XmTableGetColumn(tb,column)
    XmTableWidget tb;
    int column;

void XmTableSetColumn(tb,column,values)
    XmTableWidget tb;
    int column;
    char *values[];

A test program is included to aid in the use of Table (test.c).

Please return comments (good ones), bug fixes, etc. to:

Kurt Buehler

e-mail:	buehlerk@wasser.colorado.edu

phone: 303)492-3972

mail:
CU-CADSWES 
(Center for Advanced Decision Support for Water and Environmental Systems)
2945 S. Center Green Ct, Suite B
Boulder, CO 80301
